$group
    kind es6

    ${'$'}include set-ctx-functions
    ${'$'}
        setCtxScript ('lint','eslint --ignore-path .gitignore --cache --cache-location ./node_modules/.cache/eslint .');
        setCtxDevDep ('@typescript-eslint/eslint-plugin', '^6.7.4');
        setCtxDevDep ('@typescript-eslint/parser', '^6.7.4');
        setCtxDevDep ('eslint', '^8.38.0');
        setCtxDevDep ('eslint-import-resolver-typescript', '^3.6.1');
        setCtxDevDep ('eslint-plugin-import', '^2.28.1');
        setCtxDevDep ('eslint-plugin-jsx-a11y', '^6.7.1');
        setCtxDevDep ('eslint-plugin-react', '^7.33.2');
        setCtxDevDep ('eslint-plugin-react-hooks', '^4.6.0');

    set module.exports =
        {
            @ root true
            { parserOptions
                @ ecmaVersion "latest"
                @ sourceType "module"
                { ecmaFeatures
                    @ jsx true
            { env
                @ browser true
                @ commonjs true
                @ es6 true
            [ ignorePatterns
                @ "!**/.server"
                @ "!**/.client"
            [ extends
                @ "eslint:recommended"
                # Base config
            [ overrides
                {
                    [ files
                        @ "**/*.{js,jsx,ts,tsx}"
                    [ plugins
                        @ "react"
                        @ "jsx-a11y"
                    [ extends
                        @ "plugin:react/recommended"
                        @ "plugin:react/jsx-runtime"
                        @ "plugin:react-hooks/recommended"
                        @ "plugin:jsx-a11y/recommended"
                    { settings
                        { react
                            @ version "detect"
                        [ formComponents
                            @ "Form"
                        [ linkComponents
                            {
                                @ name "Link"
                                @ linkAttribute "to"
                            {
                                @ name "NavLink"
                                @ linkAttribute "to"
                        { "import/resolver"
                            { typescript
                    # React
                {
                    [ files
                        @ "**/*.{ts,tsx}"
                    [ plugins
                        @ "@typescript-eslint"
                        @ "import"
                    @ parser "@typescript-eslint/parser"
                    { settings
                        @ "import/internal-regex" "^~/"
                        { "import/resolver"
                            { node
                                [ extensions
                                    @ ".ts"
                                    @ ".tsx"
                            { typescript
                                @ alwaysTryTypes true
                    [ extends
                        @ "plugin:@typescript-eslint/recommended"
                        @ "plugin:import/recommended"
                        @ "plugin:import/typescript"
                    # Typescript
                {
                    [ files
                        @ ".eslintrc.cjs"
                    { env
                        @ node true
                    # Node
        #
            # 
            #  This is intended to be a basic starting point for linting in your app.
            #  It relies on recommended configs out of the box for simplicity, but you can
            #  and should modify this configuration to best suit your team's needs.
            #
        #
            # * @type {import('eslint').Linter.Config}