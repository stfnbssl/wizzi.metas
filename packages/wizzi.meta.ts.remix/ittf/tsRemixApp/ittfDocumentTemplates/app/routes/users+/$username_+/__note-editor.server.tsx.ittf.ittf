$group
    import
        @ parseWithZod
        from '@conform-to/zod'
    import
        @ createId
            as cuid
        from '@paralleldrive/cuid2'
    import
        @ unstable_createMemoryUploadHandler
            as createMemoryUploadHandler
        @ json
        @ unstable_parseMultipartFormData
            as parseMultipartFormData
        @ redirect
        :type ActionFunctionArgs
        from '@remix-run/node'
    import
        @ z
        from 'zod'
    import
        @ requireUserId
        from '#app/utils/auth.server.ts'
    import
        @ prisma
        from '#app/utils/db.server.ts'
    import
        @ MAX_UPLOAD_SIZE
        @ NoteEditorSchema
        :type ImageFieldset
        from './__note-editor'
    function imageHasFile
        param image
            :ref ImageFieldset
        :return
            :predicate image
                :intersect
                    :ref ImageFieldset
                    :{
                        :p file
                            :ref NonNullable
                                :param
                                    :[]
                                        :ref ImageFieldset
                                        :literal 'file'
        return Boolean(image.file?.size && image.file?.size > 0)
    function imageHasId
        param image
            :ref ImageFieldset
        :return
            :predicate image
                :intersect
                    :ref ImageFieldset
                    :{
                        :p id
                            :ref NonNullable
                                :param
                                    :[]
                                        :ref ImageFieldset
                                        :literal 'id'
        return image.id != null
    export
        async-function action
            {
                @ request
                :ref ActionFunctionArgs
            const userId
                await
                    _ requireUserId(request)
            const formData
                await
                    _ parseMultipartFormData
                        @ request
                        _ createMemoryUploadHandler
                            {
                                @ maxPartSize MAX_UPLOAD_SIZE
            const submission
                await
                    _ parseWithZod
                        @ formData
                        {
                            @ schema
                                _ NoteEditorSchema.superRefine
                                    async=>
                                        param data
                                        param ctx
                                        if !data.id
                                            return
                                        const note
                                            await
                                                _ prisma.note.findUnique
                                                    {
                                                        { select
                                                            @ id true
                                                        { where
                                                            @ id data.id
                                                            @ ownerId userId
                                        if !note
                                            _ ctx.addIssue
                                                {
                                                    @ code z.ZodIssueCode.custom
                                                    @ message 'Note not found'
                                    ._ transform
                                        async=>
                                            {
                                                @ images
                                                    = []
                                                ... data
                                            return
                                                {
                                                    @ ...data
                                                    @ imageUpdates
                                                        await
                                                            _ Promise.all
                                                                _ images.filter(imageHasId).map
                                                                    async=>
                                                                        param i
                                                                        if imageHasFile(i)
                                                                            return
                                                                                {
                                                                                    @ id i.id
                                                                                    @ altText i.altText
                                                                                    @ contentType i.file.type
                                                                                    @ blob
                                                                                        _ Buffer.from
                                                                                            await
                                                                                                _ i.file.arrayBuffer()
                                                                        else
                                                                            return
                                                                                {
                                                                                    @ id i.id
                                                                                    @ altText i.altText
                                                    @ newImages
                                                        await
                                                            _ Promise.all
                                                                _ images.filter(imageHasFile).filter
                                                                    =>
                                                                        param i
                                                                        + !i.id
                                                                    ._ map
                                                                        async=>
                                                                            param image
                                                                            return
                                                                                {
                                                                                    @ altText image.altText
                                                                                    @ contentType image.file.type
                                                                                    @ blob
                                                                                        _ Buffer.from
                                                                                            await
                                                                                                _ image.file.arrayBuffer()
                            @ async true
            if submission.status !== 'success'
                return
                    _ json
                        {
                            @ result submission.reply()
                        {
                            @ status
                                iif submission.status === 'error'
                                    then 400
                                    else 200
            const
                {
                    @ id noteId
                    @ title
                    @ content
                    @ imageUpdates
                        = []
                    @ newImages
                        = []
                = submission.value
            const updatedNote
                await
                    _ prisma.note.upsert
                        {
                            { select
                                @ id true
                                { owner
                                    { select
                                        @ username true
                            { where
                                @ id noteId ?? '__new_note__'
                            { create
                                @ ownerId userId
                                @ title
                                @ content
                                { images
                                    @ create newImages
                            { update
                                @ title
                                @ content
                                { images
                                    { deleteMany
                                        { id
                                            @ notIn
                                                _ imageUpdates.map
                                                    =>
                                                        param i
                                                        +
                                                            @expr i.id
                                    @ updateMany
                                        _ imageUpdates.map
                                            =>
                                                param updates
                                                ${'('}
                                                    {
                                                        { where
                                                            @ id updates.id
                                                        { data
                                                            @ ...updates
                                                            @ id
                                                                iif updates.blob
                                                                    then cuid()
                                                                    else updates.id
                                    @ create newImages
            return
                _ redirect
                    template
                        + /users/
                        @ updatedNote.owner.username
                        + /notes/
                        @ updatedNote.id
                        +