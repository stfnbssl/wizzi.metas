$group
    import
        @ invariantResponse
        from '@epic-web/invariant'
    import
        @ json
        :type LoaderFunctionArgs
        from '@remix-run/node'
    import
        @ cache
        from '#app/utils/cache.server.ts'
    import
        @ getAllInstances
        @ getInstanceInfo
        @ ensureInstance
        from '#app/utils/litefs.server.ts'
    import
        @ requireUserWithRole
        from '#app/utils/permissions.server.ts'
    export
        async-function loader
            {
                @ request
                @ params
                :ref LoaderFunctionArgs
            await
                _ requireUserWithRole(request, 'admin')
            const searchParams = new URL(request.url).searchParams
            const currentInstanceInfo
                await
                    _ getInstanceInfo()
            const allInstances
                await
                    _ getAllInstances()
            const instance = searchParams.get('instance') ?? currentInstanceInfo.currentInstance
            await
                _ ensureInstance(instance)
            const
                {
                    @ cacheKey
                = params
            _ invariantResponse(cacheKey, 'cacheKey is required')
            return
                _ json
                    {
                        { instance
                            @ hostname instance
                            @ region allInstances[instance]
                            @ isPrimary currentInstanceInfo.primaryInstance === instance
                        @ cacheKey
                        @ value cache.get(cacheKey)