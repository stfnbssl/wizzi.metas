$group
    import
        @ invariantResponse
        from '@epic-web/invariant'
    import
        :type LoaderFunctionArgs
        from '@remix-run/node'
    import
        @ prisma
        from '#app/utils/db.server.ts'
    export
        async-function loader
            {
                @ params
                :ref LoaderFunctionArgs
            _ invariantResponse
                @expr params.imageId
                @ 'Image ID is required'
                {
                    @ status 400
            const image
                await
                    _ prisma.userImage.findUnique
                        {
                            { where
                                @ id params.imageId
                            { select
                                @ contentType true
                                @ blob true
            _ invariantResponse
                @ image
                @ 'Not found'
                {
                    @ status 404
            return
                new Response
                    @expr image.blob
                    {
                        { headers
                            @ 'Content-Type' image.contentType
                            @ 'Content-Length' Buffer.byteLength(image.blob).toString()
                            @ 'Content-Disposition'
                                template
                                    + inline; filename="
                                    @ params.imageId
                                    + "
                            @ 'Cache-Control' 'public, max-age=31536000, immutable'