$group
    import
        @ getFormProps
        @ getInputProps
        @ useForm
        from '@conform-to/react'
    import
        @ getZodConstraint
        @ parseWithZod
        from '@conform-to/zod'
    import
        as E
        from '@react-email/components'
    import
        @ json
        @ redirect
        :type ActionFunctionArgs
        :type MetaFunction
        from '@remix-run/node'
    import
        @ Link
        @ useFetcher
        from '@remix-run/react'
    import
        @ HoneypotInputs
        from 'remix-utils/honeypot/react'
    import
        @ z
        from 'zod'
    import
        @ GeneralErrorBoundary
        from '#app/components/error-boundary.tsx'
    import
        @ ErrorList
        @ Field
        from '#app/components/forms.tsx'
    import
        @ StatusButton
        from '#app/components/ui/status-button.tsx'
    import
        @ prisma
        from '#app/utils/db.server.ts'
    import
        @ sendEmail
        from '#app/utils/email.server.ts'
    import
        @ checkHoneypot
        from '#app/utils/honeypot.server.ts'
    import
        @ EmailSchema
        @ UsernameSchema
        from '#app/utils/user-validation.ts'
    import
        @ prepareVerification
        from './verify.server.ts'
    const ForgotPasswordSchema
        _ z.object
            {
                @ usernameOrEmail
                    _ z.union
                        [
                            @ EmailSchema
                            @ UsernameSchema
    export
        async-function action
            {
                @ request
                :ref ActionFunctionArgs
            const formData
                await
                    _ request.formData()
            _ checkHoneypot(formData)
            const submission
                await
                    _ parseWithZod
                        @ formData
                        {
                            @ schema
                                _ ForgotPasswordSchema.superRefine
                                    async=>
                                        param data
                                        param ctx
                                        const user
                                            await
                                                _ prisma.user.findFirst
                                                    {
                                                        { where
                                                            [ OR
                                                                {
                                                                    @ email data.usernameOrEmail
                                                                {
                                                                    @ username data.usernameOrEmail
                                                        { select
                                                            @ id true
                                        if !user
                                            _ ctx.addIssue
                                                {
                                                    [ path
                                                        @ 'usernameOrEmail'
                                                    @ code z.ZodIssueCode.custom
                                                    @ message 'No user exists with this username or email'
                                            return
                            @ async true
            if submission.status !== 'success'
                return
                    _ json
                        {
                            @ result submission.reply()
                        {
                            @ status
                                iif submission.status === 'error'
                                    then 400
                                    else 200
            const
                {
                    @ usernameOrEmail
                = submission.value
            const user
                await
                    _ prisma.user.findFirstOrThrow
                        {
                            { where
                                [ OR
                                    {
                                        @ email usernameOrEmail
                                    {
                                        @ username usernameOrEmail
                            { select
                                @ email true
                                @ username true
            const
                {
                    @ verifyUrl
                    @ redirectTo
                    @ otp
                =
                    await
                        _ prepareVerification
                            {
                                @ period 10 * 60
                                @ request
                                @ type 'reset-password'
                                @ target usernameOrEmail
            const response
                await
                    _ sendEmail
                        {
                            @ to user.email
                            @ subject
                                template
                                    + Epic Notes Password Reset
                            @ react
                                < ForgotPasswordEmail
                                    @ onboardingUrl {verifyUrl.toString()}
                                    @ otp {otp}
            if response.status === 'success'
                return redirect(redirectTo.toString())
            else
                return
                    _ json
                        {
                            @ result
                                _ submission.reply
                                    {
                                        [ formErrors
                                            @ response.error.message
                        {
                            @ status 500
    function ForgotPasswordEmail
        {
            @ onboardingUrl
            @ otp
            :{
                :p onboardingUrl
                    :string
                :p otp
                    :string
        return
            < E.Html
                @ lang "en"
                @ dir "ltr"
                < E.Container
                    h1
                        < E.Text
                            + Epic Notes Password Reset
                    p
                        < E.Text
                            + Here's your verification code:
                            strong
                                + {otp}
                    p
                        < E.Text
                            + Or click the link:
                    < E.Link
                        @ href {onboardingUrl}
                        + {onboardingUrl}
    export
        const meta
            :ref MetaFunction
            =
                =>
                    return
                        [
                            {
                                @ title 'Password Recovery for Epic Notes'
    export-default
        function ForgotPasswordRoute
            const forgotPassword
                _ useFetcher
                    :param
                        :typeof action
            const [form, fields]
                _ useForm
                    {
                        @ id 'forgot-password-form'
                        @ constraint getZodConstraint(ForgotPasswordSchema)
                        @ lastResult forgotPassword.data?.result
                        m onValidate
                            {
                                @ formData
                            return
                                _ parseWithZod
                                    @ formData
                                    {
                                        @ schema ForgotPasswordSchema
                        @ shouldRevalidate 'onBlur'
            return
                div
                    @ className "container pb-32 pt-20"
                    div
                        @ className "flex flex-col justify-center"
                        div
                            @ className "text-center"
                            h1
                                @ className "text-h1"
                                + Forgot Password
                            p
                                @ className "mt-3 text-body-md text-muted-foreground"
                                + No worries, we'll send you reset instructions.
                        div
                            @ className "mx-auto mt-16 min-w-full max-w-sm sm:min-w-[368px]"
                            < forgotPassword.Form
                                @ method "POST"
                                ... getFormProps(form)
                                < HoneypotInputs
                                div
                                    < Field
                                        @ labelProps
                                            {
                                                @ htmlFor fields.usernameOrEmail.id
                                                @ children 'Username or Email'
                                        @ inputProps
                                            {
                                                @ autoFocus true
                                                _ ...getInputProps
                                                    @expr fields.usernameOrEmail
                                                    {
                                                        @ type 'text'
                                        @ errors {fields.usernameOrEmail.errors}
                                < ErrorList
                                    @ errors {form.errors}
                                    @ id {form.errorId}
                                div
                                    @ className "mt-6"
                                    < StatusButton
                                        @ className "w-full"
                                        @ status
                                            iif forgotPassword.state === 'submitting'
                                                then 'pending'
                                                else form.status ?? 'idle'
                                        @ type "submit"
                                        @ disabled {forgotPassword.state !== 'idle'}
                                        + Recover password
                            < Link
                                @ to "/login"
                                @ className "mt-11 text-center text-body-sm font-bold"
                                + Back to Login
    export
        function ErrorBoundary
            return
                < GeneralErrorBoundary