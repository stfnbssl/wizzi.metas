$group
    import
        @ invariant
        from '@epic-web/invariant'
    import
        @ json
        @ redirect
        from '@remix-run/node'
    import
        @ prisma
        from '#app/utils/db.server.ts'
    import
        @ verifySessionStorage
        from '#app/utils/verification.server.ts'
    import
        @ resetPasswordUsernameSessionKey
        from './reset-password.tsx'
    import
        :type VerifyFunctionArgs
        from './verify.server.ts'
    export
        async-function handleVerification
            {
                @ submission
                :ref VerifyFunctionArgs
            _ invariant(submission.status === 'success', 'Submission should be successful by now')
            const target = submission.value.target
            const user
                await
                    _ prisma.user.findFirst
                        {
                            { where
                                [ OR
                                    {
                                        @ email target
                                    {
                                        @ username target
                            { select
                                @ email true
                                @ username true
            # we don't want to say the user is not found if the email is not found
            # because that would allow an attacker to check if an email is registered
            if !user
                return
                    _ json
                        {
                            @ result
                                _ submission.reply
                                    {
                                        { fieldErrors
                                            [ code
                                                @ 'Invalid code'
                        {
                            @ status 400
            const verifySession
                await
                    _ verifySessionStorage.getSession()
            _ verifySession.set(resetPasswordUsernameSessionKey, user.username)
            return
                _ redirect
                    @ '/reset-password'
                    {
                        { headers
                            @ 'set-cookie'
                                await
                                    _ verifySessionStorage.commitSession(verifySession)