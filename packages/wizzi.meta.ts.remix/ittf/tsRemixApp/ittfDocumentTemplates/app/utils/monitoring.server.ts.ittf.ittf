$group
    import
        @ ProfilingIntegration
        from '@sentry/profiling-node'
    import
        as Sentry
        from '@sentry/remix'
    import
        @ prisma
        from './db.server.ts'
    export
        function init
            _ Sentry.init
                {
                    @ dsn ENV.SENTRY_DSN
                    @ environment ENV.MODE
                    @ tracesSampleRate
                        iif ENV.MODE === 'production'
                            then 1
                            else 0
                    [ denyUrls
                        @ /\/resources\/healthcheck/
                        @ /\/build\//
                            # TODO: be smarter about the public assets...
                        @ /\/favicons\//
                        @ /\/img\//
                        @ /\/fonts\//
                        @ /\/favicon.ico/
                        @ /\/site\.webmanifest/
                    [ integrations
                        new Sentry.Integrations.Http
                            {
                                @ tracing true
                        new Sentry.Integrations.Prisma
                            {
                                @ client prisma
                        @ new ProfilingIntegration()
                    m tracesSampler
                        param samplingContext
                        # ignore healthcheck transactions by other services (consul, etc.)
                        if samplingContext.request?.url?.includes?.('/resources/healthcheck')
                            return 0
                        return 1
                    m beforeSendTransaction
                        param event
                        # ignore all healthcheck related transactions
                        # note that name of header here is case-sensitive
                        if event.request?.headers?.['x-healthcheck'] === 'true'
                            return null
                        return event