$group

    ${'$'}include set-ctx-functions
    ${'$'}
        setCtxDep ('@radix-ui/react-dropdown-menu', '^2.0.6');

    import
        as DropdownMenuPrimitive
        from '@radix-ui/react-dropdown-menu'
    import
        as React
        from 'react'
    import
        @ cn
        from '#app/utils/misc.tsx'
    const DropdownMenu = DropdownMenuPrimitive.Root
    const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger
    const DropdownMenuGroup = DropdownMenuPrimitive.Group
    const DropdownMenuPortal = DropdownMenuPrimitive.Portal
    const DropdownMenuSub = DropdownMenuPrimitive.Sub
    const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup
    const DropdownMenuSubTrigger
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof DropdownMenuPrimitive.SubTrigger
            :param
                :intersect
                    :ref React.ComponentPropsWithoutRef
                        :param
                            :typeof DropdownMenuPrimitive.SubTrigger
                    :{
                        :p inset
                            :optional
                            :boolean
            =>
                {
                    @ className
                    @ inset
                    @ children
                    ... props
                param ref
                < DropdownMenuPrimitive.SubTrigger
                    @ ref {ref}
                    @ className {cn('flex select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent', inset && 'pl-8', className)}
                    ... props
                    + {children}
                    span
                        @ className "ml-auto h-4 w-4"
                        + ▶️
    set DropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName
    const DropdownMenuSubContent
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof DropdownMenuPrimitive.SubContent
            :param
                :ref React.ComponentPropsWithoutRef
                    :param
                        :typeof DropdownMenuPrimitive.SubContent
            =>
                {
                    @ className
                    ... props
                param ref
                < DropdownMenuPrimitive.SubContent
                    @ ref {ref}
                    @ className {cn('z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', className)}
                    ... props
    set DropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName
    const DropdownMenuContent
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof DropdownMenuPrimitive.Content
            :param
                :ref React.ComponentPropsWithoutRef
                    :param
                        :typeof DropdownMenuPrimitive.Content
            =>
                {
                    @ className
                    @ sideOffset
                        = 4
                    ... props
                param ref
                < DropdownMenuPrimitive.Portal
                    < DropdownMenuPrimitive.Content
                        @ ref {ref}
                        @ sideOffset {sideOffset}
                        @ className {cn('z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', className)}
                        ... props
    set DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName
    const DropdownMenuItem
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof DropdownMenuPrimitive.Item
            :param
                :intersect
                    :ref React.ComponentPropsWithoutRef
                        :param
                            :typeof DropdownMenuPrimitive.Item
                    :{
                        :p inset
                            :optional
                            :boolean
            =>
                {
                    @ className
                    @ inset
                    ... props
                param ref
                < DropdownMenuPrimitive.Item
                    @ ref {ref}
                    @ className {cn('relative flex select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50', inset && 'pl-8', className)}
                    ... props
    set DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName
    const DropdownMenuCheckboxItem
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof DropdownMenuPrimitive.CheckboxItem
            :param
                :ref React.ComponentPropsWithoutRef
                    :param
                        :typeof DropdownMenuPrimitive.CheckboxItem
            =>
                {
                    @ className
                    @ children
                    @ checked
                    ... props
                param ref
                < DropdownMenuPrimitive.CheckboxItem
                    @ ref {ref}
                    @ className {cn('relative flex select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50', className)}
                    @ checked {checked}
                    ... props
                    span
                        @ className "absolute left-2 flex h-3.5 w-3.5 items-center justify-center"
                        < DropdownMenuPrimitive.ItemIndicator
                            span
                                @ className "h-4 w-4"
                                svg
                                    @ viewBox "0 0 8 8"
                                    path
                                        @ d "M1,4 L3,6 L7,2"
                                        @ stroke "black"
                                        @ strokeWidth "1"
                                        @ fill "none"
                    + {children}
    set DropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName
    const DropdownMenuRadioItem
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof DropdownMenuPrimitive.RadioItem
            :param
                :ref React.ComponentPropsWithoutRef
                    :param
                        :typeof DropdownMenuPrimitive.RadioItem
            =>
                {
                    @ className
                    @ children
                    ... props
                param ref
                < DropdownMenuPrimitive.RadioItem
                    @ ref {ref}
                    @ className {cn('relative flex select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50', className)}
                    ... props
                    span
                        @ className "absolute left-2 flex h-3.5 w-3.5 items-center justify-center"
                        < DropdownMenuPrimitive.ItemIndicator
                            span
                                @ className "h-2 w-2"
                                + ⚪
                    + {children}
    set DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName
    const DropdownMenuLabel
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof DropdownMenuPrimitive.Label
            :param
                :intersect
                    :ref React.ComponentPropsWithoutRef
                        :param
                            :typeof DropdownMenuPrimitive.Label
                    :{
                        :p inset
                            :optional
                            :boolean
            =>
                {
                    @ className
                    @ inset
                    ... props
                param ref
                < DropdownMenuPrimitive.Label
                    @ ref {ref}
                    @ className {cn('px-2 py-1.5 text-sm font-semibold', inset && 'pl-8', className)}
                    ... props
    set DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName
    const DropdownMenuSeparator
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof DropdownMenuPrimitive.Separator
            :param
                :ref React.ComponentPropsWithoutRef
                    :param
                        :typeof DropdownMenuPrimitive.Separator
            =>
                {
                    @ className
                    ... props
                param ref
                < DropdownMenuPrimitive.Separator
                    @ ref {ref}
                    @ className {cn('-mx-1 my-1 h-px bg-muted', className)}
                    ... props
    set DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName
    const DropdownMenuShortcut
        =>
            {
                @ className
                ... props
                :ref React.HTMLAttributes
                    :param
                        :ref HTMLSpanElement
            return
                span
                    @ className {cn('ml-auto text-xs tracking-widest opacity-60', className)}
                    ... props
    set DropdownMenuShortcut.displayName = 'DropdownMenuShortcut'
    export
        @ DropdownMenu
        @ DropdownMenuTrigger
        @ DropdownMenuContent
        @ DropdownMenuItem
        @ DropdownMenuCheckboxItem
        @ DropdownMenuRadioItem
        @ DropdownMenuLabel
        @ DropdownMenuSeparator
        @ DropdownMenuShortcut
        @ DropdownMenuGroup
        @ DropdownMenuPortal
        @ DropdownMenuSub
        @ DropdownMenuSubContent
        @ DropdownMenuSubTrigger
        @ DropdownMenuRadioGroup