$group
    ${'$'}params &md

    +
    export
        async-function get${'$'}{md.Name}
            ${'$'}foreach item in md.query
                param ${'$'}{item.name}
                    ${'$'}if item.type == 'date'
                        :ref Date
                    ${'$'}elif item.type == 'buffer'
                        :ref Buffer
                    ${'$'}elif item.type == 'object'
                        :{
                    ${'$'}elif item.type == 'array'
                        :[
                    ${'$'}else
                        :${'$'}{item.type}
            :return
                :ref Promise
                    :param
                        :ref CRUDResult
            +
            _ console.log
                @ myname
                @ 'get${'$'}{md.Name}' 
                ${'$'}foreach item in md.query
                    @ ${'$'}{item.name}
            +
            const ${'$'}{md.Name} = Get${'$'}{md.Name}Model()
            +
            return
                new Promise
                    =>
                        param resolve
                        param reject
                        +
                        let query
                            { 
                                ${'$'}foreach item in md.query
                                    @ ${'$'}{item.name} ${'$'}{item.name}
                        +
                        _ ${'$'}{md.Name}.find
                            @ query
                            =>
                                param err
                                    :any
                                param result
                                    :any
                                if err
                                    error myname, 'get${'$'}{md.Name}', '${'$'}{md.Name}.find', 'error', err
                                    return reject(err)
                                if result.length == 1
                                    return 
                                        _ resolve
                                            {
                                                @ oper 'get'
                                                @ ok true
                                                @ item result[0]
                                _ resolve
                                    {
                                        @ oper 'get'
                                        @ ok false
                                        @ message '${'$'}{md.descr} not found'

    +
    export
        async-function get${'$'}{md.Name}ById
            param id
                :string
            :return
                :ref Promise
                    :param
                        :ref CRUDResult
            +
            _ console.log
                @ myname
                @ 'get${'$'}{md.Name}ById' 
                @ id
            +
            const ${'$'}{md.Name} = Get${'$'}{md.Name}Model()
            +
            return
                new Promise
                    =>
                        param resolve
                        param reject
                        +
                        _ ${'$'}{md.Name}.find
                            {
                                @ _id id
                            =>
                                param err
                                    :any
                                param result
                                    :ref I${'$'}{md.Name}Model[]
                                if err
                                    error myname, 'get${'$'}{md.Name}', '${'$'}{md.Name}.find', 'error', err
                                    return reject(err)
                                if result.length == 1
                                    return 
                                        _ resolve
                                            {
                                                @ oper 'get'
                                                @ ok true
                                                @ item result[0]
                                _ resolve
                                    {
                                        @ oper 'get'
                                        @ ok false
                                        @ message '${'$'}{md.descr} not found'                                        
