$group
    ${'$'}params &md

    +
    export
        async-function delete${'$'}{md.Name}
            ${'$'}if md.update_delete_by_id
                param id
                    :string
            ${'$'}foreach item in md.fields
                param ${'$'}{item.name}
                    ${'$'}if item.type == 'date'
                        :ref Date
                    ${'$'}elif item.type == 'buffer'
                        :ref Buffer
                    ${'$'}elif item.type == 'object'
                        :{
                    ${'$'}elif item.type == 'array'
                        :[
                    ${'$'}else
                        :${'$'}{item.type}
                    :optional
            :return
                :ref Promise
                    :param
                        :ref CRUDResult
            +
            #
                _ console.log
                    @ myname
                    @ 'delete${'$'}{md.Name}' 
                    ${'$'}foreach item in md.query
                        @ ${'$'}{item.name}
            +
            const ${'$'}{md.Name} = Get${'$'}{md.Name}Model()
            +
            return
                new Promise
                    =>
                        param resolve
                        param reject
                        +
                        let query
                            { 
                                ${'$'}if md.update_delete_by_id
                                    @ _id id
                                ${'$'}else
                                    ${'$'}foreach item in md.query
                                        @ ${'$'}{item.name} ${'$'}{item.name}
                        +
                        _ ${'$'}{md.Name}.deleteOne
                            @ query
                            =>
                                param err
                                    :any
                                if err
                                    error myname, 'delete${'$'}{md.Name}', '${'$'}{md.Name}.deleteOne', 'error', err
                                    return reject(err)
                                $$ loog myname, 'delete${'$'}{md.Name}', '${'$'}{md.Name}.deleteOne'
                                _ resolve
                                    {
                                        @ oper 'delete'
                                        @ ok true
                                        @ message '${'$'}{md.descr}'