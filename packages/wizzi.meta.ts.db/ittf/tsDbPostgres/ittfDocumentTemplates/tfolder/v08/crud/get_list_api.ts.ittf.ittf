$group
    ${'$'}params &md

    +
    export
        async-function getList${'$'}{md.Name}
            param options
                :any
                :optional
            :return
                :ref Promise
                    :param
                        :ref CRUDResult
            set options = options || {}
            +
            _ console.log
                @ myname
                @ 'getList${'$'}{md.Name}' 
                @ 'options'
                @ options
            +
            
            const ${'$'}{md.Name} = Get${'$'}{md.Name}Model()
            +
            return
                new Promise
                    =>
                        param resolve
                        param reject
                        +
                        const query = ${'$'}{md.Name}.find(options.query);
                        if options.limit
                            _ query.limit(options.limit);
                        if options.sort
                            _ query.sort(options.sort);
                        _ query.find
                            =>
                                param err
                                    :any
                                param result
                                    :any
                                if err
                                    error myname, 'getList${'$'}{md.Name}', '${'$'}{md.Name}.find', 'error', err
                                    return reject(err)
                                $$ loog myname, 'getList${'$'}{md.Name}', '${'$'}{md.Name}.find', 'Object.keys(result)', Object.keys(result)
                                const resultItem = []
                                foreach item in result
                                    const item_obj
                                        {
                                            @ _id item._id
                                            @ id item.id
                                            ${'$'}foreach item in md.fields
                                                @ ${'$'}{item.name} item.${'$'}{item.name}
                                    _ resultItem.push
                                        @ item_obj
                                _ resolve
                                    {
                                        @ oper 'getList'
                                        @ ok true
                                        @ item resultItem