$group
    ${'$'}
        var ctrl = {
            name: 'ApiV1PackageProduction',
            path: '/api/v1/production/package',
            apiSecured: wzCtx.Build.useAuthentication,
            Production: 'Package',
            production: 'package',
        }
    v08/ts/controller${'('} &ctrl )
        ${'$'}append imports
            apiv1_imports${'('} &ctrl )
            import
                @ getWizziMetaFolderById
                from '../api/package'
            +
            const myname = 'features/production/controllers/apiv1packageproduction'
        v08/ts/route${'('} get, /checkname/:owner/:name, this.getCheckPackageName)
        v08/ts/route${'('} get, /meta/:id, this.getWizziMetaFolder)
        v08/ts/route${'('} get, /:owner, this.getPackageProductions)
        v08/ts/route${'('} get, /:owner/:name, this.getPackageProduction)
        v08/ts/route${'('} put, /:id, this.putPackageProduction)
        v08/ts/route${'('} put, /packidiffs/:id, this.putPackageProductionPackiDiffs)
        v08/ts/route${'('} post, /:owner/:name, this.postPackageProduction)
        ${'$'}append handlers
            v08/ts/handler${'('} getPackageProductions )
                rest/check-params${'('} )
                    rest/not-empty${'('} params , owner )
                _ getPackageProductionList
                    {
                        { query
                            @ owner owner
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} getPackageProductions )
            v08/ts/handler${'('} getCheckPackageName )
                check_name${'('} package )
            v08/ts/handler${'('} getPackageProduction )
                rest/check-params${'('} )
                    rest/not-empty${'('} params , owner )
                    rest/not-empty${'('} params , name )
                _ getPackageProduction
                    @ owner
                    @ name
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} getPackageProduction )
            v08/ts/handler${'('} postPackageProduction )
                rest/check-params${'('} )
                    rest/not-empty${'('} params , owner )
                    rest/not-empty${'('} params , name )
                    rest/not-empty${'('} body , description )
                    rest/not-empty${'('} body , packiFiles )
                _ createPackageProduction
                    @ owner
                    @ name
                    @ description
                    @ JSON.stringify(packiFiles)
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} postPackageProduction )
            v08/ts/handler${'('} putPackageProduction )
                rest/check-params${'('} )
                    rest/not-empty${'('} params , id )
                    rest/not-empty${'('} body , owner )
                    rest/not-empty${'('} body , name )
                    rest/not-empty${'('} body , description )
                    rest/not-empty${'('} body , packiFiles )
                _ updatePackageProduction
                    @ id
                    @ owner
                    @ name
                    @ description
                    @ JSON.stringify(packiFiles)
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} putPackageProduction )
            apiv1_put${'('} &ctrl )
            v08/ts/handler${'('} getWizziMetaFolder  )
                ${'$'}$ loog 'getWizziMetaFolder.request.params', request.params
                rest/check-params${'('} )
                    rest/not-empty${'('} params , id )
                _ getWizziMetaFolderById
                    @ id
                    {
                    ._ then
                        =>
                            param packiFiles
                                :ref packiTypes.PackiFiles
                            _ sendSuccess
                                @ response
                                @ packiFiles
                    v08/ts/catch_send_fail${'('} getWizziMetaFolder )
    apiv1_exec_update${'('} &ctrl )