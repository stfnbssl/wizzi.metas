$group
    ${'$'}params &ctrl
    ${'$'}
        $$ old var suffix = prod == 'tFolder' || prod == 'job' ? '' : 'Production';
        var suffix = 'Production';
    v08/ts/handler${'('} put${'$'}{ctrl.Production}PackiDiffs )
        log 'put${'$'}{ctrl.Production}PackiDiffs.request.params', request.params
        $if TODO
            log 'put${'$'}{ctrl.Production}PackiDiffs.request.body.options', Object.keys(request.body.options)
        log 'put${'$'}{ctrl.Production}PackiDiffs.request.body.packiDiffs', Object.keys(request.body.packiDiffs)
        
        rest/check-params${'('} )
            rest/not-empty${'('} params , id )
            $if TODO
                rest/not-empty${'('} body , options )

        _ get${'$'}{ctrl.Production}${'$'}{suffix}ObjectById
            @ id
            ._ then
                =>
                    param prev${'$'}{ctrl.Production}
                        :any
                    log 'put${'$'}{ctrl.Production}PackiDiffs.prevPackiFiles', Object.keys(prev${'$'}{ctrl.Production}.packiFiles)
                    const pm
                        new PackiBuilder
                            @ prev${'$'}{ctrl.Production}.packiFiles
                    _ pm.applyPatch_ChangesOnly
                        @ request.body.packiDiffs
                    return
                        _ exec_update${'$'}{ctrl.Production}${'$'}{suffix}
                            @ request
                            @ response
                            @ pm.packiFiles
            v08/ts/catch_send_fail${'('} put${'$'}{ctrl.Production}PackiDiffs.get${'$'}{ctrl.Production}${'$'}{suffix}ObjectById )