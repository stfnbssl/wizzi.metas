$group
    ${'$'}
        var ctrl = {
            name: 'ApiV1PluginProduction',
            path: '/api/v1/production/plugin',
            apiSecured: wzCtx.Build.useAuthentication,
            Production: 'Plugin',
            production: 'plugin',
        }
    v08/ts/controller${'('} &ctrl )
        ${'$'}append imports
            apiv1_imports${'('} &ctrl )
            +
            const myname = 'features/production/controllers/apiv1plugin'
        v08/ts/route${'('} get, /:owner, this.getPlugins)
        v08/ts/route${'('} get, /checkname/:owner/:name, this.getCheckPluginName)
        v08/ts/route${'('} get, /:owner/:name, this.getPlugin)
        v08/ts/route${'('} put, /:id, this.putPlugin)
        v08/ts/route${'('} put, /packidiffs/:id, this.putPluginPackiDiffs)
        v08/ts/route${'('} post, /:post, this.postPlugin)
        ${'$'}append handlers
            v08/ts/handler${'('} getPlugins )
                rest/check-params${'('} )
                    rest/not-empty${'('} params , owner )
                _ getPluginProductionList
                    {
                        { query
                            @ owner owner
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} getPlugins )
            v08/ts/handler${'('} getCheckPluginName )
                check_name${'('} plugin )
            v08/ts/handler${'('} getPlugin )
                rest/check-params${'('} )
                    rest/not-empty${'('} params , owner )
                    rest/not-empty${'('} params , name )
                _ getPluginProduction
                    @ owner
                    @ name
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} getPlugin )
            v08/ts/handler${'('} postPlugin )
                rest/check-params${'('} )
                    rest/not-empty${'('} params , owner )
                    rest/not-empty${'('} params , name )
                    rest/not-empty${'('} body , description )
                    rest/not-empty${'('} body , packiFiles )
                _ createPluginProduction
                    @ owner
                    @ name
                    @ description
                    @ JSON.stringify(packiFiles)
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} postPlugin )
            v08/ts/handler${'('} putPlugin )
                rest/check-params${'('} )
                    rest/not-empty${'('} params , id )
                    rest/not-empty${'('} body , owner )
                    rest/not-empty${'('} body , name )
                    rest/not-empty${'('} body , description )
                    rest/not-empty${'('} body , packiFiles )
                _ updatePluginProduction
                    @ id
                    @ owner
                    @ name
                    @ description
                    @ JSON.stringify(packiFiles)
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} putPlugin )
            apiv1_put${'('} &ctrl )
    apiv1_exec_update${'('} &ctrl )