$group
    ${'$'}
        var ctrl = {
            name: 'ApiV1PluginProduction',
            path: '/api/v1/production/plugin',
            apiSecured: wzCtx.Build.useAuthentication,
            Production: 'Plugin',
            production: 'plugin',
        }
    v08/ts/controller${'('} &ctrl )
        ${'$'}append imports
            apiv1_imports${'('} &ctrl )
            +
            const myname = 'features/production/controllers/apiv1plugin'
        v08/ts/route${'('} get, /:owner, this.getPluginProductions)
        v08/ts/route${'('} get, /checkname/:owner/:name, this.getCheckPluginName)
        v08/ts/route${'('} get, /:owner/:name, this.getPluginProduction)
        v08/ts/route${'('} put, /:id, this.putPluginProduction)
        v08/ts/route${'('} put, /packidiffs/:id, this.putPluginProductionPackiDiffs)
        v08/ts/route${'('} post, /:post, this.postPluginProduction)
        ${'$'}append handlers
            v08/ts/handler${'('} getPluginProductions )
                _ getPluginProductionList
                    {
                        { query
                            @ owner request.params.owner
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} getPluginProductions )
            v08/ts/handler${'('} getCheckPluginName )
                check_name${'('} plugin )
            v08/ts/handler${'('} getPluginProduction )
                _ getPluginProduction
                    @ request.params.owner
                    @ request.params.name
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} getPluginProduction )
            v08/ts/handler${'('} postPluginProduction )
                _ createPluginProduction
                    @ request.params.owner
                    @ request.params.name
                    @ request.body.description
                    @ JSON.stringify(request.body.packiFiles)
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} postPluginProduction )
            v08/ts/handler${'('} putPluginProduction )
                _ updatePluginProduction
                    @ request.params.id
                    @ request.body.owner
                    @ request.body.name
                    @ request.body.description
                    @ JSON.stringify(request.body.packiFiles)
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} putPluginProduction )
            apiv1_put${'('} &ctrl )
    apiv1_exec_update${'('} &ctrl )