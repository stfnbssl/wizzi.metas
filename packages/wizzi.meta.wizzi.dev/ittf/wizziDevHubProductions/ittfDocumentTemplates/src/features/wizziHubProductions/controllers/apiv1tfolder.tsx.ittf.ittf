$group
    ${'$'}
        var ctrl = {
            name: 'ApiV1TFolder',
            path: '/api/v1/production/tfolder',
            apiSecured: wzCtx.Build.useAuthentication,
            Production: 'TFolder',
            production: 'tfolder',
        }
    v08/ts/controller${'('} &ctrl )
        ${'$'}append imports
            apiv1_imports${'('} &ctrl )
            +
            const myname = 'features/production/controllers/apiv1tfolder'
        v08/ts/route${'('} get, /:owner, this.getTFolders)
        v08/ts/route${'('} get, /checkname/:owner/:name, this.getCheckTFolderName)
        v08/ts/route${'('} get, /:owner/:name, this.getTFolder)
        v08/ts/route${'('} put, /:id, this.putTFolder)
        v08/ts/route${'('} put, /packidiffs/:id, this.putTFolderPackiDiffs)
        v08/ts/route${'('} post, /:owner/:name, this.postTFolder)
        ${'$'}append handlers
            v08/ts/handler${'('} getTFolders )
                _ getTFolderList
                    {
                        { query
                            @ owner request.params.owner
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} getTFolders )
            v08/ts/handler${'('} getCheckTFolderName )
                check_name${'('} tFolder )
            v08/ts/handler${'('} getTFolder )
                _ getTFolder
                    @ request.params.owner
                    @ request.params.name
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} getTFolder )
            v08/ts/handler${'('} postTFolder )
                _ createTFolder
                    @ request.params.owner
                    @ request.params.name
                    @ request.body.description
                    @ JSON.stringify(request.body.packiFiles)
                    ._ then
                        =>
                            param result
                                :any
                            _ invalidateCache
                                @ request.params.owner
                                @ request.params.name
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} postTFolder )
            v08/ts/handler${'('} putTFolder )
                _ updateTFolder
                    @ request.params.id
                    @ request.body.owner
                    @ request.body.name
                    @ request.body.description
                    @ JSON.stringify(request.body.packiFiles)
                    ._ then
                        =>
                            param result
                                :any
                            _ invalidateCache
                                @ request.params.owner
                                @ request.params.name
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail${'('} putTFolder )
            apiv1_put${'('} &ctrl )
    apiv1_exec_update${'('} &ctrl )