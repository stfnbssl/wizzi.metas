$group
    ${'$'}
        var ctrl = {
            name: 'ApiV1WizziMeta',
            path: '/api/v1/meta',
        }
    v08/ts/controller${'('} &ctrl)
        ${'$'}append imports
            import
                @ getProvidedMetas
                @ getMetaParameters
                @ executeMetaProduction
                @ executeMetaProductionWithInMemoryPlugins
                from '../api/wizziMeta'
            import
                @ WizziMetaRequest
                from '../types'
            +
            const myname = 'features/wizzimeta/controllers/wizzimeta'
        _ this.router.get('/provides', this.provides)
        _ this.router.post('/parameters', this.metaParameters)
        _ this.router.post('/execute', this.execute)
        _ this.router.post('/executeinmemory', this.executeinmemory)
        ${'$'}append handlers
            v08/ts/handler${'('} provides)
                _ getProvidedMetas
                    {
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail${'('} ApiV1WizziMeta.provides.getProvidedMetas )
            v08/ts/handler${'('} metaParameters)
                const metaRequest
                    :ref WizziMetaRequest
                    = request.body
                _ getMetaParameters
                    @ metaRequest
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail${'('} ApiV1WizziMeta.parameters.getParameters )
            v08/ts/handler${'('} execute)
                const metaRequest
                    :ref WizziMetaRequest
                    = request.body
                _ executeMetaProduction
                    @ metaRequest
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail${'('} ApiV1WizziMeta.execute.executeMetaProduction )
            v08/ts/handler${'('} executeinmemory)
                const metaRequest
                    :ref WizziMetaRequest
                    = request.body
                _ executeMetaProductionWithInMemoryPlugins
                    @ metaRequest
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail${'('} ApiV1WizziMeta.executeinmemory.executeMetaProductionWithInMemoryPlugins )