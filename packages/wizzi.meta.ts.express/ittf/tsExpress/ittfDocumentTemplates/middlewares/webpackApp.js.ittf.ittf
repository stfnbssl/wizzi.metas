$group

    import path from 'path'
    import express from 'express'
    import webpack from 'webpack'
    import webpackDevMiddleware from 'webpack-dev-middleware'
    ${'$'}if wzCtx.Build.useWebpackApp
        ${'$'}foreach item in wzCtx.Build.webpackApp.items
            import
                @ config
                    as config_${'$'}{item.name}
                from '../site/webpacks/${'$'}{item.name}/webpack.config.js'

        ${'$'}foreach item in wzCtx.Build.webpackApp.items
            success 'WebpackAppMiddleware config_${'$'}{item.name}', config_${'$'}{item.name}
    
    +
    export 
        const WebpackAppMiddleware
            => 
                param app
                ${'$'}if wzCtx.Build.useWebpackApp
                    ${'$'}foreach item in wzCtx.Build.webpackApp.items
                        if process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'test'
                            _ app.use
                                @ '/webpacks/${'$'}{item.name}/dist'
                                _ express.static(config_${'$'}{item.name}.output.publicPath)
                        else
                            const compiler = webpack(config_${'$'}{item.name})
                            _ app.use
                                _ webpackDevMiddleware
                                    @ compiler
                                    { 
                                        @ writeToDisk !!${'$'}{item.writeToDisk}
                                        @ publicPath config_${'$'}{item.name}.output.publicPath
                            success 'WebpackAppMiddleware.pack ${'$'}{item.name} on path', config_${'$'}{item.name}.output.publicPath, 'writeToDisk',  !!${'$'}{item.writeToDisk}