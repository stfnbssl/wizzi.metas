$group

    ${'$'}include set-ctx-functions
    ${'$'}
        setCtxDep ('express-session', '^1.18.0');
        setCtxDevDep ('@types/express-session', '^1.18.0');
        setCtxEnvValues ('SESSION_SECRET', 'sessionSecret', 'str');
    
    import 
        @ Application
        @ CookieOptions
        from 'express'
    import 
        @ MiddlewareType
        from '#/src/features/app/types'
    import session
        from 'express-session'
    $if metaCtx.useTsDbMongoDb && metaCtx.tsExpress.useSessionStore
        import MongoStore from 'connect-mongo'
        import mongoose from 'mongoose'
    import 
        @ config
        from '#/src/features/config'
    +
    export 
        const SessionMiddleware
            :ref MiddlewareType
            =
                => 
                    param app
                        :ref Application
                    info "SessionMiddleware process.env.NODE_ENV: " + process.env.NODE_ENV
                    const cookieOptions
                        :ref CookieOptions
                        =
                            { 
                                @ secure
                                    iif process.env.NODE_ENV === 'production'
                                        then true
                                        else false
                                    # serve secure cookies, requires https
                                @ httpOnly false
                                @ sameSite 'none'
                                @ maxAge 14 * 24 * 60 * 60 * 1000
                                    # expires in 14 days
                    $if metaCtx.useTsDbMongoDb && metaCtx.tsExpress.useSessionStore
                        let connectUrl: string
                        const { mongoHost, mongoUser, mongoPassword, mongoPath } = config;
                        if mongoUser && mongoUser.length > 0 &&
                            \b mongoPassword && mongoPassword.length > 0 &&
                            \b mongoHost && mongoHost.length > 0
                            set connectUrl = `${mongoHost}://${mongoUser}:${mongoPassword}${mongoPath}`;
                        else
                            # example 'mongodb://localhost/test'
                            set connectUrl = `${mongoPath}`;
                    const sessionOptions
                        :ref session.SessionOptions
                        =
                            { 
                                @ name '${'$'}{wzCtx.name}.sid'
                                @ secret config.sessionSecret
                                $if metaCtx.useTsDbMongoDb && metaCtx.tsExpress.useSessionStore
                                    @ store
                                        _ MongoStore.create
                                            { 
                                                $$ @ client mongoose.connection.getClient()
                                                @ mongoUrl connectUrl
                                                @ dbName "wizzi"
                                                @ stringify false
                                                @ ttl 14 * 24 * 60 * 60
                                                # save session 14 days
                                $else 
                                    $* TODO Not working
                                    @ store
                                        new session.MemoryStore()
                                    *$
                                $if metaCtx.useTsDbMongoDb && metaCtx.tsExpress.useSessionStore
                                    @ cookie cookieOptions
                                @ resave false
                                @ saveUninitialized false
                    if process.env.NODE_ENV == "production"
                        _ app.set('trust proxy', 1)
                    _ app.use(session(sessionOptions))
                    $if metaCtx.useTsDbMongoDb && metaCtx.tsExpress.useSessionStore
                        info "SessionMiddleware installed, using MongoStore", connectUrl
                        info "SessionMiddleware installed, mongoose.connection.getClient() was", mongoose.connection.getClient()
                    $else
                        info "SessionMiddleware installed"