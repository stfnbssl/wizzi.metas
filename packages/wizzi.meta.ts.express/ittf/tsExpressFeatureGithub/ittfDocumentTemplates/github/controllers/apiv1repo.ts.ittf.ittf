$group
    
    ${'$'}
        var ctrl = {
            name: 'ApiV1Repo',
            path: '/api/v1/github/repo',
            apiSecured: wzCtx.App.isLocal == false,
        }
    
    v08/ts/controller${'('}&ctrl)
            
        ${'$'}append imports
            import 
                @ config
                from '../../config'
            import
                @ getRepositories
                @ getRepository
                @ getPackiTemplateRepositories
                @ createRepository
                @ getRevisions
                @ getBranches
                @ createBranch
                @ cloneBranch
                @ updateBranch
                @ getCommits
                @ getContents
                from '../api/repo'
            +
            const myname = 'features/github/controllers/apiv1repo'

        v08/ts/route_api_secured${'('} get, /:owner, this.getRepoList)
        v08/ts/route_api_secured${'('} get, /:owner/:name, this.getRepo)
        v08/ts/route_api_secured${'('} get, /clone/:owner/:name/:branch, this.cloneBranch)
        
        ${'$'}append handlers
            
            v08/ts/handler${'('}getRepoList)
                _ getRepositories
                    @ config.githubAccessToken
                    ._ then
                        =>
                            param result
                                :any
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail${'('}getRepoList)

            v08/ts/handler${'('}getRepo)
                $$ loog 'getRepo.request.params', request.params
                _ getRepository
                    @ request.params.owner
                    @ request.params.name
                    @ config.githubAccessToken
                    ._ then
                        =>
                            param result
                                :any
                            $$ loog 'getRepo.result', result
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail${'('}getRepo)

            v08/ts/handler${'('}cloneBranch)
                $$ loog 'postRepo.request.params', request.params
                $$ loog 'postRepo.request.body', request.body
                _ cloneBranch
                    { 
                        @ owner request.params.owner
                        @ name request.params.name
                        @ token config.githubAccessToken
                    @ request.params.branch || 'main'
                    ._ then
                        =>
                            param result
                                :any
                            $$ loog 'postRepo.create.result', result
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_fail${'('}cloneBranch)