$group

    $file __dot__wizzi/models/wzctx.json.ittf.ittf
        {
            ${'$'}{'$'}include v08/env/vars
            ---
            name "${metaCtx.name}"
            version "${metaCtx.version}"
            description "${metaCtx.description}"
            $if metaCtx.author
                { author
                    name "${metaCtx.author.name}"
                    email "${metaCtx.author.email}"
            $if metaCtx.licence
                { license
                    type "${metaCtx.license}"
                    url "${metaCtx.license_url}"            
            ---
            { App
                name "${metaCtx.App.name}"
                title "${metaCtx.App.title}"
                isLocal ${metaCtx.isLocal ? "true" : "false"}
                isProduction ${metaCtx.isProduction ? "true" : "false"}
                port "${metaCtx.port}"
                useSsl ${metaCtx.useSsl ? "true" : "false"}
                siteUrl "${metaCtx.siteUrl}"
                baseUrl "${metaCtx.baseUrl}"
                siteUrlLocal "${metaCtx.siteUrlLocal}"
                baseUrlLocal "${metaCtx.baseUrlLocal}"
                apiVersion "${metaCtx.apiVersion}"
                { constants
                    { preview
                        minWidth 700
                [ Components
            ---
            { Styles
            ---
            { Build
                [ features
                    $if metaCtx.useTsExpressFeatureAccount
                        {
                            name "account"
                            hasControllers true
                            useMongoDb true
                    $if metaCtx.useTsExpressFeatureAuth
                        $if metaCtx.tsExpressFeatureAuth.useLocalUserFromConfig
                        $else
                            {
                                name "auth"
                                hasControllers true
                                useMongoDb false
                    $if metaCtx.useTsExpressFeatureBlog
                        {
                            name "blog"
                            hasControllers true
                            useMongoDb true
                    $if metaCtx.useTsExpressFeatureGithub
                        {
                            name "github"
                            hasControllers true
                            useMongoDb false
                    $if metaCtx.useTsExpressFeaturePacki
                        {
                            name "packi"
                            $if metaCtx.tsExpressFeaturePacki.usePackiProductions
                                hasControllers true
                            $else
                                hasControllers false
                            useMongoDb false
                        $if metaCtx.tsExpressFeaturePacki.usePackiStudioFolderEdit
                            {
                                name "packiStudioFolderEdit"
                                hasControllers true
                                useMongoDb false
                        $if metaCtx.tsExpressFeaturePacki.usePackiProductions
                            {
                                name "packiProductions"
                                fileName "packi-productions"
                                hasControllers true
                                useMongoDb true
                    $if metaCtx.useTsExpressFeatureProject
                        {
                            name "project"
                            hasControllers true
                            useMongoDb true
                    $if metaCtx.useTsExpressFeatureWizzi
                        {
                            name "wizzi"
                            fileName "wizzi"
                            hasControllers true
                            useMongoDb false
                        $if metaCtx.tsExpressFeatureWizzi.useWizziDocs
                            {
                                name "wizziDocs"
                                hasControllers true
                                useMongoDb false
                        $if metaCtx.tsExpressFeatureWizzi.useWizziFs
                            {
                                name "wizziFs"
                                fileName "wizzi-fs"
                                hasControllers true
                                useMongoDb false
                        $if metaCtx.tsExpressFeatureWizzi.useWizziGist
                            {
                                name "wizziGist"
                                fileName "wizzi-gist"
                                hasControllers true
                                useMongoDb false
                        $if metaCtx.tsExpressFeatureWizzi.useWizziMeta
                            {
                                name "wizziMeta"
                                fileName "wizzi-meta"
                                hasControllers true
                                useMongoDb false
                        $* see metaCtx.tsExpressFeaturePacki.usePackiProductions
                        $if metaCtx.tsExpressFeatureWizzi.useWizziProductions
                            {
                                name "production"
                                hasControllers true
                                useMongoDb true
                        *$
                        $if metaCtx.tsExpressFeatureWizzi.useWizziCdn
                            {
                                name "wizziCdn"
                                fileName "wizzi-cdn"
                                hasControllers true
                                useMongoDb true
                    $if metaCtx.useTsExpressFeatureUser
                        {
                            name "user"
                            hasControllers true
                            $if metaCtx.tsExpressFeatureUser.store = "mongoDb"
                                useMongoDb true
                    $if _.isArray(metaCtx.features)
                        $foreach feature in metaCtx.features
                            {
                                name "${feature.name}"
                                $if _.isNotEmpty(feature.fileName)
                                    fileName "${feature.fileName}"
                                $if feature.hasControllers
                                    hasControllers true
                                $if feature.useMongoDb
                                    useMongoDb true
                $if metaCtx.useTsExpressFeatureGithub
                    useFeatureGithub true
                    { featureGithub
                        accessToken "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"
                [ examples
                    $if metaCtx.useExamples
                        $if metaCtx.examples.usePromise
                            {
                                name "promise"
                                hasControllers true
                                useMongoDb false
                $if metaCtx.useTsExpressFeatureWizzi
                    $if metaCtx.tsExpressFeatureWizzi.useWizziFs
                        useWizziFs true
                        { wizziFs
                $if metaCtx.useCloudAzure
                    ${'$'}{'$'}include cloudAzure.json
                    ---
                $if metaCtx.useCloudHeroku
                    ${'$'}{'$'}include cloudHeroku.json
                    ---
                ${'$'}{'$'}include code.json
                ---
                ${'$'}{'$'}include tsExpress.json
                ---
                $if metaCtx.useTsExpressData
                    ${'$'}{'$'}include tsExpressData.json
                    ---
                $if metaCtx.useTsExpressFeatureAuth
                    ${'$'}{'$'}include tsExpressFeatureAuth.json
                    ---
                $if metaCtx.useTsExpressFeatureConfig
                    ${'$'}{'$'}include tsExpressFeatureConfig.json
                    ---
                $if metaCtx.useTsExpressFeatureWizzi
                    ${'$'}{'$'}include tsExpressFeatureWizzi.json
                    ---
                $if metaCtx.useTsExpressFeaturePacki
                    ${'$'}{'$'}include tsExpressFeaturePacki.json
                    ---
                $if metaCtx.useTsExpressStyles
                    ${'$'}{'$'}include tsExpressStyles.json
                    ---
                $if metaCtx.useTsExpressTests
                    ${'$'}{'$'}include tsExpressTests.json
                    ---
                $if metaCtx.useTsExpressUtils
                    ${'$'}{'$'}include tsExpressUtils.json
                    ---
                $if metaCtx.useTsExpressWizziSite
                    ${'$'}{'$'}include tsExpressWizziSite.json
                    ---
                $if metaCtx.tsExpress.useReactPages || metaCtx.tsExpressApp.useWebpackApp
                    ${'$'}{'$'}include react.json
                    ---
                $if metaCtx.useTsDbMongoDb
                    ${'$'}{'$'}include tsdbmongodb.json
                    ---
                $if metaCtx.useTsDbPostgres
                    ${'$'}{'$'}include tsdbpostgres.json
                    ---
                $if metaCtx.useTsDbSequelize
                    ${'$'}{'$'}include tsdbsequelize.json
                    ---
                $if metaCtx.useTsDbData
                    ${'$'}{'$'}include tsdbdata.json
                    ---
                $if metaCtx.tsExpressApp.useWebpackApp
                    useBabel true
                    { babel
                        useLoader true
                        { loader
                        useReact true
                        { react
                    useWebpackApp true
                    { webpackApp
                        [ items
                            $foreach item in metaCtx.tsExpressApp.webpackApp.items
                                {
                                    name "${item.name}"
                                    writeToDisk ${item.writeToDisk ? 'true' : 'false'}
                $if metaCtx.useTsExpressFeaturePacki
                    $if metaCtx.tsExpressFeaturePacki.usePackiBrowse
                        usePackiBrowse true
                        { packiBrowse
                $if metaCtx.useTsExpressFeatureWizzi
                    $if metaCtx.tsExpressFeatureWizzi.useWizziCdn
                        useWizziCdn true
                        { wizziCdn
                { utils
                    useAxios true
                    useStringifySafe true
                    useParseUrl true
                    useQueryString true
                    useNanoId true
                    useNodeCache true
                    useDiffMatchPatch true

    $file __dot__wizzi/models/t/code.json.ittf.ittf
        ${'$'}{'$'}group
        
            useTypescript true
            { typescript
                ${'$'}${'$'} for webpack client
                useBabelLoader true
                useTsxFiles false
                
            $if metaCtx.useCommonsEslint
                usePrettier true
                { prettier
        
            $if metaCtx.useCommonsPrismjs
                usePrismjs false
                { prismjs
                    [ modes
        
            $if metaCtx.useCommonsEslint
                useLint true
                { lint
    
    $if metaCtx.tsExpress.useReactPages || metaCtx.tsExpressApp.useWebpackApp
        $file __dot__wizzi/models/t/react.json.ittf.ittf
            ${'$'}{'$'}group
                useReact true
                { react
                    $if metaCtx.tsExpress.useReactPages
                        usePages true
                        { pages