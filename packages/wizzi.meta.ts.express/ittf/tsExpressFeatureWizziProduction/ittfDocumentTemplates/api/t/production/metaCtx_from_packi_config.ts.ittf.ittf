$group
    +
    export
        async-function getmetaCtxFromPackiConfig
            param owner
                :string
            param packiConfigObj
                :any
            param packiFiles
                :ref packiTypes.PackiFiles
            param progressiveContext
                :any
            r_promise${'('})
                if !packiConfigObj.meta || !packiConfigObj.meta.metaCtx
                    # loog 'api.production.getmetaCtxFromPackiConfig', 'no metaCtx found'
                    return
                        _ resolve
                            {
                const kind = packiConfigObj.meta.metaCtx.kind
                let filePath
                let artifact
                if kind == "file"
                    set filePath = packiConfigObj.meta.metaCtx.filePath
                    # loog 'api.production.getmetaCtxFromPackiConfig', 'getting from filePath', filePath
                    return
                        _ resolve
                            _ getmetaCtxFromPackiFile
                                @ filePath
                                @ packiFiles
                                @ progressiveContext
                elif kind == "artifact"
                    set artifact = packiConfigObj.meta.metaCtx.artifact
                    # loog 'api.production.getmetaCtxFromPackiConfig', 'getting from artifact', artifact.name
                    _ artifactApi.getArtifactGeneration_withPrepare
                        @ owner
                        @ packiConfigObj.meta.metaCtx.artifact.name
                        @ null
                        @ progressiveContext
                        @ ""
                        ._ then
                            =>
                                param generationResult
                                    :any
                                _ resolve
                                    _ JSON.parse(generationResult.content)
                        v08/ts/catch_reject${'('} api.production.getmetaCtxFromPackiConfig.getArtifactGeneration_withPrepare )
                else
                    # loog 'api.production.getmetaCtxFromPackiConfig', 'no valid metaCtx kind found'
                    return
                        _ resolve
                            {
    +
    export
        async-function getmetaCtxFromPackiFile
            param filePath
                :string
            param packiFiles
                :ref packiTypes.PackiFiles
            param progressiveContext
                :any
            r_promise${'('})
                _ wizziProds.generateArtifact
                    @ filePath
                    @ packiFiles
                    @ progressiveContext
                    ._ then
                        => 
                            param generationResult
                                :any
                            # loog 'api.production.getmetaCtxFromPackiFile', generationResult.artifactContent
                            _ resolve
                                _ JSON.parse(generationResult.artifactContent)
                    v08/ts/catch_reject${'('} api.production.getmetaCtxFromPackiFile.generateArtifact )