$group

    +
    export
        async-function getWizziMetaFolder
            param owner
                :string
            param name
                :string
            param progressiveContext
                :any
            :return
                :ref Promise
                    :param 
                        :ref packiTypes.PackiFiles
            # loog myname, 'getWizziMetaFolder', 
                \b 'owner', owner, 
                \b 'name', name,
                \b 'progressiveContext', Object.keys(progressiveContext)
            return
                _ getPackageProductionObject
                    @ owner
                    @ name
                    @ true
                    ._ then
                        => 
                            param packageProductionObject
                                :any
                            # loog myname, 'getWizziMetaFolder.packageProductionObject', Object.keys(packageProductionObject)
                            return 
                                _ getWizziMetaFolderByPackageProductionObject
                                    @ packageProductionObject
                                    @ progressiveContext
    +
    export
        async-function getWizziMetaFolderById
            param packageId
                :string
            param progressiveContext
                :any
            :return
                :ref Promise
                    :param 
                        :ref packiTypes.PackiFiles
            # loog myname, 'getWizziMetaFolderById', 
                \b 'packageId', packageId, 
                \b 'progressiveContext', Object.keys(progressiveContext)
            return
                _ getPackageProductionObjectById
                    @ packageId
                    @ true
                    ._ then
                        => 
                            param packageProductionObject
                                :any
                            # loog myname, 'getWizziMetaFolderById.packageProductionObject', Object.keys(packageProductionObject)
                            return 
                                _ getWizziMetaFolderByPackageProductionObject
                                    @ packageProductionObject
                                    @ progressiveContext

    async-function getWizziMetaFolderByPackageProductionObject
        param packageProductionObject
            :any
        param progressiveContext
            :any
        :return
            :ref Promise
                :param 
                    :ref packiTypes.PackiFiles
        r_promise${'('})
            _ productionApi.getmetaCtxFromPackiConfig
                @ packageProductionObject.owner
                @ packageProductionObject.packiConfigObj
                @ packageProductionObject.packiFiles
                @ progressiveContext
                ._ then
                    =>
                        param metaCtx
                            :any
                        _ metaApi.generateMetaProduction
                            @ packageProductionObject.owner
                            @ packageProductionObject.packiConfigObj.meta.name
                            @ metaCtx
                            ._ then
                                =>
                                    param wizziPackiFiles
                                        :ref packiTypes.PackiFiles
                                    # loog myname, 'getWizziMetaFolderByPackageProductionObject.generateMetaProduction', Object.keys(wizziPackiFiles)
                                    return
                                        _ resolve
                                            @ wizziPackiFiles
                        $*
                        _ resolve
                            _ Object.assign
                                {
                                { 
                                    { ['.packi/config.json.ittf']
                                        @ type 'CODE'
                                        @ contents
                                            [
                                                @ '{'
                                                @ '    meta "' + packageProductionObject.packiConfigObj.meta.name + '"'
                                                @ '    metaCtxKind"' + packageProductionObject.packiConfigObj.meta.metaCtx.kind + '"'
                                                @ '    metaCtxFilepath"' + packageProductionObject.packiConfigObj.meta.metaCtx.filePath + '"'
                                                @ '    metaCtxMessage"' + metaCtx.message + '"'
                                                ._ join
                                                    @ '\n'    
                                @ metaCtx
                        *$
                v08/ts/catch_reject${'('} api.production.getWizziMetaFolderByPackageProductionObject.getmetaCtxFromPackiConfig )