module
    
    $
        var ctrl = {
            name: 'ApiV1PackageProduction',
            path: '/api/v1/production/package',
            apiSecured: wzCtx.App.isLocal == false,
        }
    
    v08/ts/controller( &ctrl )
            
        $append imports
            import
                @ packiTypes
                from '../../packi'
            import
                @ getListPackageProduction
                @ validatePackageProduction
                @ getPackageProduction
                @ updatePackageProduction
                @ createPackageProduction
                @ getWizziMetaFolderById
                from '../api/package'
            +
            const myname = 'features/production/controllers/apiv1packageproduction'

        v08/ts/route_api_secured( get, /checkname/:owner/:name, this.getCheckPackageName)
        v08/ts/route_api_secured( get, /meta/:id, this.getWizziMetaFolder)
        v08/ts/route_api_secured( get, /:owner, this.getPackageProductionList)
        v08/ts/route_api_secured( get, /:owner/:name, this.getPackageProduction)
        v08/ts/route_api_secured( put, /:id, this.putPackageProduction)
        v08/ts/route_api_secured( post, /:owner/:name, this.postPackageProduction)
        
        $append handlers

            v08/ts/handler( getPackageProductionList )

                $$ loog 'getPackageProductionList.request.params', request.params
                _ getListPackageProduction
                    {
                        { query
                            @ owner request.params.owner
                    ._ then
                        =>
                            param result
                                :any
                            $$ loog 'getPackageProductionList.result', result
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail(  getPackageProductionList )
            
            v08/ts/handler(  getCheckPackageName )
                check_name( package )

            v08/ts/handler(  getPackageProduction )

                $$ loog 'getPackageProduction.request.params', request.params
                _ getPackageProduction
                    @ request.params.owner
                    @ request.params.name
                    ._ then
                        =>
                            param result
                                :any
                            $$ loog 'getPackageProduction.result', result
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail(  getPackageProduction )

            v08/ts/handler(  postPackageProduction )

                $$ loog 'postPackageProduction.request.params', request.params
                $$ loog 'postPackageProduction.request.body', request.body
                _ createPackageProduction
                    @ request.params.owner
                    @ request.params.name
                    @ request.body.description
                    @ JSON.stringify(request.body.packiFiles)
                    ._ then
                        =>
                            param result
                                :any
                            $$ loog 'postPackageProduction.result', result
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail(  postPackageProduction )

            v08/ts/handler(  putPackageProduction )

                $$ loog 'putPackageProduction.request.params', request.params
                $$ loog 'putPackageProduction.request.body', request.body
                _ updatePackageProduction
                    @ request.params.id
                    @ request.body.owner
                    @ request.body.name
                    @ request.body.description
                    @ JSON.stringify(request.body.packiFiles)
                    ._ then
                        =>
                            param result
                                :any
                            $$ loog 'putPackageProduction.result', result
                            _ sendSuccess
                                @ response
                                @ result
                    v08/ts/catch_send_fail(  putPackageProduction )

            v08/ts/handler(  getWizziMetaFolder  )    
                # loog 'getWizziMetaFolder.request.params', request.params
                _ getWizziMetaFolderById
                    @ request.params.id
                    {
                    ._ then
                        =>
                            param packiFiles
                                :ref packiTypes.PackiFiles
                            _ sendSuccess
                                @ response
                                @ packiFiles
                    v08/ts/catch_send_fail( getWizziMetaFolder )                    

