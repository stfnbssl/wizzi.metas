module
    $
        var ctrl = {
            name: 'MetaProduction',
            path: '/meta',
            webSecured: true,
        }
    
    v08/ts/controller( &ctrl )
            
        $append imports
            import ReactDOMServer 
                from 'react-dom/server'
            import PageFormDocument 
                from '../../../pages/PageFormDocument' 
            import
                @ CRUDResult
                from '../../types'
            import
                @ createMetaProduction
                @ updateMetaProduction
                @ deleteMetaProduction
                @ getMetaProductionObject
                @ getMetaProductionObjectById
                from '../api/meta'
            import
                @ mergePackiFiles
                from '../utils'
            +
            const myname = 'features/production/controllers/meta'
            +
            function renderPageForm
                param req
                    :ref Request
                param res
                    :ref Response
                param data
                    :object
                param queryParams
                    :object

                const index
                    op+
                        + '<!DOCTYPE html>'
                        _ ReactDOMServer.renderToStaticMarkup
                            < PageFormDocument 
                                @ data {data}
                                @ queryParams {queryParams}
                _ res.set('Content-Type', 'text/html')
                _ res.set('Content-Length', index.length.toString())
                _ res.send(index)

            $include defaults/meta_packifiles

        v08/ts/route_web_secured(get, /new, this.getNewMetaForm)
        v08/ts/route_web_secured(post, /new, this.postMeta)
        v08/ts/route_web_secured(get, /update/:id, this.getUpdateMetaForm)
        v08/ts/route_web_secured(post, /update, this.putMeta)
        v08/ts/route_web_secured(get, /delete/:id, this.getDeleteMetaForm)
        v08/ts/route_web_secured(post, /delete, this.deleteMeta)
        
        $append handlers
            
            v08/ts/handler(  getNewMetaForm )
                $$ loog myname, 'getNewMetaForm', JSON.stringify(request.query, null, 2)
                _ renderPageForm
                    @ request
                    @ response
                    {
                        @ type 'success'
                        @ formName 'CreateMetaProduction'
                        { formData 
                            @ owner (request.session as any).user.username
                    {

            v08/ts/handler(  postMeta )
                $$ loog myname + '.postNewMeta.request.body', JSON.stringify(request.body, null, 2)
                $$ loog myname + '.postNewMeta.request.session.user', JSON.stringify((request.session as any).user, null, 2)
                _ createMetaProduction
                    @ (request.session as any).user.username
                    @ request.body.mp_name
                    @ request.body.mp_description
                    _ JSON.stringify
                        _ getPackiFiles
                    ._ then
                        =>
                            param result
                                :ref CRUDResult
                            $$ loog myname + '.postNewMeta.createMetaProduction.result', JSON.stringify(result, null, 2)
                            if result.ok
                                _ response.redirect('/productions/metas')
                            else
                                _ response.render
                                    @ 'error.html.ittf'
                                    {
                                        @ message 'creating a new meta production'
                                        @ error result
                    ._ catch
                        =>
                            param err
                                :any
                            _ response.render
                                @ 'error.html.ittf'
                                {
                                    @ message 'creating a new meta production'
                                    @ error err

            v08/ts/handler(  getUpdateMetaForm )
                update_get_form( meta )

            v08/ts/handler(  putMeta )
                update_put( meta )
            
            v08/ts/handler(  getDeleteMetaForm )
                delete_get_form( meta )

            v08/ts/handler(  deleteMeta )
                delete_delete( meta )
