$group
    
    ${'$'}
        var ctrl = {
            name: 'ApiV1User',
            path: '/api/v1/user',
            apiSecured: false,
        }
    
    v08/ts/controller${'('}&ctrl)
            
        ${'$'}append imports
            import 
                @ body
                from 'express-validator'
            import UserController from './user.controller'
            import UserMiddleware from '../middlewares/user.middleware'
            import
                @ authMiddlewares
                @ authTypes
                from '../../auth/index'
            import
                @ commonMiddlewares
                from '../../../common/index'
            +
            const myname = 'examples/promise/controllers/user'
            ${'$'}if wzCtx.Build.useAuthentication && wzCtx.Build.authentication.usePermissionFlag
                +
                const PermissionFlag = authTypes.PermissionFlag

        _ this.router.route
            @ "/"
            ._ get
                @ authMiddlewares.JwtMiddleware.validJWTNeeded
                ${'$'}if wzCtx.Build.useAuthentication && wzCtx.Build.authentication.usePermissionFlag
                    _ authMiddlewares.PermissionMiddleware.permissionFlagRequired(PermissionFlag.ADMIN_PERMISSION)
                @ UserController.listUser
            ._ post
                _ body('email').isEmail()
                _ body('password').isLength
                    { 
                        @ min 5
                    ._ withMessage
                        @ 'Must include password (5+ characters)'
                @ commonMiddlewares.BodyValidationMiddleware.verifyBodyFieldsErrors
                @ UserMiddleware.validateSameEmailDoesntExist
                @ UserController.createUser
        
        _ app.param
            @ "userId"
            @ UserMiddleware.extractUserId
        
        _ this.router.route
            @ "/user/:userId"
            ._ all
                @ UserMiddleware.validateUserExists
                @ authMiddlewares.JwtMiddleware.validJWTNeeded
                @ authMiddlewares.PermissionMiddleware.onlySameUserOrAdminCanDoThisAction
            ._ get
                @ UserController.getUserById
            ._ delete
                @ UserController.removeUser
        
        _ this.router.put
            @ "/user/:userId"
            [ 
                @ body('email').isEmail()
                _ body('password').isLength
                    { 
                        @ min 5
                    ._ withMessage
                        @ 'Must include password (5+ characters)'
                @ body('firstName').isString()
                @ body('lastName').isString()
                @ body('permissionFlags').isInt()
                @ commonMiddlewares.BodyValidationMiddleware.verifyBodyFieldsErrors
                @ UserMiddleware.validateSameEmailBelongToSameUser
                @ UserMiddleware.userCantChangePermission
                ${'$'}if wzCtx.Build.useAuthentication && wzCtx.Build.authentication.usePermissionFlag
                    @ authMiddlewares.PermissionMiddleware.permissionFlagRequired(PermissionFlag.PAID_PERMISSION)
                @ UserController.put
        
        _ this.router.patch
            @ "/user/:userId"
            [ 
                @ body('email').isEmail().optional()
                _ body('password').isLength
                    { 
                        @ min 5
                    ._ withMessage
                        @ 'Password must be 5+ characters'
                    ._ optional
                @ body('firstName').isString().optional()
                @ body('lastName').isString().optional()
                @ body('permissionFlags').isInt().optional()
                @ commonMiddlewares.BodyValidationMiddleware.verifyBodyFieldsErrors
                @ UserMiddleware.validatePatchEmail
                @ UserMiddleware.userCantChangePermission
                ${'$'}if wzCtx.Build.useAuthentication && wzCtx.Build.authentication.usePermissionFlag
                    @ authMiddlewares.PermissionMiddleware.permissionFlagRequired(PermissionFlag.PAID_PERMISSION)
                @ UserController.patch
            #
                # *
                # * This route does not currently require extra permissions.
                # *
                # * Please update it for admin usage in your own application!
                # 
        
        ${'$'}if wzCtx.Build.useAuthentication && wzCtx.Build.authentication.usePermissionFlag
            _ this.router.put
                @ "/user/:userId/permissionFlags/:permissionFlags"
                [ 
                    @ authMiddlewares.JwtMiddleware.validJWTNeeded
                    @ authMiddlewares.PermissionMiddleware.onlySameUserOrAdminCanDoThisAction
                    @ authMiddlewares.PermissionMiddleware.permissionFlagRequired(PermissionFlag.FREE_PERMISSION)
                    @ UserController.updatePermissionFlags
                #
                    # *
                    # * This route does not currently require extra permissions.
                    # *
                    # * Please update it for admin usage in your own application!
                    # 
