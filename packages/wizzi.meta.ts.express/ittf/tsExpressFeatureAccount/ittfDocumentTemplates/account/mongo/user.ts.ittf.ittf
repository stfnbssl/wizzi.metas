$group
    import
        @ Schema
        @ Model
        @ model
        from "mongoose"
    import
        @ ModelBuilderType
        from "../../app/types"
    import
        @ IUserModel
        from "../types"
    const UserSchema
        :ref Schema
            :param
                :ref IUserModel
        =
            new Schema
                {
                    @ email String
                    @ username String
                    @ name String
                    @ avatar_url String
                    @ openid_provider String
                    @ created_at Date
                    @ updated_at Date
                    @ last_access_at Date
    export
        :type UserModelType
            :ref Model
                :param
                    :ref IUserModel
        # mongoose models creation is centralized
        # mongodb calls buildModel() when starting, after connection has been established
        # controllers call UserModel() when initialized, after buildModel() has benn called
    let UserModel
        :ref UserModelType
    export
        function GetUserModel
            :return
                :ref UserModelType
            return UserModel
    export
        const UserModelBuilder
            :ref ModelBuilderType
            =
                {
                    @ buildModel
                        =>
                            param options
                                :any
                                :optional
                            set UserModel =
                                _ model
                                    :param
                                        :ref IUserModel
                                    @ "User"
                                    @ UserSchema
                    @ applyExtraSetup
                        =>
                            param options
                                :any
                                :optional
