$group

    $
        var db = 'postgres';

    ${'$'}
        var md = {
            Name: 'Post',
            descr: 'Blog post',
            prefix: 'post',
            query: [
                { name: 'owner', type: 'string' },
                { name: 'name', type: 'string' },
            ],
            fields: [
                { name: 'owner', type: 'string' },
                { name: 'name', type: 'string' },
                { name: 'title', type: 'string' },
                { name: 'content', type: 'string' },
                { name: 'state', type: 'string' },
                { name: 'pubblished_at', type: 'date' },
            ],
            created_at: true,
            updated_at: true,
            update_delete_by_id: true
        }

    import path from 'path'
    import
        @ GetPostModel
        from '../models/post'
    import
        @ IPostModel
        from '../types'
    import
        @ ValidateResult
        @ CRUDResult
        from '../../../common/types'
    +
    const myname = 'features.blog.api.post'
    +
    export
        async-function validatePost
            param owner
                :string
            param name
                :string
            const Post = GetPostModel()
            return
                new Promise
                    =>
                        param resolve
                        param reject
                        let query = { owner: owner, name: name }
                        _ Post.find
                            @ query
                            =>
                                param err
                                    :any
                                param result
                                    :any
                                $$ loog myname, 'validatePost', 'Post.find', 'error', err
                                if err
                                    return reject(err)
                                if result.length == 1
                                    return 
                                        _ resolve
                                            {
                                                @ isValid false
                                                @ message 'blog post already exists'
                                _ resolve
                                    {
                                        @ isValid true
    
    v08/${'db'}/crud/get_list_api${'('}&md)
    v08/${'db'}/crud/get_api${'('}&md)
    v08/${'db'}/crud/create_api${'('}&md)
    v08/${'db'}/crud/update_api${'('}&md)
    v08/${'db'}/crud/delete_api${'('}&md)