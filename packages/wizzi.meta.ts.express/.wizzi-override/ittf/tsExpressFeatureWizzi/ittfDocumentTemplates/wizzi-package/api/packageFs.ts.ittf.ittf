$group

    import path from 'path'
    import fs from 'fs'
    +
    async-function searchConfigFile
        param packageFolderPath
            :string
            :optional
        param configName
            :string
            :optional
        r_promise${'('})
            let configFilename = configName ? 'wizzi.config.' + name + '.js' : 'wizzi.config.js'
            let currentDir = packageFolderPath
            let currentPath = null
            let configPath = null
            
            # loog 'searching ', configFilename
            try
                while configPath == null && currentDir.length > 3
                    set currentPath = path.join(currentDir, configFilename)
                    try
                        # loog 'wizziPackage.packageFs.searchConfigFile.currentPath', currentPath
                        const stat = fs.lstatSync(currentPath)
                        if stat.isFile()
                            set configPath = currentPath
                    catch ex
                        r_reject${'('})
                            {
                                @ message "wizziPackage.packageFs.searchConfigFile error"
                                @ err ex
                    set currentDir = path.dirname(currentDir)
                r_resolve${'('})
                    @ configPath
            catch ex
                error 'wizziPackage.packageFs.searchConfigFile.error', ex
                r_reject${'('})
                    {
                        @ message 'wizziPackage.packageFs.searchConfigFile.error', ex
    +
    export
        @  searchConfigFile           