$group
    ${'$'}params &md
    ${'$'}
        var defaultProps = [];
    +
    misc${'('} setMyProps, &md )
    misc${'('} setMyStateProps, &md )
    +
    const React = require('react')
    const ${'$'}{md.isPure ? 'Pure' : ''} = require('react').${'$'}{md.isPure ? 'Pure' : ''}
    const ReactDOM = require('react-dom')
    ${'$'}if md.connected
        const bindActionCreators = require('redux').bindActionCreators
        const Dispatch = require('redux').Dispatch
        const connect = require('react-redux')
    ${'$'}if md.styled
        # see https://mxstbr.blog/2016/11/styled-components-magic-explained/
        const keyframes = require('styled-components').keyframes
        const css = require('styled-components').css
    ${'$'}if md.aphrodite
        const StyleSheet = require('aphrodite').StyleSheet
        const css = require('aphrodite').css
        const classnames = require('classnames')
    ${'$'}hook imports
    +
    ${'$'}if md.aphrodite
        const styles
            _ StyleSheet.create
                {
                    ${'$'}hook styles_aphrodite
    ${'$'}hook styles
    +
    class ${'$'}{md.name}
        super ${'$'}{md.isPure ? 'Pure' : ''}Component
            ${'$'}if md.connected || myProps.length > 0
            ${'$'}else
            ${'$'}if myStateProps.length > 0
            ${'$'}else
        ctor
            param props
                ${'$'}if md.connected || myProps.length > 0
                ${'$'}else
            _ super(props)
            ${'$'}hook ctor
        p state
            {
                ${'$'}foreach prop in myStateProps
                    ${'$'}if prop.type == 'string'
                        @ ${'$'}{prop.name} ""
                    ${'$'}elif prop.type == 'boolean'
                        @ ${'$'}{prop.name} false
                    ${'$'}elif prop.type == '['
                        [ ${'$'}{prop.name}
                    ${'$'}else
                        @ ${'$'}{prop.name} null
        ${'$'}hook
    +
    ${'$'}if md.connected
        set module.exports
            _ connect
                @ mapStateToProps
                @ mapDispatchToProps
                (
                    @ ${'$'}{md.name}
    ${'$'}else
        set module.exports = ${'$'}{md.name}        
