$group
    ${'$'}params &md
    ${'$'}
        var defaultProps = [];
    +
    misc${'('} setMyProps, &md )
    +
    $$ const React = require('react')
    $$ const FunctionComponent = require('react').FunctionComponent
    import React
        @ FunctionComponent
        from 'react'
    ${'$'}if md.connected
        $$ const bindActionCreators = require('redux').bindActionCreators
        $$ const Dispatch = require('redux').Dispatch
        import
            @ bindActionCreators
            @ Dispatch
            from 'redux'
        $$ const connect = require('react-redux')
        import connect from 'react-redux'
    ${'$'}if md.styled
        # see https://mxstbr.blog/2016/11/styled-components-magic-explained/
        $$ const keyframes = require('styled-components').keyframes
        $$ const css = require('styled-components').css
        import
            @ keyframes
            @ css
            from 'styled-components'
    ${'$'}if md.aphrodite
        $$ const StyleSheet = require('aphrodite').StyleSheet
        $$ const css = require('aphrodite').css
        import
            @ StyleSheet
            @ css
            from 'styled-components'
        $$ const classnames = require('classnames')
        import classnames from 'classnames'
    +
    ${'$'}hook imports
    +
    ${'$'}if md.aphrodite
        const styles
            _ StyleSheet.create
                {
                    ${'$'}hook styles_aphrodite
    ${'$'}hook styles
    +
    const ${'$'}{md.name}
        =>
            ${'$'}if md.connected
                param props
            ${'$'}else
                {
                    ${'$'}foreach prop in myProps
                        @ ${'$'}{prop.name}
            ${'$'}hook
    ${'$'}if defaultProps.length > 0
        set {md.name}.defaultProps
            {
                ${'$'}foreach prop in defaultProps
                    ${'$'}if prop.type == 'string'
                        @ ${'$'}{prop.name} "${'$'}{prop.xdefault}"
                    ${'$'}else
                        @ ${'$'}{prop.name} ${'$'}{prop.xdefault}
    
    ${'$'}if md.connected
        $*
        set module.exports
            _ connect
                @ mapStateToProps
                @ mapDispatchToProps
                (
                    @ ${'$'}{md.name}
        *$
        const ${'$'}{md.name}Connect
            _ connect
                @ mapStateToProps
                @ mapDispatchToProps
                (
                    @ ${'$'}{md.name}
        export-default ${'$'}{md.name}Connect
    ${'$'}else
        $$ set module.exports = ${'$'}{md.name}
        export-default ${'$'}{md.name}
        