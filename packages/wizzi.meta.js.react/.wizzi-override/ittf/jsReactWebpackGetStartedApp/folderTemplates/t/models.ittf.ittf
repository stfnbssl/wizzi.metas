$group

    $
        var thisProduction = metaCtx.jsReactWebpackGetStartedApp;

    $file __dot__wizzi/models/wzctx.json.ittf.ittf
        {
            ${'$'}{'$'}include v08/env/vars
            ---
            name "${metaCtx.name}"
            version "${metaCtx.version}"
            description "${metaCtx.description}"
            $if metaCtx.author
                { author
                    name "${metaCtx.author.name}"
                    email "${metaCtx.author.email}"
            $if metaCtx.licence
                { license
                    type "${metaCtx.license}"
                    url "${metaCtx.license_url}"            
            ---
            { App
                name "ReactJsWebpackApp"
                title "React js webpack App"
            ---
            { Styles
            ---
            { Build
                [ features
                
                ${'$'}{'$'}include code.json
                ${'$'}{'$'}include webpack.json
                ${'$'}{'$'}include react.json

                $if metaCtx.useCommonsBabel
                    ${'$'}{'$'}include commonsBabel.json
                $if metaCtx.useJsReactUtils
                    ${'$'}{'$'}include jsReactUtils.json
                    ---

                { utils
                    useLeaflet true

    $file __dot__wizzi/models/t/code.json.ittf.ittf
        ${'$'}{'$'}group
        
            useTypescript false
            { typescript
                useBabelLoader false
                useTsxFiles false
                
            $if metaCtx.useCommonsEslint
                usePrettier true
                { prettier
        
            $if metaCtx.useCommonsPrismjs
                usePrismjs false
                { prismjs
                    [ modes
        
            $if metaCtx.useCommonsEslint
                useLint true
                { lint
    
    $file __dot__wizzi/models/t/webpack.json.ittf.ittf
        ${'$'}{'$'}group

            useWebpack true
            { webpack
                [ entries
                    $if _.isArray(thisProduction.webpackEntries)
                        $foreach entry in thisProduction.webpackEntries
                            {
                                name "${entry.name}"
                                path "${entry.path}"
                $if thisProduction.useWebpackCss
                    useCss true
                    { css
                    useStyleLoader true
                    { styles
                    $if thisProduction.webpackCss.useMiniCssExtract
                        useMiniCssExtract true
                        { miniCssExtract
                $if thisProduction.useWebpackSass
                    useSass true
                    { sass
                $if thisProduction.useWebpackImages
                    useImages true
                    { images
                $if thisProduction.useWebpackFonts
                    useFonts true
                    { fonts
                $if thisProduction.useWebpackYaml
                    useYaml true
                    { yaml
                $if thisProduction.useWebpackFile
                    useFile true
                    { file
                $if thisProduction.useWebpackHtml
                    useHtml true
                    { html
                        $if _.isNotEmpty(thisProduction.webpackHtml.title)
                            title "${thisProduction.webpackHtml.title}"
                        $else
                            title "${metaCtx.name}"
                        $if _.isNotEmpty(thisProduction.webpackHtml.template)
                            template "${thisProduction.webpackHtml.template}"
                        $else
                            template "./index.html"
                        $if _.isNotEmpty(thisProduction.webpackHtml.filename)
                            filename "${thisProduction.webpackHtml.filename}"
                        $else
                            filename "index.html"
                useMinimizer false
                useWorker false
                useStatsWriter false
                useIgnore false
                useCodeSplitting false
                $if false
                    outputPath "C:/My/wizzi/stfnbssl/wizzi.apps/packages/wizzi-heroku/public/pageforms"
                    publicPath "/public/pageforms/"
                useOutput true
                { output
                    $if _.isArray(metaCtx.jsReactWebpackGetStartedApp.webpackEntries) && 
                        \b metaCtx.jsReactWebpackGetStartedApp.webpackEntries.length > 0
                        filename "[name].bundle.js" 
                        path "path.resolve(__dirname, 'dist')"
                    $else
                        filename "main.js" 
                        path "path.resolve(__dirname, 'dist')"
                useEnv false
                { env
                    [ items
                        {
                            name "NODE_ENV"
                            value "env('NODE_ENV')"
                        {
                            name "API_SERVER_URL"
                            value "env('API_SERVER_URL')"
                        {
                            name "BUILD_TIMESTAMP"
                            value "Date.now()"
                useNodePolifills false
                { nodePolifills
                    useBuffer false
                useDevServer true
                { devServer
                    static "__dirname"

    $file __dot__wizzi/models/t/react.json.ittf.ittf
        ${'$'}{'$'}group

            useReact true
            { react
