$group
    ---
    [ modules
        _ path.resolve(__dirname, "src")
        @ "node_modules"
    ---	
    [ extensions
		@ ".js"
		${'$'}if wzCtx.Build.useTypescript
			@ ".ts"
		${'$'}if wzCtx.Build.useReact
			@ ".jsx"
			${'$'}if wzCtx.Build.useTypescript
				@ ".tsx"
		@ ".json"
		${'$'}if wzCtx.Build.useVue
			@ ".vue"
    ---	
    { alias
		${'$'}if wzCtx.Build.useVue
			@ '@' resolve('src')
        ${'$'}if wzCtx.Build.useWebpack
            ${'$'}if wzCtx.Build.webpack.useNodePolifills
                @ constants false
				@ fs false
				@ 'fs-extra' false
				@ 'fs-graceful' false
                @ 'graceful-fs' false
				@ 'mongodb' false
				@ 'mongodb-core' false
                @ os false
        ${'$'}if wzCtx.Build.useAphrodite
            ${'$'}if wzCtx.Build.aphrodite.disableImportant
                # https://github.com/Khan/aphrodite#disabling-important
                @ aphrodite 'aphrodite/no-important'

    ---
    { fallback 
        ${'$'}if wzCtx.Build.useWebpack
            ${'$'}if wzCtx.Build.webpack.useNodePolifills
                ${'$'}if wzCtx.Build.webpack.nodePolifills.useBuffer
                    @ buffer require.resolve("buffer")
                $*
                @ assert require.resolve("assert")
                @ crypto require.resolve("crypto-browserify")
                @ events require.resolve("events")
                @ path require.resolve("path-browserify")
                @ stream require.resolve("stream-browserify")
                @ process require.resolve("process/browser.js")
                @ url require.resolve("url")
                @ util require.resolve("util")
                *$