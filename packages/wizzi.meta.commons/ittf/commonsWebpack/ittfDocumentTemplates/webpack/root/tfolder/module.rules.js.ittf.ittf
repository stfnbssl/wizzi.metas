$group
    ---
    {
        @ test /\.(js|jsx)?$/
        @ exclude /(node_modules|(vendor\/.+\.js))/        
        { use
            @ loader 'babel-loader'
            { options
                @ cacheDirectory true

	${'$'}if wzCtx.Build.useTypescript
        ${'$'}if wzCtx.Build.typescript.useBabelLoader
            {
                @ test /\.(ts|tsx)?$/
                @ exclude /(node_modules|(vendor\/.+\.js))/        
                { use
                    @ loader 'babel-loader'
                    { options
                        @ cacheDirectory true
        ${'$'}else
            {
                @ test /\.(ts|tsx)$/
                @ exclude /(node_modules|(vendor\/.+\.js))/        
                [ use
                    @ "ts-loader"
	
	${'$'}if wzCtx.Build.webpack.useHtml
        {
            @ test /\.html$/
            [ use
                {
                    @ loader "html-loader"
    ---
    ${'$'}if wzCtx.Build.useVue
		{	
			@ test /\.vue$/
			@ exclude /node_modules/
			[ use
				@ 'vue-loader'
    ---
	${'$'}if wzCtx.Build.webpack.useCss
        {
            @ test /\.css$/
            [ use
                ${'$'}if wzCtx.Build.webpack.useMiniCssExtract
                    @ MiniCssExtractPlugin.loader
                @ 'style-loader'
                @ 'css-loader'
                ${'$'}if wzCtx.Build.useVue
                    @ 'vue-style-loader'
        ---
	${'$'}if wzCtx.Build.webpack.useSass || wzCtx.Build.useCodemirror || wzCtx.Build.useMonaco || wzCtx.Build.usePrismjs
		{
			@ test /\.scss$/
			@ exclude /(node_modules)/
			[ use
				@ 'sass-loader'
        ---
	${'$'}if wzCtx.Build.webpack.useYaml
        {
            @ test /\.yaml$/i
            @ type 'json'
            { parser
                @ parse yaml.parse
        ---
	${'$'}if wzCtx.Build.webpack.useFile
        {
            @ test /\.(jpg|jpeg|png|gif|mp3|svg|ttf)$/
            { use
                @ loader "file-loader"
                { options
                    @ outputPath 'assets/'
                    @ name 'images/[hash]-[name].[ext]'
        ---
	${'$'}if wzCtx.Build.webpack.useImages
        {
            @ test /\.(png|svg|jpg|jpeg|gif)$/i
            @ type 'asset/resource'
        ---
	${'$'}if wzCtx.Build.webpack.useFonts
        {
            @ test /\.(woff|woff2|eot|ttf|otf)$/i
            @ type 'asset/resource'
        ---
    ${'$'}if wzCtx.Build.useGraphql
        ${'$'}if wzCtx.Build.graphql.excludePolyfill
            { 
                @ test path.resolve(__dirname, 'node_modules/cross-fetch/dist/browser-polyfill.js')
                    # graphql-request includes this polyfill
                @ use 'null-loader'