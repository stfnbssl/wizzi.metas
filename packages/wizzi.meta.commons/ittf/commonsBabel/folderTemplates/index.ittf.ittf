$group
    
    $if metaCtx.useCommonsBabel || metaCtx.useCommonsWebpack
        $include wzCtxModel

        $file __dot__wizzi/${pkgPath}root/babel.config.js.ittf.ittf
            module
                kind es6
                const path = require('path')
                set module.exports =
                    => 
                        param api
                        const isWebpack
                            _ api.caller
                                => 
                                    param caller
                                    _ Boolean(caller && caller.name === 'babel-loader')
                        return
                            {
                                [ plugins
                                    ${'$'}{'$'}include babel/${metaVer}/configjs/plugins
                                [ presets
                                    ${'$'}{'$'}include babel/${metaVer}/configjs/presets
                                { env
                                    ${'$'}{'$'}include babel/${metaVer}/configjs/env
                                [ overrides
                                    ${'$'}{'$'}include babel/${metaVer}/configjs/overrides

        $
            var items = [
                "env",
                "plugins",
                "presets",
                "overrides",
            ];

        $foreach item in items

            $file __dot__wizzi/t/babel/${metaVer}/configjs/${item}.js.ittf.ittf
                ${'$'}{'$'}group
                
                    ${'$'}include commonsBabel/tfolder/configjs/${item}.js