$group

    ${'$'}
        var ctrl = {
            name: 'Account',
            path: '/account',
            kind: 'site',
            webSecured: wzCtx.Build.useAuthentication
        }

    v08/js/controller${'('} &ctrl )
        ${'$'}append imports
            const queryString = require('query-string')
            const axios = require('axios')
            const userApi = require('../../features/account').userApi
            +
            const myname = 'site.controllers.account'
            +
        ${'$'}if wzCtx.Build.useAuthentication
            v08/js/route_web_secured${'('} get, /profile, this.profile)
        ${'$'}else
            v08/js/route${'('} get, /profile, this.profile)
        v08/js/route${'('} get, /profile/github, this.profileGithub)
        v08/js/route${'('} get, /profile/google, this.profileGoogle)
        
        ${'$'}append handlers

            v08/js/handler${'('} profile )
                _ response.render
                    @ 'account/profile.html.ittf'
                    {
                        @ title request.session.user ? request.session.user.name + ' profile Â· Wizzi' : 'User unknown'

            v08/js/handler${'('} profileGithub )
                $$ loog myname, 'profileGithub', request.session.github_access_token
                $$ loog myname, 'profileGithub', request.session
                _ axios
                    {
                        @ method 'get'
                        @ url `https://api.github.com/user`
                        { headers
                            @ Authorization 'token ' + request.session.github_access_token
                    ._ then
                        =>
                            param githubResult
                            $$ loog myname, 'profileGithub', 'githubResult.data', githubResult.data
                            if githubResult.data.email == null
                                _ response.render
                                    @ 'account/error-github-email-private.html.ittf'
                                    {
                                        @ profile githubResult.data
                                        @ message 'trying to create your wizzi account'
                            else
                                _ userApi.getUserByEmail
                                    @ githubResult.data.email
                                    ._ then
                                        =>
                                            param wizziresult
                                            $$ loog myname, 'profileGithub', 'getUserByEmail', 'wizziresult', wizziresult
                                            if wizziresult.found
                                                set request.session.user = wizziresult.user
                                                _ response.redirect('/account/profile')
                                                # _ response.send('<pre><code>' +  JSON.stringify({ userData: user /*result.data*/ }, null, 2) + '</code></pre>')
                                            else
                                                const queryParams
                                                    _ queryString.stringify
                                                        {
                                                            @ name githubResult.data.name
                                                            @ email githubResult.data.email
                                                            @ avatar_url githubResult.data.avatar_url
                                                            @ openid_provider 'github'
                                                _ response.redirect(`/user/new?${queryParams}`)
                                    ._ catch
                                        =>
                                            param err
                                            error myname, 'profileGithub', 'getUserByEmail', 'error', err
                                            _ response.render
                                                @ 'error.html.ittf'
                                                {
                                                    @ error err
                                                    @ message 'Error getting user data by email from mongodb'

            v08/js/handler${'('} profileGoogle )
                $$ loog og myname, 'profileGoogle'
                _ axios
                    {
                        @ method 'get'
                        @ url `https://www.googleapis.com/oauth2/v2/userinfo`
                        { headers
                            @ Authorization 'Bearer ' + request.session.google_access_token
                    ._ then
                        =>
                            param googleResult
                            $$ loog og myname, 'profileGoogle', 'googleResult.data', googleResult.data
                            if googleResult.data.email == null
                                _ response.render
                                    @ 'account/error-google-email-private.html.ittf'
                                    {
                                        @ profile googleResult.data
                                        @ message 'trying to create your wizzi account'
                            else
                                _ userApi.getUserByEmail
                                    @ googleResult.data.email
                                    ._ then
                                        =>
                                            param wizziresult
                                            $$ loog og myname, 'profileGoogle', 'getUserByEmail', 'wizziresult', wizziresult
                                            if wizziresult.found
                                                set request.session.user = wizziresult.user
                                                _ response.redirect('/account/profile')
                                                # _ response.send('<pre><code>' +  JSON.stringify({ userData: user /*result.data*/ }, null, 2) + '</code></pre>')
                                            else
                                                const queryParams
                                                    _ queryString.stringify
                                                        {
                                                            @ name googleResult.data.name
                                                            @ email googleResult.data.email
                                                            @ avatar_url googleResult.data.picture
                                                            @ openid_provider 'google'
                                                _ response.redirect(`/user/new?${queryParams}`)
                                    ._ catch
                                        =>
                                            param err
                                            $$ loog og myname, 'profileGoogle', 'getUserByEmail', 'error', err
                                            _ response.render
                                                @ 'error.html.ittf'
                                                {
                                                    @ error err
                                                    @ message 'getting user data by email'