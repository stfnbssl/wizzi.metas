$group

    ${'$'}if wzCtx.Build.useAuthorization
        const AuthorizationMiddleware = require('./authorization').AuthorizationMiddleware

    ${'$'}if wzCtx.Build.useLogger
        const LoggerMiddleware = require('./logger').LoggerMiddleware
    ${'$'}if wzCtx.Build.useCors
        const CorsMiddleware = require('./cors').CorsMiddleware
    ${'$'}if wzCtx.Build.useFlash
        const FlashMiddleware = require('./flash').FlashMiddleware
    ${'$'}if wzCtx.Build.useSession
        const SessionMiddleware = require('./session').SessionMiddleware
    ${'$'}if wzCtx.Build.useIttfStaticFiles
        const IttfStaticFilesMiddleware = require('./ittfStaticFiles').IttfStaticFilesMiddleware
    ${'$'}if wzCtx.Build.usePackiStatic
        const PackiStaticMiddleware = require('./packiStatic').PackiStaticMiddleware
    ${'$'}if wzCtx.Build.usePackiBrowse
        const PackiBrowseMiddleware = require('./packiBrowse').PackiBrowseMiddleware
    const BodyParserMiddleware = require('./bodyParser').BodyParserMiddleware
    const CacheControlMiddleware = require('./cacheControl').CacheControlMiddleware
    ${'$'}if wzCtx.Build.useCompression
        const CompressionMiddleware = require('./compression').CompressionMiddleware
    ${'$'}if wzCtx.Build.useHelmet
        const HelmetMiddleware = require('./helmet').HelmetMiddleware
    ${'$'}if wzCtx.Build.useNetlify
        const NetlifyServerMiddleware = require('./netlifyServer').NetlifyServerMiddleware
    ${'$'}if wzCtx.Build.useAuthentication || wzCtx.Build.useLocalUserFromConfig
        const UserInViewMiddleware = require('./userInViews').UserInViewMiddleware
    ${'$'}if wzCtx.Build.express.useStaticFiles
        const StaticFilesMiddleware = require('./static').StaticFilesMiddleware
    ${'$'}if wzCtx.Build.useWizziViewEngine
        const WizziViewEngineMiddleware = require('./wizziViewEngine').WizziViewEngineMiddleware
    ${'$'}if wzCtx.Build.useWizziCdn
        import { WizziCdnMiddleware } from './wizziCdn'
        const AuthorizationMiddleware = require('./authorization').AuthorizationMiddleware
    ${'$'}if wzCtx.Build.useWebpackApp
        const WebpackAppMiddleware = require('./webpackApp').WebpackAppMiddleware
    ${'$'}if wzCtx.Build.usePromiseMiddleware
        const PromiseMiddleware = require('./promise').PromiseMiddleware
    ${'$'}if wzCtx.Build.express.useErrors
        const ErrorsMiddleware = require('./errors').ErrorsMiddleware
    const appMiddlewaresPre
        [
            ${'$'}if wzCtx.Build.useLogger
                @ LoggerMiddleware
            ${'$'}if wzCtx.Build.useCors
                @ CorsMiddleware
            ${'$'}if wzCtx.Build.useFlash
                @ FlashMiddleware
            ${'$'}if wzCtx.Build.useSession
                @ SessionMiddleware
            ${'$'}if wzCtx.Build.useIttfStaticFiles
                @ IttfStaticFilesMiddleware
            ${'$'}if wzCtx.Build.usePackiBrowse
                @ PackiBrowseMiddleware
            ${'$'}if wzCtx.Build.usePackiStatic
                @ PackiStaticMiddleware
            ${'$'}if wzCtx.Build.useAuthorization
                @ AuthorizationMiddleware
            @ BodyParserMiddleware
            @ CacheControlMiddleware
            ${'$'}if wzCtx.Build.useCompression
                @ CompressionMiddleware
            ${'$'}if wzCtx.Build.useHelmet
                @ HelmetMiddleware
            ${'$'}if wzCtx.Build.useNetlify
                @ NetlifyServerMiddleware
            ${'$'}if wzCtx.Build.useAuthentication || wzCtx.Build.useLocalUserFromConfig
                @ UserInViewMiddleware
            ${'$'}if wzCtx.Build.express.useStaticFiles
                @ StaticFilesMiddleware
            ${'$'}if wzCtx.Build.useWizziViewEngine
                @ WizziViewEngineMiddleware
            ${'$'}if wzCtx.Build.useWizziCdn
                @ WizziCdnMiddleware
            ${'$'}if wzCtx.Build.useWebpackApp
                @ WebpackAppMiddleware
            ${'$'}if wzCtx.Build.usePromiseMiddleware
                @ PromiseMiddleware

    const appMiddlewaresPost
        [
            ${'$'}if wzCtx.Build.express.useErrors
                @ ErrorsMiddleware
    
    ${'$'}if wzCtx.Build.useAuthorization
        AuthorizationMiddleware = require('./authorization').AuthorizationMiddleware
        import
            @ checkJwt
            @ checkScopes
            from './authorization'
    
    ${'$'}if wzCtx.Build.useAuthentication
        AuthorizationMiddleware = require('./authorization').AuthorizationMiddleware
        import webSecured from './webSecured'
        import apiSecured from './apiSecured'
    
    set module.exports = {}
    set module.exports.appMiddlewaresPre = appMiddlewaresPre
    set module.exports.appMiddlewaresPost = appMiddlewaresPost
    ${'$'}if wzCtx.Build.useAuthorization
        set module.exports.checkJwt = checkJwt
        set module.exports.checkScopes = checkScopes
    ${'$'}if wzCtx.Build.useAuthentication
        set module.exports.webSecured = webSecured
        set module.exports.apiSecured = apiSecured