module
    kind react
    import 
        @ useState
        from 'react'
    import styles from '../styles.module.css'
    export-default 
        function Index
            const [response, setResponse]
                _ useState
                    :param 
                        :union 
                            :ref Record
                                :param string
                                :param unknown
                            :null 
                    @ null
            const makeRequest
                async=> 
                    const res
                        await 
                            _ fetch('/api/user')
                    _ setResponse
                        { 
                            @ status res.status
                            @ body
                                await 
                                    _ res.json()
                            @ limit res.headers.get('X-RateLimit-Limit')
                            @ remaining res.headers.get('X-RateLimit-Remaining')
            return 
                main 
                    @ className {styles.container}
                    h1 
                        + Next.js API Routes Rate Limiting
                    p 
                        + This example uses
                        code 
                            @ className {styles.inlineCode}
                            + lru-cache
                        + {' '}
                        + to implement a simple rate limiter for API routes (Serverless&lf;        Functions).
                    button 
                        @ onClick
                            => 
                                _ makeRequest()
                        + Make Request
                    { 
                        && 
                            + response
                            code 
                                @ className {styles.code}
                                pre 
                                    + {JSON.stringify(response, null, 2)}
