module
    kind react
    :import-type 
        @ NextPageWithLayout
        from './_app'
    import Layout from '../components/layout'
    import Sidebar from '../components/sidebar'
    const Contact
        :ref NextPageWithLayout
        =
            => 
                return 
                    section 
                        h2 
                            + Layout Example (Contact)
                        p 
                            + This example adds a property
                            code 
                                + getLayout
                            + to your page,&lf;        allowing you to return a React component for the layout. This allows you&lf;        to define the layout on a per-page basis. Since we're returning a&lf;        function, we can have complex nested layouts if desired.
                        p 
                            + When navigating between pages, we want to persist page state (input&lf;        values, scroll position, etc.) for a Single-Page Application (SPA)&lf;        experience.
                        p 
                            + This layout pattern will allow for state persistence because the React&lf;        component tree is persisted between page transitions. To preserve state,&lf;        we need to prevent the React component tree from being discarded between&lf;        page transitions.
                        h3 
                            + Try It Out
                        p 
                            + To visualize this, try tying in the search input in the
                            + {' '}
                            code 
                                + Sidebar
                            + and then changing routes. You'll notice the input&lf;        state is persisted.
    export-default Contact
    set Contact.getLayout =
        function getLayout
            param page
                :ref React.ReactElement
            return 
                < Layout 
                    < Sidebar 
                    + {page}
