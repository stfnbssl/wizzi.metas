module
    kind react
    const 
        { 
            @ join
        = require('path')
        # Native
    const 
        { 
            @ format
        = require('url')
        # Packages
    const 
        { 
            @ BrowserWindow
            @ app
            @ ipcMain
        = require('electron')
        # Packages
    const isDev = require('electron-is-dev')
    const prepareNext = require('electron-next')
        # Prepare the renderer once the app is ready
    _ app.on
        @ 'ready'
        async=> 
            await 
                _ prepareNext('./renderer')
            const mainWindow
                new BrowserWindow
                    { 
                        @ width 800
                        @ height 600
                        { webPreferences
                            @ nodeIntegration false
                            @ preload join(__dirname, 'preload.js')
            const url
                iif isDev
                    then 'http://localhost:8000'
                    else
                        _ format
                            { 
                                @ pathname join(__dirname, '../renderer/out/index.html')
                                @ protocol 'file:'
                                @ slashes true
            _ mainWindow.loadURL(url)
        # Prepare the renderer once the app is ready
        # Quit the app once all windows are closed
    _ app.on('window-all-closed', app.quit)
        # Quit the app once all windows are closed
        # listen the channel `message` and resend the received message to the renderer process
    _ ipcMain.on
        @ 'message'
        => 
            param event
            param message
            _ event.sender.send('message', message)
        # listen the channel `message` and resend the received message to the renderer process
