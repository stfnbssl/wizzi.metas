module
    kind react
    import Link from 'next/link'
    import styles from '../styles.module.css'
    :type CodeProps
        :{ 
            :p children
                :ref React.ReactNode
    const Code
        => 
            { 
                @ children
                :ref CodeProps
            code 
                @ className {styles.inlineCode}
                + {children}
    const IndexPage
        => 
            div 
                @ className {styles.container}
                div 
                    @ className {styles.card}
                    h1 
                        + Environment Variables with Next.js
                    hr 
                        @ className {styles.hr}
                    p 
                        + In the table below you'll see how
                        + {' '}
                        < Link 
                            @ href "https://nextjs.org/docs/basic-features/environment-variables#exposing-environment-variables-to-the-browser"
                            + environment variables can be exposed to the browser
                        + {' '}
                        + with Next.js.
                    p 
                        + In general only
                        < Code 
                            + .env.local
                        + or
                        < Code 
                            + .env
                        + are needed&lf;        for this, but the table also features the usage of
                        + {' '}
                        < Code 
                            + .env.development
                        + and
                        < Code 
                            + .env.production
                        + .
                    table 
                        @ className {styles.table}
                        thead 
                            tr 
                                th 
                                    + Variable Name
                                th 
                                    + Value
                                th 
                                    + Added By
                        tbody 
                            tr 
                                td 
                                    + NEXT_PUBLIC_ENV_VARIABLE
                                td 
                                    + {process.env.NEXT_PUBLIC_ENV_VARIABLE}
                                td 
                                    < Code 
                                        + .env
                            tr 
                                td 
                                    + NEXT_PUBLIC_ENV_LOCAL_VARIABLE
                                td 
                                    + {process.env.NEXT_PUBLIC_ENV_LOCAL_VARIABLE}
                                td 
                                    < Code 
                                        + .env.local
                            tr 
                                td 
                                    + NEXT_PUBLIC_DEVELOPMENT_ENV_VARIABLE
                                td 
                                    + {process.env.NEXT_PUBLIC_DEVELOPMENT_ENV_VARIABLE}
                                td 
                                    < Code 
                                        + .env.development
                            tr 
                                td 
                                    + NEXT_PUBLIC_PRODUCTION_ENV_VARIABLE
                                td 
                                    + {process.env.NEXT_PUBLIC_PRODUCTION_ENV_VARIABLE}
                                td 
                                    < Code 
                                        + .env.production
                    p 
                        < Code 
                            + .env.local
                        + is not added by the example, because it must be&lf;        ignored by git, but you can add it manually:
                    pre 
                        code 
                            + cp .env.local.example .env.local
                    p 
                        + Variables in
                        < Code 
                            + .env.production
                        + won't be available if the app&lf;        is running in development:
                    pre 
                        code 
                            + npm run dev
                    p 
                        + Similarly, variables in
                        < Code 
                            + .env.development
                        + won't be available&lf;        if the app is running on production:
                    pre 
                        code 
                            + npm run build && npm run start
                    p 
                        + Once you run the app, you'll see logs like these in the terminal:
                    pre 
                        code 
                            + info - Loaded env from /home/user/../.env.local
                            + {'\n'}
                            + info - Loaded env from /home/user/../.env.development
                            + {'\n'}
                            + info - Loaded env from /home/user/../.env
                            + {'\n'}
                    p 
                        + The order is important, the first loaded env will have a higher&lf;        priority.
                    p 
                        < Code 
                            + .env
                        + will not overwrite any variables defined in
                        + {' '}
                        < Code 
                            + .env.local
                        + or
                        < Code 
                            + .env.development
                        + .
        # `getStaticProps`, and similar Next.js methods like `getStaticPaths` and `getServerSideProps`
        # only run in Node.js. Check the terminal to see the environment variables
    export 
        async-function getStaticProps
            _ console.log('[Node.js only] ENV_VARIABLE:', process.env.ENV_VARIABLE)
                # Using the variables below in the browser will return `undefined`. Next.js doesn't
                # expose environment variables unless they start with `NEXT_PUBLIC_`
            _ console.log('[Node.js only] ENV_LOCAL_VARIABLE:', process.env.ENV_LOCAL_VARIABLE)
            return 
                { 
                    { props
        # `getStaticProps`, and similar Next.js methods like `getStaticPaths` and `getServerSideProps`
        # only run in Node.js. Check the terminal to see the environment variables
    export-default IndexPage
