module
    kind react
    directive 
    import ms from 'ms'
    import 
        @ useEffect
        @ useRef
        @ useState
        from 'react'
        # https://github.com/streamich/react-use/blob/master/src/useInterval.ts
    const useInterval
        => 
            param callback
                :ref Function
            param delay
                :union 
                    :number 
                    :null 
                :optional 
            const savedCallback
                _ useRef
                    :param 
                        :ref Function
                    => 
            _ useEffect
                => 
                    set savedCallback.current = callback
            _ useEffect
                => 
                    if delay !== null
                        const interval
                            _ setInterval
                                => 
                                    _ savedCallback.current()
                                @expr delay || 0
                        return 
                            => 
                                _ clearInterval(interval)
                    return undefined
                [ 
                    @ delay
        # https://github.com/streamich/react-use/blob/master/src/useInterval.ts
    export 
        function RenderedTimeAgo
            { 
                @ timestamp
                :{ 
                    :p timestamp
                        :number 
            const [msAgo, setMsAgo]
                _ useState
                    :param number
                    @ 0
                # update on page change
            _ useEffect
                => 
                    _ setMsAgo(Date.now() - timestamp)
                [ 
                    @ timestamp
                # update on page change
                # update every second
            _ useInterval
                => 
                    _ setMsAgo(Date.now() - timestamp)
                @ 1000
                # update every second
            return 
                div 
                    @ className "h-6 w-20 items-center rounded-full bg-gray-100 px-2 text-center text-sm leading-6"
                    @ title {new Date(timestamp).toISOString()}
                    { 
                        iif msAgo
                            then
                                < React.Fragment
                                    span 
                                        @ suppressHydrationWarning {true}
                                            # https://beta.reactjs.org/apis/react-dom/hydrate#avoiding-unavoidable-hydration-mismatches
                                        @ className "font-semibold tabular-nums text-gray-900"
                                        { 
                                            iif msAgo >= 1000
                                                then ms(msAgo)
                                                else '0s'
                                    + {' '}
                                    span 
                                        @ className "text-gray-600"
                                        + ago
                            else null
