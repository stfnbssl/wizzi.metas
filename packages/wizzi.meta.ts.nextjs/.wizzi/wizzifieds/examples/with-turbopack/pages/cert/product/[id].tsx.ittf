module
    kind react
    import 
        @ getProduct
        @ getProducts
        @ GetProduct
        from '#/lib/page-directory/get-products'
    import 
        @ Product
        from '#/ui/page-directory/product'
    import 
        @ Reviews
        from '#/ui/page-directory/reviews'
    import 
        @ SimilarProducts
        from '#/ui/page-directory/similar-products'
    import 
        @ GetStaticProps
        @ GetStaticPaths
        @ InferGetStaticPropsType
        from 'next'
        # ====================
        # 1. Static Data (SSG)
        # ====================
        # Provide a list of products to pre-render at build time
    export 
        const getStaticPaths
            :ref GetStaticPaths
            =
                async=> 
                    const products
                        await 
                            _ getProducts()
                    const productIds
                        _ products.slice(0, 3).map
                            => 
                                param product
                                +
                                    @expr product.id
                        # ["1", "2", "3"]
                    return 
                        { 
                            @ paths
                                _ productIds.map
                                    => 
                                        param id
                                        (
                                            { 
                                                { params
                                                    @ id
                            @ fallback 'blocking'
                                # [{ params: { id: "1" } }, ...]
                                # Incremental Static Regeneration:
                                # - Generate the rest of our product catalogue at runtime, when they are visited
                                # - Balance between faster builds and caching more ahead of time
                                # ["4", "5", "..."]
                        # ["1", "2", "3"]
        # ====================
        # 1. Static Data (SSG)
        # ====================
        # Provide a list of products to pre-render at build time
        # Fetch necessary data for each product when pre-rendered or revalidated
    export 
        const getStaticProps
            :ref GetStaticProps
                :param 
                    :{ 
                        :p product
                            :ref GetProduct
            =
                async=> 
                    param context
                    const id
                        @expr context.params?.id
                            :as 
                                :string 
                    const product
                        await 
                            _ getProduct(id)
                    return 
                        { 
                            { props
                                @ product
                            @ revalidate 60
                                # Revalidate pages in the background without having to rebuild the entire site
                                # Time based revalidation:
                                # Periodically revalidate products when a new request comes in
                                # At most once every 60 seconds
                                # On demand revalidation:
                                # Triggered by event e.g. CMS update webhook
                                # Use an API route e.g. `await res.revalidate('/product/1')`
        # Fetch necessary data for each product when pre-rendered or revalidated
        # ===============
        # 2. Dynamic Data (SSR)
        # ===============
        # Server Side Rendering at runtime
        # export const getServerSideProps: GetServerSideProps<{
        # product: GetProduct;
        # }> = async (context) => {
        # const id = context.params?.id as string;
        # const product = await getProduct(id);
        # return {
        # props: {
        # product,
        # },
        # };
        # };
        # =======
        # 3. Page
        # =======
    export-default 
        function Page
            { 
                @ product
                    # passed from getStaticProps or getServerSideProps
                :ref InferGetStaticPropsType
                    :param 
                        :typeof getStaticProps
            return 
                div 
                    @ className "space-y-8 lg:space-y-14"
                    < Product 
                        @ product {product.product}
                    < SimilarProducts 
                        @ products {product.similarProducts}
                    < Reviews 
                        @ reviews {product.reviews}
        # ===============
        # 2. Dynamic Data (SSR)
        # ===============
        # Server Side Rendering at runtime
        # export const getServerSideProps: GetServerSideProps<{
        # product: GetProduct;
        # }> = async (context) => {
        # const id = context.params?.id as string;
        # const product = await getProduct(id);
        # return {
        # props: {
        # product,
        # },
        # };
        # };
        # =======
        # 3. Page
        # =======
