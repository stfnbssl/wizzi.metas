module
    kind react
    import 
        @ useState
        @ useEffect
        from 'react'
    import userbase from 'userbase-js'
    function LoginModal
        { 
            @ toggle
            @ modalType
            @ setUser
        const [username, setUsername] = useState('')
        const [password, setPassword] = useState('')
        const [loading, setLoading] = useState()
        const [error, setError] = useState()
        _ useEffect
            => 
                _ setError('')
            [ 
                @ modalType
        async-function handleSignUp
            param e
            _ e.preventDefault()
            _ setLoading(true)
            try 
                const user
                    await 
                        _ userbase.signUp
                            { 
                                @ username
                                @ password
                                @ rememberMe 'none'
                _ setUser(user)
                _ setLoading(false)
                _ toggle(false)
            catch e
                _ setLoading(false)
                _ setError(e.message)
        async-function handleLogIn
            param e
            _ e.preventDefault()
            _ setLoading(true)
            try 
                const user
                    await 
                        _ userbase.signIn
                            { 
                                @ username
                                @ password
                                @ rememberMe 'none'
                _ setUser(user)
                _ setLoading(false)
                _ toggle(false)
            catch e
                _ setLoading(false)
                _ setError(e.message)
        return 
            form 
                @ className "bg-white shadow-md rounded p-8"
                div 
                    @ className "mb-4"
                    label 
                        @ className "block text-purple-700 text-sm font-bold mb-2"
                        @ htmlFor "username"
                        + Username
                    input 
                        @ className "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                        @ id "username"
                        @ type "text"
                        @ placeholder "Username"
                        @ value {username}
                        @ onChange
                            => 
                                param e
                                _ setUsername(e.target.value)
                div 
                    @ className "mb-4"
                    label 
                        @ className "block text-purple-700 text-sm font-bold mb-2"
                        @ htmlFor "password"
                        + Password
                    input 
                        @ className "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                        @ id "password"
                        @ type "password"
                        @ placeholder "*******"
                        @ value {password}
                        @ onChange
                            => 
                                param e
                                _ setPassword(e.target.value)
                div 
                    @ className "flex items-center justify-between"
                    span 
                        @ className "font-bold cursor-pointer"
                        @ onClick
                            => 
                                _ toggle(false)
                        + Cancel
                    { 
                        iif modalType === 'logIn'
                            then
                                button 
                                    @ disabled {loading}
                                    @ className "btn-yellow"
                                    @ onClick {handleLogIn}
                                    { 
                                        iif loading
                                            then 'Logging In ...'
                                            else 'Log In'
                            else
                                button 
                                    @ disabled {loading}
                                    @ className "btn-yellow"
                                    @ onClick {handleSignUp}
                                    { 
                                        iif loading
                                            then 'Signing up ...'
                                            else 'Sign Up'
                p 
                    @ className "text-red-500 font-bold"
                    + {error}
    export-default LoginModal
