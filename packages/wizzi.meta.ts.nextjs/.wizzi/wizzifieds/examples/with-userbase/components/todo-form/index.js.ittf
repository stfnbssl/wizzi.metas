module
    kind react
    import 
        @ useState
        @ useEffect
        from 'react'
    import userbase from 'userbase-js'
    function Todo
        { 
            @ name
            @ done
            @ toggleComplete
            @ deleteTodo
        return 
            li 
                @ className "my-4"
                div 
                    @ className "flex items-center"
                    span 
                        @ className
                            iif done
                                then 'text-gray-500'
                                else ''
                        + {name}
                    button 
                        @ type "button"
                        @ className "mx-4 p-1 rounded bg-purple-400 text-white font-bold"
                        @ onClick
                            => 
                                param e
                                _ e.preventDefault()
                                _ toggleComplete()
                        { 
                            iif done
                                then 'not done'
                                else 'done'
                    button 
                        @ type "button"
                        @ onClick
                            => 
                                param e
                                _ e.preventDefault()
                                _ deleteTodo()
                        @ className " p-1 bg-red-500 text-white rounded font-bold"
                        + delete
    function TodoForm
        const [newTodo, setNewTodo] = useState('')
        const [todos, setTodos] = useState([])
        const [disabled, setDisabled] = useState()
        _ useEffect
            => 
                async-function openDatabase
                    try 
                        _ console.log('opening db...')
                        await 
                            _ userbase.openDatabase
                                { 
                                    @ databaseName 'next-userbase-todos'
                                    @ changeHandler
                                        function 
                                            param items
                                            _ setTodos(items)
                    catch e
                        _ console.error(e.message)
                _ openDatabase()
            [ 
        async-function addTodo
            param e
            _ e.preventDefault()
            _ setDisabled(true)
            try 
                await 
                    _ userbase.insertItem
                        { 
                            @ databaseName 'next-userbase-todos'
                            { item
                                @ name newTodo
                                @ done false
                _ setNewTodo('')
                _ setDisabled(false)
            catch e
                _ console.error(e.message)
                _ setDisabled(false)
        async-function toggleComplete
            param itemId
            param currentValue
            try 
                await 
                    _ userbase.updateItem
                        { 
                            @ databaseName 'next-userbase-todos'
                            { item
                                @ ...currentValue
                                @ done !currentValue.done
                            @ itemId
            catch e
                _ console.error(e.message)
        function handleNewTodo
            param e
            _ e.preventDefault()
            _ setNewTodo(e.target.value)
        async-function deleteTodo
            param itemId
            _ setDisabled(true)
            try 
                await 
                    _ userbase.deleteItem
                        { 
                            @ databaseName 'next-userbase-todos'
                            @ itemId
                _ setNewTodo('')
                _ setDisabled(false)
            catch e
                _ console.error(e.message)
                _ setDisabled(false)
        return 
            form 
                @ className "bg-white shadow-md rounded p-8"
                @ onSubmit {addTodo}
                ul 
                    { 
                        _ todos.map
                            => 
                                param todo
                                < Todo 
                                    @ key {todo.itemId}
                                    @ name {todo.item.name}
                                    @ done {todo.item.done}
                                    @ toggleComplete
                                        => 
                                            _ toggleComplete(todo.itemId, todo.item)
                                    @ deleteTodo
                                        => 
                                            _ deleteTodo(todo.itemId)
                div 
                    @ className "flex my-4"
                    input 
                        @ type "text"
                        @ onChange {handleNewTodo}
                        @ value {newTodo}
                        @ className "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                    button 
                        @ disabled {disabled}
                        @ className "btn-yellow mx-4"
                        @ type "submit"
                        + add
    export-default TodoForm
