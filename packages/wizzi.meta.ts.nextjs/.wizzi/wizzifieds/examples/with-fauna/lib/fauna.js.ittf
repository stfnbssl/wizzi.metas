module
    kind react
    import 
        @ GraphQLClient
        @ gql
        from 'graphql-request'
    import 
        @ resolveDbDomain
        from './constants'
    const CLIENT_SECRET = process.env.FAUNA_ADMIN_KEY || process.env.FAUNA_CLIENT_SECRET
    const FAUNA_GRAPHQL_DOMAIN = resolveDbDomain().replace('db', 'graphql')
    const FAUNA_GRAPHQL_BASE_URL
        `lit 
            + https://
            @ FAUNA_GRAPHQL_DOMAIN
            + /graphql
    const graphQLClient
        new GraphQLClient
            @ FAUNA_GRAPHQL_BASE_URL
            { 
                { headers
                    @ authorization
                        `lit 
                            + Bearer&nbsp;
                            @ CLIENT_SECRET
                            + 
    export 
        const listGuestbookEntries
            => 
                const query
                    _` gql
                        + &lf;
                        + &nbsp;   query Entries($size: Int) {&lf;
                        + &nbsp;     entries(_size: $size) {&lf;
                        + &nbsp;       data {&lf;
                        + &nbsp;         _id&lf;
                        + &nbsp;         _ts&lf;
                        + &nbsp;         name&lf;
                        + &nbsp;         message&lf;
                        + &nbsp;         createdAt&lf;
                        + &nbsp;       }&lf;
                        + &nbsp;     }&lf;
                        + &nbsp;   }&lf;
                        + &nbsp;&nbsp;
                return 
                    _ graphQLClient.request
                        @ query
                        { 
                            @ size 999
                        ._ then
                            => 
                                { 
                                    { entries
                                        @ data
                                + data
    export 
        const createGuestbookEntry
            => 
                param newEntry
                const mutation
                    _` gql
                        + &lf;
                        + &nbsp;   mutation CreateGuestbookEntry($input: GuestbookEntryInput!) {&lf;
                        + &nbsp;     createGuestbookEntry(data: $input) {&lf;
                        + &nbsp;       _id&lf;
                        + &nbsp;       _ts&lf;
                        + &nbsp;       name&lf;
                        + &nbsp;       message&lf;
                        + &nbsp;       createdAt&lf;
                        + &nbsp;     }&lf;
                        + &nbsp;   }&lf;
                        + &nbsp;&nbsp;
                return 
                    _ graphQLClient.request
                        @ mutation
                        { 
                            @ input newEntry
