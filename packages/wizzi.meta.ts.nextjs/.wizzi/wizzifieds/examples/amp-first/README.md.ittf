md
    h1 
        + AMP First Boilerplate âš¡
    p 
        + This example sets up the boilerplate for an AMP First Site. You can see a
        a 
            href https://my-next-app.sebastianbenz.vercel.app
            title 
            + live version here
        + . The boilerplate includes the following features:
    br 
    ul 
        li 
            + AMP Extension helpers (
            code amp-state
            + ,
            code amp-script
            + , ...)
        li 
            + AMP Serviceworker integration
        li 
            + App manifest
        li 
            + Offline page
    br 
    h2 
        + Deploy your own
    p 
        + Deploy the example using
        a 
            href https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example
            title 
            + Vercel
        + :
    br 
    p 
        a 
            href https://vercel.com/new/clone?repository-url=https://github.com/vercel/next.js/tree/canary/examples/amp-first&project-name=amp-first&repository-name=amp-first
            title 
            img 
                href https://vercel.com/button
                title 
    br 
    h2 
        + How to use
    p 
        + Execute
        a 
            href https://github.com/vercel/next.js/tree/canary/packages/create-next-app
            title 
            code create-next-app
        + with
        a 
            href https://docs.npmjs.com/cli/init
            title 
            + npm
        + ,
        a 
            href https://yarnpkg.com/lang/en/docs/cli/create/
            title 
            + Yarn
        + , or
        a 
            href https://pnpm.io
            title 
            + pnpm
        + to bootstrap the example:
    br 
    code 
        lang bash
        + npx create-next-app --example amp-first amp-first-app
    br 
    code 
        lang bash
        + yarn create next-app --example amp-first amp-first-app
    br 
    code 
        lang bash
        + pnpm create next-app --example amp-first amp-first-app
    br 
    p 
        + Open
        a 
            href http://localhost:3000
            title 
            + http://localhost:3000
        + to view it in the browser. The page will reload if you make edits. You will also see AMP validation errors in the console.
    br 
    h2 
        + Todo
    p 
        + Things you need to do after installing the boilerplate:
    br 
    ul 
        ordered 
        li 
            + Update your app manifest in
            a 
                href public/manifest.json
                title 
                code public/manifest.json
            + with your app-specific data (
            code theme_color
            + ,
            code background_color
            + ,
            code name
            + ,
            code short_name
            + ).
        li 
            + Update the
            code THEME_COLOR
            + variable defined in
            a 
                href components/Layout.js
                title 
                code components/Layout.js
            + .
        li 
            + Update favicon and icons in
            a 
                href public/favicon.ico
                title 
                code public/favicon.ico
            + and
            a 
                href public/static/images
                title 
                code public/static/images/icons-*.png
            + .
        li 
            + Set the default language in
            a 
                href pages/_document.js
                title 
                code pages/_document.js
            + .
        li 
            + Review the AMP Serviceworker implementation in
            a 
                href public/serviceworker.js
                title 
                code public/serviceworker.js
            + .
    br 
    h2 
        + Tips &amp; Tricks
    ul 
        loose 
        li 
            b 
                + Using AMP Components:
            + you can import AMP components using
            code next/head
            + . Checkout
            code components/amp/AmpCustomElement
            + for a simple way to import AMP components. Once the component is imported, you can use it like any other HTML element.
        li 
            b 
                + amp-bind &amp; amp-state:
            + it&#39;s no problem to use
            code amp-bind
            + and
            code amp-state
            + with Next.js. There are two things to be aware of:
            br 
            ul 
                ordered 
                loose 
                li 
                    + The
                    code [...]
                    + binding syntax, e.g.
                    code [text]=&quot;myStateVariable&quot;
                    + , is not supported in JSX. Use
                    code data-amp-bind-text=&quot;myStateVariable&quot;
                    + instead.
                li 
                    + Initializing
                    code amp-state
                    + via JSON string is not supported in JSX:
                    br 
                    code 
                        lang html
                        + <amp-state id="myState">
                        + <script type="application/json">
                        + {
                        + "foo": "bar"
                        + }
                        + </script>
                        + </amp-state>
                    br 
                    + Instead you need to use
                    code dangerouslySetInnerHTML
                    + to initialize the string. can use the
                    a 
                        href components/amp/AmpState.js
                        title 
                        code /components/amp/AmpState.js
                    + component to see how it works. The same approach works for
                    code amp-access
                    + and
                    code amp-consent
                    + as well:
                    br 
                    code 
                        lang html
                        + <AmpState id="message" value={ message: 'Hello World' }/>
        li 
            b 
                + amp-list &amp; amp-mustache:
            + mustache templates conflict with JSX and it&#39;s template literals need to be escaped. A simple approach is to escape them via back ticks:
            code src={`{{imageUrl}}`}
            + .
        li 
            b 
                + amp-script:
            + you can use
            a 
                href https://amp.dev/documentation/components/amp-script/
                title 
                + amp-script
            + to add custom JavaScript to your AMP pages. The boilerplate includes a helper
            a 
                href components/amp/AmpScript.js
                title 
                code components/amp/AmpScript.js
            + to simplify using
            code amp-script
            + . The helper also supports embedding inline scripts. Good to know: Next.js uses
            a 
                href https://github.com/ampproject/amp-toolbox/tree/master/packages/optimizer
                title 
                + AMP Optimizer
            + under the hood, which automatically adds the needed script hashes for
            a 
                href https://amp.dev/documentation/components/amp-script/#load-javascript-from-a-local-element
                title 
                + inline amp-scripts
            + .
    br 
    h2 
        + Deployment
    p 
        + For production builds, you need to run (the app will be build into the
        code .next
        + folder):
    br 
    code 
        lang shell
        + $ yarn build
    br 
    p 
        + To start the application in production mode, run:
    br 
    code 
        lang shell
        + $ yarn start
    br 
    p 
        + Deploy it to the cloud with
        a 
            href https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example
            title 
            + Vercel
        + (
        a 
            href https://nextjs.org/docs/deployment
            title 
            + Documentation
        + ).
