module
    kind react
    import 
        @ useState
        from 'react'
    import 
        @ useSubscription
        @ useMutation
        @ gql
        from '@apollo/client'
    import 
        @ PrivateRoute
        from '../components/private-route'
    import 
        @ nhost
        from '../utils/nhost'
    const INSERT_ITEM
        _` gql
            + &lf;
            + &nbsp; mutation insertItem($item: items_insert_input!) {&lf;
            + &nbsp;   insert_items_one(object: $item) {&lf;
            + &nbsp;     id&lf;
            + &nbsp;   }&lf;
            + &nbsp; }&lf;
            + 
    const S_GET_ITEMS
        _` gql
            + &lf;
            + &nbsp; subscription sGetItems {&lf;
            + &nbsp;   items {&lf;
            + &nbsp;     id&lf;
            + &nbsp;     name&lf;
            + &nbsp;   }&lf;
            + &nbsp; }&lf;
            + 
    const DELETE_ITEM
        _` gql
            + &lf;
            + &nbsp; mutation deleteItem($item_id: uuid!) {&lf;
            + &nbsp;   delete_items_by_pk(id: $item_id) {&lf;
            + &nbsp;     id&lf;
            + &nbsp;   }&lf;
            + &nbsp; }&lf;
            + 
    function InsertItem
        const [name, setName] = useState('')
        const [insertItem] = useMutation(INSERT_ITEM)
        async-function handleFormSubmit
            param e
            _ e.preventDefault()
            try 
                _ insertItem
                    { 
                        { variables
                            { item
                                @ name
            catch error
                _ console.error(error)
                return alert('Error inserting item')
            _ setName('')
        return 
            div 
                @ style
                    { 
                        @ padding '10px'
                form 
                    @ onSubmit {handleFormSubmit}
                    div 
                        input 
                            @ type "name"
                            @ value {name}
                            @ onChange
                                => 
                                    param e
                                    _ setName(e.target.value)
                    div 
                        button 
                            @ type "submit"
                            + Insert item
    function ListItems
        const 
            { 
                @ loading
                @ error
                @ data
            = useSubscription(S_GET_ITEMS)
        const [deleteItem] = useMutation(DELETE_ITEM)
        async-function handleDeleteItem
            param itemId
            try 
                _ deleteItem
                    { 
                        { variables
                            @ item_id itemId
            catch error
                _ console.log(error)
                return alert('Error deleting item')
        if loading && !data
            return 
                div 
                    + Loading...
        if error
            return 
                div 
                    + Error loading items
        const 
            { 
                @ items
            = data
        return 
            div 
                @ style
                    { 
                        @ padding '10px'
                { 
                    _ items.map
                        => 
                            param item
                            return 
                                li 
                                    @ key {item.id}
                                    + {item.name}
                                    + [
                                    span 
                                        @ onClick
                                            => 
                                                _ handleDeleteItem(item.id)
                                        + delete
                                    + ]
    function Home
        return 
            div 
                div 
                    @ style
                        { 
                            @ display 'flex'
                            @ alignItems 'center'
                    pre 
                        + {nhost.auth.user().display_name}
                    div 
                        @ style
                            { 
                                @ paddingLeft '10px'
                        button 
                            @ onClick
                                => 
                                    _ nhost.auth.logout()
                            + logout
                h1 
                    + Dashboard
                < InsertItem 
                < ListItems 
    export-default PrivateRoute(Home)
