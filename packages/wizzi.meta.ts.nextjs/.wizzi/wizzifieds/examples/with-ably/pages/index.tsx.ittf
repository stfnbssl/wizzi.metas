module
    kind react
    import 
        @ useState
        from 'react'
    import 
        @ useChannel
        @ usePresence
        from '@ably-labs/react-hooks'
    :import-type 
        @ Types
        from 'ably'
    :import-type 
        @ ProxyMessage
        @ TextMessage
        from '../types'
    import Head from 'next/head'
    import Image from 'next/image'
    import styles from '../styles/Home.module.css'
    export-default 
        function Home
            const [messages, setMessages]
                _ useState
                    :param 
                        :[ 
                            :ref TextMessage
                    [ 
            const [channel, ably]
                _ useChannel
                    @ 'some-channel-name'
                    async=> 
                        param message
                            :ref Types.Message
                        _ console.log('Received Ably message', message)
                        _ setMessages
                            => 
                                param messages
                                [ 
                                    @ ...messages
                                    @ message.data
            const [presenceData, updateStatus] = usePresence('your-channel-name')
            const messageList
                _ messages.map
                    => 
                        param message
                        param index
                        return 
                            li 
                                @ key {index}
                                + {message.text}
            const presentClients
                _ presenceData.map
                    => 
                        param msg
                        param index
                        li 
                            @ key {index}
                            + {msg.clientId}
                            + :
                            + {msg.data}
            return 
                div 
                    @ className {styles.container}
                    < Head 
                        < title 
                            + Create Next App
                        meta 
                            @ name "description"
                            @ content "Generated by create next app"
                        link 
                            @ rel "icon"
                            @ href "/favicon.ico"
                    h1 
                        + Realtime Edge Messaging with Next and Ably
                    p 
                        + Use the buttons below to send and receive messages or to update your&lf;        status.
                    main 
                        @ className {styles.main}
                        h2 
                            + Present Clients
                        button 
                            @ onClick
                                => 
                                    _ updateStatus('hello')
                            + Update status to hello
                        ul 
                            + {presentClients}
                        h2 
                            + Ably Message Data
                        button 
                            @ className {styles.button}
                            @ onClick
                                => 
                                    const message
                                        :ref TextMessage
                                        =
                                            { 
                                                @ text
                                                    `lit 
                                                        + 
                                                        @ ably.auth.clientId
                                                        + &nbsp;sent a message
                                    _ channel.publish('test-message', message)
                            + Send A Message
                        button 
                            @ className {styles.button}
                            @ onClick
                                => 
                                    const proxyMessage
                                        :ref ProxyMessage
                                        =
                                            { 
                                                @ sender
                                                    `lit 
                                                        + 
                                                        @ ably.auth.clientId
                                                        + 
                                    _ fetch
                                        @ '/api/send-message'
                                        { 
                                            @ method 'POST'
                                            { headers
                                                @ 'Content-Type' 'application/json'
                                            @ body JSON.stringify(proxyMessage)
                            + Send A Message From the Server
                        ul 
                            + {messageList}
                    footer 
                        @ className {styles.footer}
                        + Powered by
                        a 
                            @ href "https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                            @ target "_blank"
                            @ rel "noopener noreferrer"
                            span 
                                < Image 
                                    @ src "/vercel.svg"
                                    @ alt "Vercel Logo"
                                    @ width {100}
                                    @ height {32}
                        + and
                        a 
                            @ href "https://ably.com/"
                            img 
                                @ src "/ably.svg"
                                @ alt "Ably Realtime"
                                @ className {styles.logo}
