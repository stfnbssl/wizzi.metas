module
    kind react
    import 
        @ GetServerSideProps
        @ NextPage
        from 'next'
    import Head from 'next/head'
    import Image from 'next/image'
    import 
        @ useRouter
        from 'next/router'
    import React
        @ ChangeEvent
        @ useState
        from 'react'
    import ApiVideoPlayer
        @ PlayerTheme
        from '@api.video/react-player'
    :interface IVideoViewProps
        :p children
            :ref React.ReactNode
        :p videoId
            :string 
        :p uploaded
            :string 
    const VideoView
        :ref NextPage
            :param 
                :ref IVideoViewProps
        =
            => 
                { 
                    @ videoId
                    @ uploaded
                :return
                    :ref JSX.Element
                const [playerTheme, setPlayerTheme]
                    _ useState
                        :param 
                            :ref PlayerTheme
                        { 
                            @ link 'rgb(235, 137, 82)'
                            @ linkHover 'rgb(240, 95, 12)'
                const [hideControls, setHideControls]
                    _ useState
                        :param boolean
                        @ false
                const router = useRouter()
                const handleChangeSetting
                    => 
                        param e
                            :ref ChangeEvent
                                :param 
                                    :ref HTMLInputElement
                        _ setPlayerTheme
                            { 
                                @ ...playerTheme
                                @ [e.currentTarget.id] e.currentTarget.value
                return 
                    div 
                        @ className "global-container"
                        < Head 
                            < title 
                                + Video view
                            meta 
                                @ name "description"
                                @ content "Generated by create next app & created by api.video"
                            link 
                                @ rel "icon"
                                @ href "/favicon.ico"
                        header 
                            { 
                                iif uploaded
                                    then
                                        < React.Fragment
                                            span 
                                                + Already there
                                            + ðŸŽ‰
                                    else
                                        < React.Fragment
                                            span 
                                                + Here's your player
                                            + ðŸ‘€
                        main 
                            div 
                                @ className "texts-container"
                                p 
                                    + This player is generated by the
                                    + {' '}
                                    a 
                                        @ target "_blank"
                                        @ rel "noopener noreferrer"
                                        @ href "https://github.com/apivideo/api.video-react-player"
                                        + api.video's React player component
                                    + .
                                    br 
                                    + It provides multiple properties to customize your video player.
                                p 
                                    + Try 3 of them just below ðŸ‘‡
                            div 
                                @ className "inputs-container"
                                div 
                                    label 
                                        + Play button color
                                    input 
                                        @ id "link"
                                        @ type "text"
                                        @ placeholder "Play button color"
                                        @ value {playerTheme.link}
                                        @ onChange {handleChangeSetting}
                                div 
                                    label 
                                        + Buttons hover color
                                    input 
                                        @ id "linkHover"
                                        @ type "text"
                                        @ placeholder "Buttons hover color"
                                        @ value {playerTheme.linkHover}
                                        @ onChange {handleChangeSetting}
                                div 
                                    input 
                                        @ type "checkbox"
                                        @ checked {hideControls}
                                        @ onChange
                                            => 
                                                param e
                                                _ setHideControls(e.currentTarget.checked)
                                    label 
                                        + Hide controls
                            < ApiVideoPlayer 
                                @ video
                                    { 
                                        @ id videoId
                                @ style
                                    { 
                                        @ width '75%'
                                        @ height 300
                                @ theme {playerTheme}
                                @ chromeless {hideControls}
                            button 
                                @ className "upload"
                                @ onClick
                                    => 
                                        _ router.push
                                            iif uploaded
                                                then '/uploader'
                                                else '/videos'
                                { 
                                    iif uploaded
                                        then 'Another video?'
                                        else 'Videos list'
                        footer 
                            a 
                                @ href "https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                                @ target "_blank"
                                @ rel "noopener noreferrer"
                                + Powered by
                                + {' '}
                                span 
                                    < Image 
                                        @ src "/vercel.svg"
                                        @ alt "Vercel Logo"
                                        @ width {72}
                                        @ height {16}
                            span 
                                + and
                            a 
                                @ href "https://api.video"
                                @ target "_blank"
                                @ rel "noopener noreferrer"
                                + api.video
    export-default VideoView
    export 
        const getServerSideProps
            :ref GetServerSideProps
            =
                async=> 
                    param context
                    const 
                        { 
                            @ videoId
                            @ uploaded
                        = context.query
                    return 
                        { 
                            { props
                                @ videoId
                                @ uploaded uploaded ?? null
