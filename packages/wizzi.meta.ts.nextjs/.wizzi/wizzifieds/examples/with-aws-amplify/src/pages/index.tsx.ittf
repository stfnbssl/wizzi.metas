module
    kind react
    import 
        @ Authenticator
        from '@aws-amplify/ui-react'
    import 
        @ Amplify
        @ API
        @ withSSRContext
        from 'aws-amplify'
    import Head from 'next/head'
    import awsExports from '../aws-exports'
    import 
        @ createTodo
        from '../graphql/mutations'
    import 
        @ listTodos
        from '../graphql/queries'
    import 
        @ CreateTodoInput
        @ CreateTodoMutation
        @ ListTodosQuery
        @ Todo
        from '../API'
    import 
        @ GRAPHQL_AUTH_MODE
        from '@aws-amplify/api'
    import 
        @ useRouter
        from 'next/router'
    import Image from 'next/image'
    import 
        @ GetServerSideProps
        from 'next'
    import styles from '../styles/Home.module.css'
    _ Amplify.configure
        { 
            @ ...awsExports
            @ ssr true
    export-default 
        function Home
            { 
                @ todos
                    = []
                :{ 
                    :p todos
                        :[ 
                            :ref Todo
            const router = useRouter()
            async-function handleCreateTodo
                param event
                _ event.preventDefault()
                const form = new FormData(event.target)
                try 
                    const createInput
                        :ref CreateTodoInput
                        =
                            { 
                                @ name form.get('title').toString()
                                @ description form.get('content').toString()
                    const request
                        @expr
                            await 
                                _ API.graphql
                                    { 
                                        @ authMode GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS
                                        @ query createTodo
                                        { variables
                                            @ input createInput
                            :as 
                                :{ 
                                    :p data
                                        :ref CreateTodoMutation
                                    :p errors
                                        :[ 
                                            :any 
                    _ router.push
                        `lit 
                            + /todo/
                            @ request.data.createTodo.id
                            + 
                catch 
                    _ console.error(...errors)
                    throw new Error(errors[0].message)
            return 
                div 
                    @ className {styles.container}
                    < Head 
                        < title 
                            + Amplify + Next.js
                        link 
                            @ rel "icon"
                            @ href "/favicon.ico"
                    main 
                        @ className {styles.main}
                        h1 
                            @ className {styles.title}
                            + Amplify + Next.js
                        p 
                            @ className {styles.description}
                            code 
                                @ className {styles.code}
                                + {todos.length}
                            + Todos
                        div 
                            @ className {styles.grid}
                            { 
                                _ todos.map
                                    => 
                                        param todo
                                        a 
                                            @ href
                                                `lit 
                                                    + /todo/
                                                    @ todo.id
                                                    + 
                                            @ key {todo.id}
                                            h3 
                                                + {todo.name}
                                            p 
                                                + {todo.description}
                            div 
                                @ className {styles.card}
                                h3 
                                    @ className {styles.title}
                                    + New Todo
                                < Authenticator 
                                    { 
                                        => 
                                            { 
                                                @ signOut
                                            form 
                                                @ onSubmit {handleCreateTodo}
                                                fieldset 
                                                    legend 
                                                        + Title
                                                    input 
                                                        @ defaultValue
                                                            `lit 
                                                                + Today,&nbsp;
                                                                _ new Date().toLocaleTimeString()
                                                                + 
                                                        @ name "title"
                                                fieldset 
                                                    legend 
                                                        + Content
                                                    textarea 
                                                        @ defaultValue "I built an Amplify app with Next.js!"
                                                        @ name "content"
                                                button 
                                                    + Create Todo
                                                button 
                                                    @ type "button"
                                                    @ onClick {signOut}
                                                    + Sign out
                    footer 
                        @ className {styles.footer}
                        a 
                            @ href "https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                            @ target "_blank"
                            @ rel "noopener noreferrer"
                            + Powered by
                            + {' '}
                            span 
                                @ className {styles.logo}
                                < Image 
                                    @ src "/vercel.svg"
                                    @ alt "Vercel Logo"
                                    @ width {72}
                                    @ height {16}
    export 
        const getServerSideProps
            :ref GetServerSideProps
            =
                async=> 
                    { 
                        @ req
                    const SSR
                        _ withSSRContext
                            { 
                                @ req
                    const response
                        @expr
                            await 
                                _ SSR.API.graphql
                                    { 
                                        @ query listTodos
                            :as 
                                :{ 
                                    :p data
                                        :ref ListTodosQuery
                    return 
                        { 
                            { props
                                @ todos response.data.listTodos.items
