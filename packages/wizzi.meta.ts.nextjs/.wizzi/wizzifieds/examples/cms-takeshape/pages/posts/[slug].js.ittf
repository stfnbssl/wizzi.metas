module
    kind react
    import 
        @ useRouter
        from 'next/router'
    import ErrorPage from 'next/error'
    import 
        @ getImageUrl
        from 'takeshape-routing'
    import Container from '../../components/container'
    import PostBody from '../../components/post-body'
    import MoreStories from '../../components/more-stories'
    import Header from '../../components/header'
    import PostHeader from '../../components/post-header'
    import SectionSeparator from '../../components/section-separator'
    import Layout from '../../components/layout'
    import 
        @ getAllPostsWithSlug
        @ getPostAndMorePosts
        from '../../lib/api'
    import PostTitle from '../../components/post-title'
    import Head from 'next/head'
    import 
        @ CMS_NAME
        from '../../lib/constants'
    import markdownToHtml from '../../lib/markdownToHtml'
    export-default 
        function Post
            { 
                @ post
                @ morePosts
                @ preview
            const router = useRouter()
            if !router.isFallback && !post?.slug
                return 
                    < ErrorPage 
                        @ statusCode {404}
            return 
                < Layout 
                    @ preview {preview}
                    < Container 
                        < Header 
                        { 
                            iif router.isFallback
                                then
                                    < PostTitle 
                                        + Loadingâ€¦
                                else
                                    < React.Fragment
                                        article 
                                            < Head 
                                                < title 
                                                    { 
                                                        `lit 
                                                            + 
                                                            @ post.title
                                                            + &nbsp;| Next.js Blog Example with&nbsp;
                                                            @ CMS_NAME
                                                            + 
                                                meta 
                                                    @ property "og:image"
                                                    @ content
                                                        _ getImageUrl
                                                            @expr post.coverImage
                                                            { 
                                                                @ fm 'jpg'
                                                                @ fit 'crop'
                                                                @ w 2000
                                                                @ h 1000
                                            < PostHeader 
                                                @ title {post.title}
                                                @ coverImage {post.coverImage}
                                                @ date {post.date}
                                                @ author {post.author}
                                            < PostBody 
                                                @ content {post.content}
                                        < SectionSeparator 
                                        { 
                                            && 
                                                + morePosts.length > 0
                                                < MoreStories 
                                                    @ posts {morePosts}
    export 
        async-function getStaticProps
            { 
                @ params
                @ preview
                    = false
            const data
                await 
                    _ getPostAndMorePosts(params.slug, preview)
            const content
                await 
                    _ markdownToHtml((data?.post?.items || [])[0]?.content || '')
            return 
                { 
                    { props
                        @ preview
                        { post
                            @ ...(data?.post?.items || [])[0]
                            @ content
                        @ morePosts data?.morePosts?.items ?? []
    export 
        async-function getStaticPaths
            const allPosts
                await 
                    _ getAllPostsWithSlug()
            return 
                { 
                    @ paths
                        || 
                            _ allPosts?.map?.
                                => 
                                    param post
                                    `lit 
                                        + /posts/
                                        @ post.slug
                                        + 
                            + []
                    @ fallback true
