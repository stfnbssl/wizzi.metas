module
    kind react
    import React
        @ useState
        from 'react'
    import 
        @ GetServerSidePropsContext
        @ InferGetServerSidePropsType
        from 'next'
    import Layout from '../../components/Layout'
    import Router from 'next/router'
    import 
        @ client
        @ e
        from '../../client'
    import ReactMarkdown from 'react-markdown'
    async-function update
        param id
            :string 
        param data
            :{ 
                :p title
                    :optional 
                    :string 
                :p content
                    :optional 
                    :string 
        :return
            :ref Promise
                :param void
        await 
            _ fetch
                `lit 
                    + /api/post/
                    @ id
                    + 
                { 
                    @ method 'PATCH'
                    { headers
                        @ 'Content-Type' 'application/json'
                    @ body JSON.stringify(data)
        _ alert('Draft saved!')
    async-function publish
        param id
            :string 
        :return
            :ref Promise
                :param void
        await 
            _ fetch
                `lit 
                    + /api/publish/
                    @ id
                    + 
                { 
                    @ method 'PUT'
        await 
            _ Router.push
                `lit 
                    + /blog/
                    @ id
                    + 
    async-function destroy
        param id
            :string 
        :return
            :ref Promise
                :param void
        await 
            _ fetch
                `lit 
                    + /api/post/
                    @ id
                    + 
                { 
                    @ method 'DELETE'
        await 
            _ Router.push('/')
    const Post
        :ref React.FC
            :param 
                :ref PostProps
        =
            => 
                param props
                const [patch, setPatch]
                    _ useState
                        :param 
                            :{ 
                                :p title
                                    :optional 
                                    :string 
                                :p content
                                    :optional 
                                    :string 
                        { 
                            @ title props.title
                            @ content props.content || undefined
                if props.publishedISO
                    return 
                        < Layout 
                            div 
                                @ style
                                    { 
                                        @ display 'flex'
                                        @ flexDirection 'column'
                                        @ alignItems 'stretch'
                                        @ margin 'auto'
                                        @ maxWidth '600px'
                                h1 
                                    @ style
                                        { 
                                            @ paddingTop '100px'
                                            @ margin 0
                                            @ paddingBottom '8px'
                                    + {props.title}
                                p 
                                    @ style
                                        { 
                                            @ fontSize '14pt'
                                            @ margin 0
                                            @ color '#888'
                                    + By
                                    + {props.authorName}
                                br 
                                br 
                                < ReactMarkdown 
                                    + {props.content || ''}
                return 
                    < Layout 
                        div 
                            @ style
                                { 
                                    @ display 'flex'
                                    @ flexDirection 'column'
                                    @ alignItems 'stretch'
                            input 
                                @ value {patch.title}
                                @ onChange
                                    => 
                                        param e
                                        _ setPatch
                                            { 
                                                @ ...patch
                                                @ title e.target.value
                            textarea 
                                @ rows {25}
                                @ value {patch.content || ''}
                                @ onChange
                                    => 
                                        param e
                                        _ setPatch
                                            { 
                                                @ ...patch
                                                @ content e.target.value
                            div 
                                @ style
                                    { 
                                        @ display 'flex'
                                        @ flexDirection 'row'
                                button 
                                    @ style
                                        { 
                                            @ backgroundColor '#0E61FE'
                                            @ color 'white'
                                    @ onClick
                                        => 
                                            _ update(props.id, patch)
                                    { 
                                        iif props.publishedISO
                                            then 'Update'
                                            else 'Save draft'
                                { 
                                    && 
                                        + !props.publishedISO
                                        button 
                                            @ style
                                                { 
                                                    @ backgroundColor '#0E61FE'
                                                    @ color 'white'
                                            @ onClick
                                                => 
                                                    _ publish(props.id)
                                            + Publish
                                button 
                                    @ style
                                        { 
                                            @ border '2px solid red'
                                            @ color 'red'
                                    @ onClick
                                        => 
                                            _ destroy(props.id)
                                    + Delete
                        < style 
                            @ jsx
                            { 
                                `lit 
                                    + &lf;
                                    + &nbsp;       .page {&lf;
                                    + &nbsp;         padding: 2rem;&lf;
                                    + &nbsp;       }&lf;
                                    + &nbsp;       h2 {&lf;
                                    + &nbsp;         margin: 0px;&lf;
                                    + &nbsp;       }&lf;
                                    + &nbsp;       input {&lf;
                                    + &nbsp;         font-size: 20pt;&lf;
                                    + &nbsp;       }&lf;
                                    + &nbsp;       textarea,&lf;
                                    + &nbsp;       input {&lf;
                                    + &nbsp;         margin: 0 0 0.75rem 0;&lf;
                                    + &nbsp;         padding: 0.5rem;&lf;
                                    + &nbsp;         border: 0.125rem solid rgba(0, 0, 0, 0.2);&lf;
                                    + &nbsp;         border-radius: 0.25rem;&lf;
                                    + &nbsp;       }&lf;
                                    + &lf;
                                    + &nbsp;       .actions {&lf;
                                    + &nbsp;         margin-top: 2rem;&lf;
                                    + &nbsp;       }&lf;
                                    + &lf;
                                    + &nbsp;       button {&lf;
                                    + &nbsp;         border: 2px solid transparent;&lf;
                                    + &nbsp;         border-radius: 4px;&lf;
                                    + &nbsp;         padding: 0.5rem 1.25rem;&lf;
                                    + &nbsp;         background-color: unset;&lf;
                                    + &nbsp;       }&lf;
                                    + &lf;
                                    + &nbsp;       button + button {&lf;
                                    + &nbsp;         margin-left: 0.5rem;&lf;
                                    + &nbsp;       }&lf;
                                    + &nbsp;    &nbsp;
    export 
        const getServerSideProps
            async=> 
                param context
                    :ref GetServerSidePropsContext
                    :optional 
                const post
                    await 
                        _ e.select
                            @expr e.Post
                            => 
                                param post
                                (
                                    { 
                                        @ id true
                                        @ title true
                                        @ content true
                                        @ publishedISO true
                                        @ authorName true
                                        @ filter
                                            _ e.op
                                                @expr post.id
                                                @ '='
                                                _ e.uuid
                                                    @expr
                                                        :! 
                                                            :! context
                                                                . params
                                                            . id
                                                        :as 
                                                            :string 
                            ._ run
                                @ client
                return 
                    { 
                        @ props
                            :! post
    export 
        :type PostProps
            :ref InferGetServerSidePropsType
                :param 
                    :typeof getServerSideProps
    export-default Post
