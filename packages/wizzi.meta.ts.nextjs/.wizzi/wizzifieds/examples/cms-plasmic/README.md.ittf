md
    h1 
        + A statically generated landing page using Next.js and Plasmic
    p 
        + This example showcases Next.js&#39;s
        a 
            href https://nextjs.org/docs/basic-features/pages
            title 
            + Static Generation
        + feature using
        a 
            href https://www.plasmic.app/
            title 
            + Plasmic
        + as the visual page builder.
    br 
    p 
        + You&#39;ll get:
    br 
    ul 
        li 
            + Statically generated pages from your visual designs
        li 
            + Development server on
            a 
                href https://nextjs.org/docs/advanced-features/preview-mode
                title 
                + preview mode
            + watches for changes from Plasmic Studio
    br 
    h2 
        + Demo
    h3 
        a 
            href https://nextjs-plasmic-example.vercel.app/
            title 
            + https://nextjs-plasmic-example.vercel.app/
    h2 
        + Deploy your own
    p 
        + Once you have access to the
        a 
            href #step-3-set-up-environment-variables
            title 
            + environment variables you need
        + , deploy the example using
        a 
            href https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example
            title 
            + Vercel
        + :
    br 
    p 
        a 
            href https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fvercel%2Fnext.js%2Ftree%2Fcanary%2Fexamples%2Fcms-plasmic&env=NEXT_PUBLIC_PLASMIC_PROJECT_ID,NEXT_PUBLIC_PLASMIC_PROJECT_API_TOKEN,PLASMIC_PREVIEW_SECRET&envDescription=Required%20to%20connect%20the%20app%20with%20Plasmic&envLink=https%3A%2F%2Fgithub.com%2Fvercel%2Fnext.js%2Ftree%2Fcanary%2Fexamples%2Fcms-plasmic
            title 
            img 
                href https://vercel.com/button
                title 
    br 
    h2 
        + How to use
    p 
        + Execute
        a 
            href https://github.com/vercel/next.js/tree/canary/packages/create-next-app
            title 
            code create-next-app
        + with
        a 
            href https://docs.npmjs.com/cli/init
            title 
            + npm
        + ,
        a 
            href https://yarnpkg.com/lang/en/docs/cli/create/
            title 
            + Yarn
        + , or
        a 
            href https://pnpm.io
            title 
            + pnpm
        + to bootstrap the example:
    br 
    code 
        lang bash
        + npx create-next-app --example cms-plasmic cms-plasmic-app
    br 
    code 
        lang bash
        + yarn create next-app --example cms-plasmic cms-plasmic-app
    br 
    code 
        lang bash
        + pnpm create next-app --example cms-plasmic cms-plasmic-app
    br 
    h2 
        + Configuration
    h3 
        + Step 1. Create an account and a project on Plasmic
    p 
        + First,
        a 
            href https://studio.plasmic.app/
            title 
            + create an account on Plasmic
        + .
    br 
    p 
        + After creating an account, create a new project.
    br 
    h3 
        + Step 2. Gather your project ID and API token
    p 
        + Once you&#39;ve opened your Plasmic project, you can find the project ID in the URL:
        code https://studio.plasmic.app/projects/PROJECTID
        + .
    br 
    p 
        + The API token can be found by clicking the Code button in the top bar.
        + 
        img 
            href https://www.plasmic.app/blog/static/images/plasmicflix/08-api-token.png
            title 
    br 
    h3 
        + Step 3. Set up environment variables
    p 
        + Copy the
        code .env.local.example
        + file in this directory to
        code .env.local
        + (which will be ignored by Git):
    br 
    code 
        lang bash
        + cp .env.local.example .env.local
    br 
    p 
        + Then set each variable on
        code .env.local
        + :
    br 
    ul 
        li 
            code NEXT_PUBLIC_PLASMIC_PROJECT_ID
            + should be the
            code projectId
            + value in step 2.
        li 
            code NEXT_PUBLIC_PLASMIC_PROJECT_API_TOKEN
            + should be the API token gathered in previous step.
        li 
            code PLASMIC_PREVIEW_SECRET
            + can be any random string (but avoid spaces), like
            code MY_SECRET
            + - this is used for
            a 
                href https://nextjs.org/docs/advanced-features/preview-mode
                title 
                + Preview Mode
            + .
    br 
    h3 
        + Step 4. Run Next.js in development mode
    code 
        lang bash
        + npm install
        + npm run dev
        + # or
        + yarn install
        + yarn dev
    br 
    p 
        + Your blog should be up and running on
        a 
            href http://localhost:3000
            title 
            + http://localhost:3000
        + ! If it doesn&#39;t work, post on
        a 
            href https://github.com/vercel/next.js/discussions
            title 
            + GitHub discussions
        + .
    br 
    h3 
        + Step 5. Try preview mode
    p 
        + By default, the code is set up to only build published Plasmic projects.
        + If you want to see changes as you make them in the Plasmic Studio, enter preview mode by opening the following URL:
    br 
    code 
        + http://localhost:3000/api/preview?secret=PLASMIC_PREVIEW_SECRET&slug=PATH
    br 
    p 
        + Be sure to replace the secret with the chosen secret in Step 3 and pick a path to preview (e.g.
        code http://localhost:3000/api/preview?secret=123456&amp;slug=/
        + )
    br 
    p 
        + Now you can make edits in the Studio and see them reflected in the development server live.
    br 
    p 
        + You can exit preview mode at any time by going to the following URL:
    br 
    code 
        + http://localhost:3000/api/exit-preview
    br 
    h3 
        + Step 6. Deploy on Vercel
    p 
        + You can deploy this app to the cloud with
        a 
            href https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example
            title 
            + Vercel
        + (
        a 
            href https://nextjs.org/docs/deployment
            title 
            + Documentation
        + ).
    br 
    p 
        + To deploy your local project to Vercel, push it to GitHub/GitLab/Bitbucket and
        a 
            href https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example
            title 
            + import to Vercel
        + .
    br 
    p 
        b 
            + Important
        + : When you import your project on Vercel, make sure to click on
        b 
            + Environment Variables
        + and set them to match your
        code .env.local
        + file.
    br 
    h2 
        + Next steps:
    p 
        + With Plasmic, you can enable non-developers on your team to publish pages and content into your website or app.
    br 
    p 
        + To learn more about Plasmic, take a look at the following resources:
    br 
    ul 
        li 
            a 
                href https://www.plasmic.app/
                title 
                + Plasmic Website
        li 
            a 
                href https://docs.plasmic.app/learn/
                title 
                + Plasmic Documentation
        li 
            a 
                href https://www.plasmic.app/slack
                title 
                + Plasmic Slack Community
    br 
    p 
        + You can check out
        a 
            href https://github.com/plasmicapp/plasmic
            title 
            + the Plasmic GitHub repository
        + - your feedback and contributions are welcome!
