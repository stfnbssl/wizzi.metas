module
    kind react
    import 
        @ useRouter
        from 'next/router'
    import 
        @ useEffect
        @ ReactNode
        @ HTMLAttributes
        from 'react'
    :type CustomLinkProps
        :intersect 
            :{ 
                :p children
                    :ref ReactNode
                :p href
                    :string 
                :p prefetch
                    :optional 
                    :boolean 
                :p replace
                    :optional 
                    :boolean 
                :p shallow
                    :optional 
                    :boolean 
            :ref HTMLAttributes
                :param 
                    :ref HTMLAnchorElement
        # typically you want to use `next/link` for this usecase
        # but this example shows how you can also access the router
        # and use it manually
    export-default 
        function CustomLink
            { 
                @ children
                @ href
                @ prefetch
                    = false
                @ replace
                    = false
                @ shallow
                    = false
                ... props
                :ref CustomLinkProps
            const router = useRouter()
            _ useEffect
                => 
                    if prefetch
                        _ router.prefetch(href)
                [ 
                    @ router
                    @ href
                    @ prefetch
            return 
                a 
                    @ {...props}
                    @ href {href}
                    @ onClick
                        => 
                            param event
                            _ event.preventDefault()
                            if replace
                                _ router.replace
                                    @ href
                                    @ undefined
                                    { 
                                        @ shallow
                            else
                                _ router.push
                                    @ href
                                    @ undefined
                                    { 
                                        @ shallow
                    + {children}
        # typically you want to use `next/link` for this usecase
        # but this example shows how you can also access the router
        # and use it manually
