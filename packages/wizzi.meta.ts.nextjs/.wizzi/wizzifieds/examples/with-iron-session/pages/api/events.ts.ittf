module
    kind react
    import 
        @ withIronSessionApiRoute
        from 'iron-session/next'
    import 
        @ sessionOptions
        from 'lib/session'
    import 
        @ Octokit
        from 'octokit'
    :import-type 
        @ Endpoints
        from '@octokit/types'
    import 
        @ NextApiRequest
        @ NextApiResponse
        from 'next'
    export 
        :type Events
            :[] 
                :[] 
                    :[] 
                        :ref Endpoints
                        :literal 'GET /users/{username}/events'
                    :literal 'response'
                :literal 'data'
    const octokit = new Octokit()
    async-function eventsRoute
        param req
            :ref NextApiRequest
        param res
            :ref NextApiResponse
                :param 
                    :ref Events
        const user = req.session.user
        if !user || user.isLoggedIn === false
            _ res.status(401).end()
            return 
        try 
            const 
                { 
                    @ data events
                =
                    await 
                        _ octokit.rest.activity.listPublicEventsForUser
                            { 
                                @ username user.login
            _ res.json(events)
        catch error
            _ res.status(200).json([])
    export-default withIronSessionApiRoute(eventsRoute, sessionOptions)
