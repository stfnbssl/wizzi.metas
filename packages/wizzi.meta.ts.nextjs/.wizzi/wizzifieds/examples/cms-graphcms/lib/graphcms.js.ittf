module
    kind react
    async-function fetchAPI
        param query
        param 
            @ variables
            @ preview
            = 
        const res
            await 
                _ fetch
                    @expr process.env.GRAPHCMS_PROJECT_API
                    { 
                        @ method 'POST'
                        { headers
                            @ 'Content-Type' 'application/json'
                            @ Authorization
                                `lit 
                                    + Bearer&nbsp;
                                    iif preview
                                        then process.env.GRAPHCMS_DEV_AUTH_TOKEN
                                        else process.env.GRAPHCMS_PROD_AUTH_TOKEN
                                    + 
                        @ body
                            _ JSON.stringify
                                { 
                                    @ query
                                    @ variables
        const json
            await 
                _ res.json()
        if json.errors
            _ console.log(process.env.NEXT_EXAMPLE_CMS_GCMS_PROJECT_ID)
            _ console.error(json.errors)
            throw new Error('Failed to fetch API')
        return json.data
    export 
        async-function getPreviewPostBySlug
            param slug
            const data
                await 
                    _ fetchAPI
                        `lit 
                            + &lf;
                            + &nbsp;   query PostBySlug($slug: String!, $stage: Stage!) {&lf;
                            + &nbsp;     post(where: {slug: $slug}, stage: $stage) {&lf;
                            + &nbsp;       slug&lf;
                            + &nbsp;     }&lf;
                            + &nbsp;   }
                        { 
                            @ preview true
                            { variables
                                @ stage 'DRAFT'
                                @ slug
            return data.post
    export 
        async-function getAllPostsWithSlug
            const data
                await 
                    _ fetchAPI
                        `lit 
                            + &lf;
                            + &nbsp;   {&lf;
                            + &nbsp;     posts {&lf;
                            + &nbsp;       slug&lf;
                            + &nbsp;     }&lf;
                            + &nbsp;   }&lf;
                            + &nbsp;&nbsp;
            return data.posts
    export 
        async-function getAllPostsForHome
            param preview
            const data
                await 
                    _ fetchAPI
                        `lit 
                            + &lf;
                            + &nbsp;   {&lf;
                            + &nbsp;     posts(orderBy: date_DESC, first: 20) {&lf;
                            + &nbsp;       title&lf;
                            + &nbsp;       slug&lf;
                            + &nbsp;       excerpt&lf;
                            + &nbsp;       date&lf;
                            + &nbsp;       coverImage {&lf;
                            + &nbsp;         url(transformation: {&lf;
                            + &nbsp;           image: {&lf;
                            + &nbsp;             resize: {&lf;
                            + &nbsp;               fit:crop,&lf;
                            + &nbsp;               width:2000,&lf;
                            + &nbsp;               height:1000&lf;
                            + &nbsp;             }&lf;
                            + &nbsp;           }&lf;
                            + &nbsp;         })&lf;
                            + &nbsp;       }&lf;
                            + &nbsp;       author {&lf;
                            + &nbsp;         name&lf;
                            + &nbsp;         picture {&lf;
                            + &nbsp;           url(transformation: {&lf;
                            + &nbsp;             image: {&lf;
                            + &nbsp;               resize: {&lf;
                            + &nbsp;                 width:100,&lf;
                            + &nbsp;                 height:100,&lf;
                            + &nbsp;                 fit:crop&lf;
                            + &nbsp;               }&lf;
                            + &nbsp;             }&lf;
                            + &nbsp;           })&lf;
                            + &nbsp;         }&lf;
                            + &nbsp;       }&lf;
                            + &nbsp;     }&lf;
                            + &nbsp;   }&lf;
                            + &nbsp;&nbsp;
                        { 
                            @ preview
            return data.posts
    export 
        async-function getPostAndMorePosts
            param slug
            param preview
            const data
                await 
                    _ fetchAPI
                        `lit 
                            + &lf;
                            + &nbsp;   query PostBySlug($slug: String!, $stage: Stage!) {&lf;
                            + &nbsp;     post(stage: $stage, where: {slug: $slug}) {&lf;
                            + &nbsp;       title&lf;
                            + &nbsp;       slug&lf;
                            + &nbsp;       content {&lf;
                            + &nbsp;         html&lf;
                            + &nbsp;       }&lf;
                            + &nbsp;       date&lf;
                            + &nbsp;       ogImage: coverImage {&lf;
                            + &nbsp;         url(transformation: {image: {resize: {fit: crop, width: 2000, height: 1000}}})&lf;
                            + &nbsp;       }&lf;
                            + &nbsp;       coverImage {&lf;
                            + &nbsp;         url(transformation: {image: {resize: {fit: crop, width: 2000, height: 1000}}})&lf;
                            + &nbsp;       }&lf;
                            + &nbsp;       author {&lf;
                            + &nbsp;         name&lf;
                            + &nbsp;         picture {&lf;
                            + &nbsp;           url(transformation: {image: {resize: {fit: crop, width: 100, height: 100}}})&lf;
                            + &nbsp;         }&lf;
                            + &nbsp;       }&lf;
                            + &nbsp;     }&lf;
                            + &nbsp;     morePosts: posts(orderBy: date_DESC, first: 2, where: {slug_not_in: [$slug]}) {&lf;
                            + &nbsp;       title&lf;
                            + &nbsp;       slug&lf;
                            + &nbsp;       excerpt&lf;
                            + &nbsp;       date&lf;
                            + &nbsp;       coverImage {&lf;
                            + &nbsp;         url(transformation: {image: {resize: {fit: crop, width: 2000, height: 1000}}})&lf;
                            + &nbsp;       }&lf;
                            + &nbsp;       author {&lf;
                            + &nbsp;         name&lf;
                            + &nbsp;         picture {&lf;
                            + &nbsp;           url(transformation: {image: {resize: {fit: crop, width: 100, height: 100}}})&lf;
                            + &nbsp;         }&lf;
                            + &nbsp;       }&lf;
                            + &nbsp;     }&lf;
                            + &nbsp;   }&lf;
                            + &nbsp;&nbsp;
                        { 
                            @ preview
                            { variables
                                @ stage
                                    iif preview
                                        then 'DRAFT'
                                        else 'PUBLISHED'
                                @ slug
            return data
