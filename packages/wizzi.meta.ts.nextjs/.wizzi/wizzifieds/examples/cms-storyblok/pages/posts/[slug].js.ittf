module
    kind react
    import 
        @ useRouter
        from 'next/router'
    import ErrorPage from 'next/error'
    import Container from '@/components/container'
    import PostBody from '@/components/post-body'
    import MoreStories from '@/components/more-stories'
    import Header from '@/components/header'
    import PostHeader from '@/components/post-header'
    import SectionSeparator from '@/components/section-separator'
    import Layout from '@/components/layout'
    import 
        @ getAllPostsWithSlug
        @ getPostAndMorePosts
        from '@/lib/api'
    import PostTitle from '@/components/post-title'
    import Head from 'next/head'
    import 
        @ CMS_NAME
        from '@/lib/constants'
    import RichTextResolver from 'storyblok-js-client/dist/richTextResolver'
    export-default 
        function Post
            { 
                @ post
                @ morePosts
                @ preview
            const router = useRouter()
            if !router.isFallback && !post?.slug
                return 
                    < ErrorPage 
                        @ statusCode {404}
            return 
                < Layout 
                    @ preview {preview}
                    < Container 
                        < Header 
                        { 
                            iif router.isFallback
                                then
                                    < PostTitle 
                                        + Loadingâ€¦
                                else
                                    < React.Fragment
                                        article 
                                            < Head 
                                                < title 
                                                    + {post.content.title}
                                                    + | Next.js Blog Example with
                                                    + {CMS_NAME}
                                                meta 
                                                    @ property "og:image"
                                                    @ content {post.content.image}
                                            < PostHeader 
                                                @ title {post.content.title}
                                                @ coverImage {post.content.image}
                                                @ date {post.first_published_at || post.published_at}
                                                @ author {post.content.author}
                                            < PostBody 
                                                @ content {post.html}
                                        < SectionSeparator 
                                        { 
                                            && 
                                                + morePosts.length > 0
                                                < MoreStories 
                                                    @ posts {morePosts}
    export 
        async-function getStaticProps
            { 
                @ params
                @ preview
                    = null
            const data
                await 
                    _ getPostAndMorePosts(params.slug, preview)
            return 
                { 
                    { props
                        @ preview
                        { post
                            @ ...data.post
                            @ html
                                iif data.post?.content?.long_text
                                    then new RichTextResolver().render(data.post.content.long_text)
                                    else null
                        @ morePosts data.morePosts
    export 
        async-function getStaticPaths
            const allPosts
                await 
                    _ getAllPostsWithSlug()
            return 
                { 
                    @ paths
                        || 
                            _ allPosts?.map?.
                                => 
                                    param post
                                    `lit 
                                        + /posts/
                                        @ post.slug
                                        + 
                            + []
                    @ fallback true
