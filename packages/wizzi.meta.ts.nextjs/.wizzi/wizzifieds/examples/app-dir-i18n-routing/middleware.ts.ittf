module
    kind react
    import 
        @ NextResponse
        from 'next/server'
    :import-type 
        @ NextRequest
        from 'next/server'
    import 
        @ i18n
        from './i18n-config'
    import 
        @ match
            as matchLocale
        from '@formatjs/intl-localematcher'
    import Negotiator from 'negotiator'
    function getLocale
        param request
            :ref NextRequest
        :return
            :union 
                :string 
                :undefined 
        const negotiatorHeaders
            :ref Record
                :param string
                :param string
            =
                { 
            # Negotiator expects plain object so we need to transform headers
        _ request.headers.forEach
            => 
                param value
                param key
                set negotiatorHeaders[key] = value
            # Use negotiator and intl-localematcher to get best locale
        let languages
            new Negotiator
                { 
                    @ headers negotiatorHeaders
                ._ languages
            # Use negotiator and intl-localematcher to get best locale
            # @ts-ignore locales are readonly
        const locales
            :[ 
                :string 
            = i18n.locales
            # @ts-ignore locales are readonly
        return matchLocale(languages, locales, i18n.defaultLocale)
    export 
        function middleware
            param request
                :ref NextRequest
            const pathname = request.nextUrl.pathname
                # // `/_next/` and `/api/` are ignored by the watcher, but we need to ignore files in `public` manually.
                # // If you have one
                # if (
                # [
                # '/manifest.json',
                # '/favicon.ico',
                # // Your other files in `public`
                # ].includes(pathname)
                # )
                # return
                # Check if there is any supported locale in the pathname
            const pathnameIsMissingLocale
                _ i18n.locales.every
                    => 
                        param locale
                        && 
                            op! 
                                _ pathname.startsWith
                                    `lit 
                                        + /
                                        @ locale
                                        + /
                            !== 
                                + pathname
                                `lit 
                                    + /
                                    @ locale
                                    + 
                # // `/_next/` and `/api/` are ignored by the watcher, but we need to ignore files in `public` manually.
                # // If you have one
                # if (
                # [
                # '/manifest.json',
                # '/favicon.ico',
                # // Your other files in `public`
                # ].includes(pathname)
                # )
                # return
                # Check if there is any supported locale in the pathname
                # Redirect if there is no locale
            if pathnameIsMissingLocale
                const locale = getLocale(request)
                    # e.g. incoming request is /products
                    # The new URL is now /en-US/products
                return 
                    _ NextResponse.redirect
                        new URL
                            `lit 
                                + /
                                @ locale
                                + /
                                @ pathname
                                + 
                            @expr request.url
                    # e.g. incoming request is /products
                    # The new URL is now /en-US/products
    export 
        const config
            { 
                [ matcher
                    @ '/((?!api|_next/static|_next/image|favicon.ico).*)'
                    # Matcher ignoring `/_next/` and `/api/`
