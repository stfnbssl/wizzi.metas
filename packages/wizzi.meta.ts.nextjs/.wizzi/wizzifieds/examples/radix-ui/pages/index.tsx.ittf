module
    kind react
    import 
        @ useState
        from 'react'
    import 
        @ HamburgerMenuIcon
        @ DotFilledIcon
        @ CheckIcon
        @ ChevronRightIcon
        from '@radix-ui/react-icons'
    import 
        as DropdownMenu
        from '@radix-ui/react-dropdown-menu'
    function RightSlot
        { 
            @ children
        return 
            div 
                @ className "ml-auto pl-4 text-gray-500 group-hover:text-gray-200"
                + {children}
    function DropdownMenuItem
        { 
            @ children
            ... props
        return 
            < DropdownMenu.Item 
                @ {...props}
                @ className
                    op+ 
                        + 'group bg-white hover:bg-gray-700 hover:text-gray-200 text-xs rounded flex items-center h-6 px-1 pl-6 relative select-none'
                        ( 
                            iif props.disabled
                                then ' text-gray-500'
                                else ''
                + {children}
    function DropdownMenuCheckboxItem
        { 
            @ children
            ... props
        return 
            < DropdownMenu.CheckboxItem 
                @ {...props}
                @ className "group bg-white hover:bg-gray-700 hover:text-gray-200 text-xs rounded flex items-center h-6 px-1 pl-6 relative select-none"
                + {children}
    function DropdownMenuItemIndicator
        { 
            @ children
            ... props
        return 
            < DropdownMenu.ItemIndicator 
                @ {...props}
                @ className "absolute left-0 w-6 inline-flex items-center justify-center"
                + {children}
    function Separator
        return 
            < DropdownMenu.Separator 
                @ className "h-[1px] bg-gray-300 m-1"
    function DropdownMenuRadioItem
        { 
            @ children
            ... props
            :{ 
                :p children
                    :ref React.ReactNode
                :p value
                    :string 
        return 
            < DropdownMenu.RadioItem 
                @ {...props}
                @ className "bg-white hover:bg-gray-700 hover:text-gray-200 text-xs rounded flex items-center h-6 px-1 pl-6 relative select-none"
                + {children}
    export-default 
        function Home
            const [bookmarksChecked, setBookmarksChecked] = useState(true)
            const [urlsChecked, setUrlsChecked] = useState(false)
            const [person, setPerson] = useState('pedro')
            return 
                div 
                    @ className "h-screen w-full flex flex-col space-y-4 items-center justify-center bg-gradient-to-r from-cyan-500 to-blue-500"
                    h1 
                        @ className "text-6xl text-white font-semibold"
                        + Radix UI + Tailwind CSS
                    h1 
                        @ className "text-4xl text-white font-semibold"
                        + Click me!
                    < DropdownMenu.Root 
                        < DropdownMenu.Trigger 
                            @ asChild
                            @ className "bg-white text-xs rounded-3xl flex items-center h-8 px-2 relative select-none"
                            button 
                                @ aria-label "Customise options"
                                @ className "h-8 w-8 inline-flex items-center justify-center shadow-lg"
                                < HamburgerMenuIcon 
                        < DropdownMenu.Content 
                            @ sideOffset {5}
                            @ className "bg-white rounded p-1 shadow-lg"
                            < DropdownMenuItem 
                                + New Tab
                                < RightSlot 
                                    + ⌘+T
                            < DropdownMenuItem 
                                + New Window
                                < RightSlot 
                                    + ⌘+N
                            < DropdownMenuItem 
                                @ disabled
                                + New Private Window
                                < RightSlot 
                                    + ⇧+⌘+N
                            < DropdownMenu.Sub 
                                < DropdownMenu.SubTrigger 
                                    @ className "group bg-white hover:bg-gray-700 hover:text-gray-200 hover:border-0 text-xs rounded flex items-center h-6 px-1 pl-6 relative select-none"
                                    + More Tools
                                    < RightSlot 
                                        < ChevronRightIcon 
                                < DropdownMenu.SubContent 
                                    @ sideOffset {2}
                                    @ alignOffset {-5}
                                    @ className "bg-white rounded p-1 shadow-lg"
                                    < DropdownMenuItem 
                                        + Save Page As…
                                        < RightSlot 
                                            + ⌘+S
                                    < DropdownMenuItem 
                                        + Create Shortcut…
                                    < DropdownMenuItem 
                                        + Name Window…
                                    < Separator 
                                    < DropdownMenuItem 
                                        + Developer Tools
                            < Separator 
                            < DropdownMenuCheckboxItem 
                                @ checked {bookmarksChecked}
                                @ onCheckedChange {setBookmarksChecked}
                                < DropdownMenuItemIndicator 
                                    < CheckIcon 
                                + Show Bookmarks
                                < RightSlot 
                                    + ⌘+B
                            < DropdownMenuCheckboxItem 
                                @ checked {urlsChecked}
                                @ onCheckedChange {setUrlsChecked}
                                < DropdownMenuItemIndicator 
                                    < CheckIcon 
                                + Show Full URLs
                            < Separator 
                            < DropdownMenu.Label 
                                @ className "pl-6 leading-6 text-xs text-gray-700"
                                + Contributors
                            < DropdownMenu.RadioGroup 
                                @ value {person}
                                @ onValueChange {setPerson}
                                < DropdownMenuRadioItem 
                                    @ value "pedro"
                                    < DropdownMenuItemIndicator 
                                        < DotFilledIcon 
                                    + Pedro Sanchez
                                < DropdownMenuRadioItem 
                                    @ value "pablo"
                                    < DropdownMenuItemIndicator 
                                        < DotFilledIcon 
                                    + Pablo Sanchez
