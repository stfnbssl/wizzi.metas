module
    kind react
    import 
        @ NextApiRequest
        @ NextApiResponse
        from 'next'
    import 
        @ getPostBySlug
        from '../../lib/api'
    export-default 
        async-function preview
            param req
                :ref NextApiRequest
            param res
                :ref NextApiResponse
            if req.query.secret !== process.env.KONTENT_PREVIEW_SECRET || !req.query.slug
                return 
                    _ res.status(401).json
                        { 
                            @ message 'Invalid token or slug not specified'
            const post
                await 
                    _ getPostBySlug
                        @expr req.query.slug
                            :as 
                                :string 
                        @ true
                # Fetch the headless CMS to check if the provided `slug` exists
                # If the slug doesn't exist prevent preview mode from being enabled
            if !post
                return 
                    _ res.status(401).json
                        { 
                            @ message 'Invalid slug'
            _ res.setDraftMode
                { 
                    @ enable true
                # Enable Preview Mode by setting the cookie
                # Redirect to the path from the fetched post
                # We don't redirect to req.query.slug as that might lead to open redirect vulnerabilities
            _ res.writeHead
                @ 307
                { 
                    @ Location
                        `lit 
                            + /posts/
                            @ post.slug
                            + 
                # Redirect to the path from the fetched post
                # We don't redirect to req.query.slug as that might lead to open redirect vulnerabilities
            _ res.end()
