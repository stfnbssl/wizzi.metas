module
    kind react
    import 
        @ useWeb3React
        from '@web3-react/core'
    :import-type 
        @ NextPage
        from 'next'
    import Head from 'next/head'
    import Image from 'next/image'
    import 
        @ useEffect
        @ useState
        from 'react'
    import blockchains from '../config/blockchains.json'
    import 
        @ ChainId
        from '../config/chainIds'
    import 
        @ NETWORK_ICON
        @ NETWORK_LABEL
        from '../config/networks'
    import 
        @ injected
        @ supportedChainIds
        @ wallets
        from '../config/wallets'
    import useWeb3 from '../hooks/useWeb3'
    import styles from '../styles/Home.module.css'
    const Home
        :ref NextPage
        =
            => 
                const 
                    { 
                        @ account
                        @ activate
                        @ chainId
                        @ deactivate
                    = useWeb3React()
                const [nativeBalance, setNativeBalance] = useState(0)
                const [sendAddress, setSendAddress] = useState('')
                const [sendAmount, setSendAmount] = useState('0')
                const 
                    { 
                        @ web3
                    = useWeb3()
                    # @ts-ignore TYPE NEEDS FIXING
                const chainData = blockchains[chainId]
                    # @ts-ignore TYPE NEEDS FIXING
                _ useEffect
                    => 
                        if window?.ethereum
                            _ activate(injected)
                        else
                            _ alert('You need to install a crypto wallet to run this Dapp!!')
                    [ 
                        @ activate
                const fetchBalanceData
                    async=> 
                        const eth
                            await 
                                _ web3.eth.getBalance
                                    + account
                                        :as 
                                            :string 
                        if Number(eth) > 0
                            const bal = web3.utils.fromWei(eth, 'ether')
                            _ console.log
                                { 
                                    @ eth
                                    @ bal
                            _ setNativeBalance(Number(bal))
                _ useEffect
                    => 
                        if account
                            _ fetchBalanceData()
                const sendEth
                    async=> 
                        const isValidAddress = web3.utils.isAddress(sendAddress)
                        if isValidAddress && Number(sendAmount) > 0 && account
                            const tx
                                await 
                                    _ web3.eth.sendTransaction
                                        { 
                                            @ from account
                                            @ to sendAddress
                                            @ value web3.utils.toWei(sendAmount, 'ether')
                                                # @ts-ignore TYPE NEEDS FIXING
                            if tx.transactionHash
                                _ alert
                                    `lit 
                                        + Transaction Success!!&nbsp;
                                        @ tx.transactionHash
                                        + 
                                _ fetchBalanceData()
                            _ console.log
                                { 
                                    @ tx
                        else
                            _ alert('Invalid Transaction Data')
                return 
                    div 
                        @ className {styles.container}
                        < Head 
                            < title 
                                + Create Next App
                            meta 
                                @ name "description"
                                @ content "Generated by create next app"
                            link 
                                @ rel "icon"
                                @ href "/favicon.ico"
                        main 
                            { 
                                iif account
                                    then
                                        < React.Fragment
                                            div 
                                                @ className "card"
                                                h4 
                                                    + Connected to Network :
                                                    { 
                                                        @expr NETWORK_LABEL
                                                            .[
                                                                + chainId
                                                                    :as 
                                                                        :ref ChainId
                                                h4 
                                                    + Native Balance :
                                                    + {nativeBalance || 0}
                                                    + {' '}
                                                    + {chainData?.nativeCurrency?.symbol}
                                                p 
                                                    + Account :
                                                    + {account}
                                                button 
                                                    @ className "btn"
                                                    @ onClick
                                                        => 
                                                            _ deactivate()
                                                    + Logout
                                            div 
                                                @ className "card"
                                                h2 
                                                    + Send
                                                    + {chainData?.nativeCurrency?.symbol}
                                                div 
                                                    @ className "my-1"
                                                    label 
                                                        @ htmlFor "sendAddress"
                                                        + Recipient Address
                                                    input 
                                                        @ id "sendAddress"
                                                        @ className "mx-1"
                                                        @ type "text"
                                                        @ value {sendAddress}
                                                        @ onChange
                                                            => 
                                                                param e
                                                                _ setSendAddress(e?.target?.value)
                                                div 
                                                    @ className "my-1"
                                                    label 
                                                        @ htmlFor "sendAmount"
                                                        + Recipient Amount
                                                    input 
                                                        @ id "sendAmount"
                                                        @ className "mx-1"
                                                        @ type "number"
                                                        @ value {sendAmount}
                                                        @ onChange
                                                            => 
                                                                param e
                                                                _ setSendAmount(e?.target?.value)
                                                h4 
                                                    + Native Balance :
                                                    + {nativeBalance || 0}
                                                    + {' '}
                                                    + {chainData?.nativeCurrency?.symbol}
                                                button 
                                                    @ className "btn"
                                                    @ onClick {sendEth}
                                                    + Send
                                                    + {chainData?.nativeCurrency?.symbol}
                                                    + {' '}
                                    else
                                        div 
                                            @ className "card"
                                            h1 
                                                + Connect Wallet
                                            { 
                                                _ wallets?.map?.
                                                    => 
                                                        param wallet
                                                        param idx
                                                        return 
                                                            button 
                                                                @ key {wallet?.name}
                                                                @ className "btn"
                                                                @ onClick
                                                                    => 
                                                                        _ activate(wallet?.connector)
                                                                + {wallet?.name}
                            div 
                                @ className "card"
                                h1 
                                    + Supported Blockchains
                                div 
                                    @ className "flex flex-wrap"
                                    { 
                                        _ supportedChainIds?.map?.
                                            => 
                                                param chain
                                                param idx
                                                iif Number(chain) && NETWORK_ICON[Number(chain)]
                                                    then
                                                        div 
                                                            @ key {Number(chain)}
                                                            @ className "flex items-center rounded-md"
                                                            @ style
                                                                { 
                                                                    @ background 'black'
                                                                    @ padding '0.1em 0.25em'
                                                                    @ margin '1em 0.5em'
                                                            < Image 
                                                                @ src {NETWORK_ICON[Number(chain)]}
                                                                    # @ts-ignore TYPE NEEDS FIXING
                                                                @ width {30}
                                                                @ height {30}
                                                                @ alt ""
                                                                @ className "rounded-md"
                                                            p 
                                                                @ style
                                                                    { 
                                                                        @ marginLeft '0.5em'
                                                                        @ fontSize '12px'
                                                                        @ padding '0em 0.5em'
                                                                { 
                                                                    # 
                                                                        # @ts-ignore TYPE NEEDS FIXING
                                                                + {NETWORK_LABEL[Number(chain)]}
                                                    else null
                                                    # @ts-ignore TYPE NEEDS FIXING
                                    p 
                                        + Note : The chains are extendable to any EVM based Blockchain.
    export-default Home
