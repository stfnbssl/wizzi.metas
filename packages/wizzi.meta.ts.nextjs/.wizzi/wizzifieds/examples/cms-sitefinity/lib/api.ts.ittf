module
    kind react
    import PostType from '../interfaces/post'
    export 
        async-function executeGraphQLForBlogPosts
            param query
                :string 
            :return
                :ref Promise
                    :param 
                        :[ 
                            :ref CmsPost
            const graphQLEndpoint
                `lit 
                    + 
                    @ process.env.SF_API_URL
                    + graphql
            const response
                await 
                    _ fetch
                        @ graphQLEndpoint
                        { 
                            @ method 'POST'
                            @ body
                                _ JSON.stringify
                                    { 
                                        @ query
                            { headers
                                @ 'Content-Type' 'application/json'
                        ._ then
                            => 
                                param x
                                _ x.json()
            return response['data']['posts']
    export 
        async-function getAllPostSlugsFromCms
            :return
                :ref Promise
                    :param 
                        :[ 
                            :string 
            var query
                `lit 
                    + &lf;
                    + &nbsp;       query {&lf;
                    + &nbsp;           posts {&lf;
                    + &nbsp;               itemDefaultUrl&lf;
                    + &nbsp;           }&lf;
                    + &nbsp;       }&lf;
                    + &nbsp;  &nbsp;
            const blogPosts
                await 
                    _ executeGraphQLForBlogPosts(query)
            const slugs
                _ blogPosts.map
                    => 
                        param x
                        +
                            @expr x.itemDefaultUrl
            return slugs
    function transformImageUrl
        param url
            :string 
        if !url.startsWith('http')
            set url = process.env.SF_URL + url.substring(1)
        return url
    function mapCmsBlog
        param source
            :ref CmsPost
        :return
            :ref PostType
        return 
            { 
                @ content source.content
                @ excerpt source.excerpt
                @ date source.dateCreated
                @ slug source.itemDefaultUrl
                @ title source.title
                { author
                    @ name source.authorOfPost[0].title
                    @ picture transformImageUrl(source.authorOfPost[0].picture[0].url)
                @ coverImage transformImageUrl(source.coverImage[0].url)
                { ogImage
                    @ url transformImageUrl(source.openGraphImage[0].url)
    export 
        async-function getPostBySlugFromCms
            param slug
                :string 
            :return
                :ref Promise
                    :param 
                        :ref PostType
            const modifiedSlug = slug
            var query
                `lit 
                    + &lf;
                    + &nbsp;       query {&lf;
                    + &nbsp;           posts(_filter: {itemDefaultUrl: {_eq: "
                    @ modifiedSlug
                    + "}}) {&lf;
                    + &nbsp;               id&lf;
                    + &nbsp;               title&lf;
                    + &nbsp;               excerpt&lf;
                    + &nbsp;               content&lf;
                    + &nbsp;               dateCreated&lf;
                    + &nbsp;               itemDefaultUrl&lf;
                    + &nbsp;               openGraphImage {&lf;
                    + &nbsp;                   url&lf;
                    + &nbsp;               }&lf;
                    + &nbsp;               coverImage {&lf;
                    + &nbsp;                   url&lf;
                    + &nbsp;               }&lf;
                    + &nbsp;               authorOfPost {&lf;
                    + &nbsp;                   title&lf;
                    + &nbsp;                   picture {&lf;
                    + &nbsp;                       url&lf;
                    + &nbsp;                   }&lf;
                    + &nbsp;               }&lf;
                    + &nbsp;           }&lf;
                    + &nbsp;       }&lf;
                    + &nbsp;  &nbsp;
            const blogPosts
                _ 
                    _ executeGraphQLForBlogPosts(query)
                    ._ map
                        => 
                            param x
                            _ mapCmsBlog(x)
            if blogPosts.length > 0
                return blogPosts[0]
            return null
    export 
        async-function getAllPostsFromCms
            :return
                :ref Promise
                    :param 
                        :[ 
                            :ref PostType
            var query
                `lit 
                    + &lf;
                    + &nbsp;       query {&lf;
                    + &nbsp;           posts {&lf;
                    + &nbsp;               id&lf;
                    + &nbsp;               title&lf;
                    + &nbsp;               excerpt&lf;
                    + &nbsp;               content&lf;
                    + &nbsp;               dateCreated&lf;
                    + &nbsp;               itemDefaultUrl&lf;
                    + &nbsp;               openGraphImage {&lf;
                    + &nbsp;                   url&lf;
                    + &nbsp;               }&lf;
                    + &nbsp;               coverImage {&lf;
                    + &nbsp;                   url&lf;
                    + &nbsp;               }&lf;
                    + &nbsp;               authorOfPost {&lf;
                    + &nbsp;                   title&lf;
                    + &nbsp;                   picture {&lf;
                    + &nbsp;                       url&lf;
                    + &nbsp;                   }&lf;
                    + &nbsp;               }&lf;
                    + &nbsp;           }&lf;
                    + &nbsp;       }&lf;
                    + &nbsp;  &nbsp;
            const blogPosts
                _ 
                    _ executeGraphQLForBlogPosts(query)
                    ._ map
                        => 
                            param x
                            _ mapCmsBlog(x)
            return blogPosts
    :interface CmsPost
        :p title
            :string 
        :p excerpt
            :string 
        :p dateCreated
            :string 
        :p content
            :string 
        :p itemDefaultUrl
            :string 
        :p openGraphImage
            :{ 
                :p url
                    :string 
        :p coverImage
            :{ 
                :p url
                    :string 
        :p authorOfPost
            :{ 
                :p title
                    :string 
                :p picture
                    :{ 
                        :p url
                            :string 
