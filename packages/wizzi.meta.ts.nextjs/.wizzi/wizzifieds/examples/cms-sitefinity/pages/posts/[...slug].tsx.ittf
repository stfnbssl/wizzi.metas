module
    kind react
    import 
        @ useRouter
        from 'next/router'
    import ErrorPage from 'next/error'
    import Container from '../../components/container'
    import PostBody from '../../components/post-body'
    import Header from '../../components/header'
    import PostHeader from '../../components/post-header'
    import Layout from '../../components/layout'
    import 
        @ getAllPostSlugsFromCms
        @ getPostBySlugFromCms
        from '../../lib/api'
    import PostTitle from '../../components/post-title'
    import Head from 'next/head'
    import 
        @ CMS_NAME
        from '../../lib/constants'
    :import-type PostType from '../../interfaces/post'
    :type Props
        :{ 
            :p post
                :ref PostType
            :p morePosts
                :[ 
                    :ref PostType
            :p preview
                :optional 
                :boolean 
    export-default 
        function Post
            { 
                @ post
                @ morePosts
                @ preview
                :ref Props
            const router = useRouter()
            if !router.isFallback && !post?.slug
                return 
                    < ErrorPage 
                        @ statusCode {404}
            return 
                < Layout 
                    @ preview {preview}
                    < Container 
                        < Header 
                        { 
                            iif router.isFallback
                                then
                                    < PostTitle 
                                        + Loadingâ€¦
                                else
                                    < React.Fragment
                                        article 
                                            @ className "mb-32"
                                            < Head 
                                                < title 
                                                    { 
                                                        `lit 
                                                            + 
                                                            @ post.title
                                                            + &nbsp;| Next.js Blog Example with&nbsp;
                                                            @ CMS_NAME
                                                            + 
                                                meta 
                                                    @ property "og:image"
                                                    @ content {post.ogImage.url}
                                            < PostHeader 
                                                @ title {post.title}
                                                @ coverImage {post.coverImage}
                                                @ date {post.date}
                                                @ author {post.author}
                                            < PostBody 
                                                @ content {post.content}
    :type Params
        :{ 
            :p params
                :{ 
                    :p slug
                        :[ 
                            :string 
    export 
        async-function getStaticProps
            { 
                @ params
                :ref Params
            debugger 
            const post
                await 
                    _ getPostBySlugFromCms('/' + params.slug.join('/'))
            return 
                { 
                    { props
                        @ post
    export 
        async-function getStaticPaths
            const slugs
                await 
                    _ getAllPostSlugsFromCms()
            return 
                { 
                    @ paths
                        _ slugs.map
                            => 
                                param slug
                                return 
                                    { 
                                        { params
                                            @ slug slug.split('/').splice(1)
                    @ fallback false
