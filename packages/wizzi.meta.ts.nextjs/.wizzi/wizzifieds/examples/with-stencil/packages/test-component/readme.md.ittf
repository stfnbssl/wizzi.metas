md
    p 
        img 
            href https://img.shields.io/badge/-Built%20With%20Stencil-16161d.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE5LjIuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA1MTIgNTEyIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTEyOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI%2BCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI%2BCgkuc3Qwe2ZpbGw6I0ZGRkZGRjt9Cjwvc3R5bGU%2BCjxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik00MjQuNywzNzMuOWMwLDM3LjYtNTUuMSw2OC42LTkyLjcsNjguNkgxODAuNGMtMzcuOSwwLTkyLjctMzAuNy05Mi43LTY4LjZ2LTMuNmgzMzYuOVYzNzMuOXoiLz4KPHBhdGggY2xhc3M9InN0MCIgZD0iTTQyNC43LDI5Mi4xSDE4MC40Yy0zNy42LDAtOTIuNy0zMS05Mi43LTY4LjZ2LTMuNkgzMzJjMzcuNiwwLDkyLjcsMzEsOTIuNyw2OC42VjI5Mi4xeiIvPgo8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNDI0LjcsMTQxLjdIODcuN3YtMy42YzAtMzcuNiw1NC44LTY4LjYsOTIuNy02OC42SDMzMmMzNy45LDAsOTIuNywzMC43LDkyLjcsNjguNlYxNDEuN3oiLz4KPC9zdmc%2BCg%3D%3D&colorA=16161d&style=flat-square
            title 
    br 
    h1 
        + Stencil Component Starter
    p 
        + This is a starter project for building a standalone Web Component using Stencil.
    br 
    p 
        + Stencil is also great for building entire apps. For that, use the
        a 
            href https://github.com/ionic-team/stencil-app-starter
            title 
            + stencil-app-starter
        + instead.
    br 
    h1 
        + Stencil
    p 
        + Stencil is a compiler for building fast web apps using Web Components.
    br 
    p 
        + Stencil combines the best concepts of the most popular frontend frameworks into a compile-time rather than run-time tool. Stencil takes TypeScript, JSX, a tiny virtual DOM layer, efficient one-way data binding, an asynchronous rendering pipeline (similar to React Fiber), and lazy-loading out of the box, and generates 100% standards-based Web Components that run in any browser supporting the Custom Elements v1 spec.
    br 
    p 
        + Stencil components are just Web Components, so they work in any major framework or with no framework at all.
    br 
    h2 
        + Getting Started
    p 
        + To start building a new web component using Stencil, clone this repo to a new directory:
    br 
    code 
        lang bash
        + git clone https://github.com/ionic-team/stencil-component-starter.git my-component
        + cd my-component
        + git remote rm origin
    br 
    p 
        + and run:
    br 
    code 
        lang bash
        + npm install
        + npm start
    br 
    p 
        + To build the component for production, run:
    br 
    code 
        lang bash
        + npm run build
    br 
    p 
        + To run the unit tests for the components, run:
    br 
    code 
        lang bash
        + npm test
    br 
    p 
        + Need help?
        a 
            href https://stenciljs.com/docs/my-first-component
            title 
            + Check out our docs
        + .
    br 
    h2 
        + Naming Components
    p 
        + When creating new component tags, we recommend
        em 
            + not
        + using
        code stencil
        + in the component name (ex:
        code &lt;stencil-datepicker&gt;
        + ). This is because the generated component has little to nothing to do with Stencil; it&#39;s just a web component!
    br 
    p 
        + Instead, use a prefix that fits your company or any name for a group of related components. For example, all of the Ionic generated web components use the prefix
        code ion
        + .
    br 
    h2 
        + Using this component
    h3 
        + Script tag
    ul 
        li 
            a 
                href https://docs.npmjs.com/getting-started/publishing-npm-packages
                title 
                + Publish to NPM
        li 
            + Put a script tag similar to this
            code &lt;script src=&#39;https://unpkg.com/my-component@0.0.1/dist/mycomponent.js&#39;&gt;&lt;/script&gt;
            + in the head of your index.html
        li 
            + Then you can use the element anywhere in your template, JSX, html, etc.
    br 
    h3 
        + Node Modules
    ul 
        li 
            + Run
            code npm install my-component
        li 
            + Put a script tag similar to this
            code &lt;script src=&#39;node_modules/my-component/dist/mycomponent.js&#39;&gt;&lt;/script&gt;
            + in the head of your index.html
        li 
            + Then you can use the element anywhere in your template, JSX, html, etc.
    br 
    h3 
        + In a stencil-starter app
    ul 
        li 
            + Run
            code npm install my-component
        li 
            + Add an import to the npm packages
            code import my-component;
        li 
            + Then you can use the element anywhere in your template, JSX, html, etc.
