module
    kind react
    :import-type 
        @ InferGetServerSidePropsType
        @ GetServerSideProps
        from 'next'
    :import-type 
        @ SearchState
        from 'react-instantsearch-core'
    import 
        @ useState
        @ useEffect
        @ useRef
        from 'react'
    import 
        @ useRouter
        from 'next/router'
    import algoliasearch from 'algoliasearch/lite'
    import 
        @ findResultsState
        from 'react-instantsearch-dom/server'
    import 
        @ Search
        from '../components/Search'
    import 
        @ createURL
        @ searchStateToURL
        @ pathToSearchState
        from '../utils'
        # Demo key provided by https://github.com/algolia/react-instantsearch
    const searchClient = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76')
        # Demo key provided by https://github.com/algolia/react-instantsearch
    const defaultProps
        { 
            @ searchClient
            @ indexName 'instant_search'
    export-default 
        function Page
            { 
                @ resultsState
                @ searchState initialState
                :ref InferGetServerSidePropsType
                    :param 
                        :typeof getServerSideProps
            const router = useRouter()
            const debouncedSetState = useRef()
            const [searchState, setSearchState] = useState(initialState)
            const onSearchStateChange
                => 
                    param state
                        :ref SearchState
                    _ clearTimeout(debouncedSetState.current)
                    set =
                        @expr 
                            ( 
                                + debouncedSetState
                                    :as 
                                        :any 
                            . current
                        _ setTimeout
                            => 
                                const href = searchStateToURL(state)
                                _ router.push
                                    @ href
                                    @ href
                                    { 
                                        @ shallow true
                            @ 700
                    _ setSearchState(state)
            _ useEffect
                => 
                    if router
                        _ router.beforePopState
                            => 
                                param state
                                    :ref SearchState
                                const 
                                    { 
                                        @ url
                                    = state
                                _ setSearchState(pathToSearchState(url))
                                return true
                [ 
                    @ router
            return 
                < Search 
                    @ {...defaultProps}
                    @ searchState {searchState}
                    @ resultsState {resultsState}
                    @ onSearchStateChange {onSearchStateChange}
                    @ createURL {createURL}
    :interface PageProps
        :p searchState
            :ref SearchState
        :p resultsState
            :unknown 
    export 
        const getServerSideProps
            :ref GetServerSideProps
                :param 
                    :ref PageProps
            =
                async=> 
                    { 
                        @ resolvedUrl
                    const searchState = pathToSearchState(resolvedUrl)
                    const resultsState
                        await 
                            _ findResultsState
                                @ Search
                                { 
                                    @ ...defaultProps
                                    @ searchState
                        # Pre-serialize `findResultsState` object return so Next.js' serialization checks pass
                        # https://github.com/vercel/next.js/issues/11993
                    return 
                        { 
                            { props
                                @ resultsState JSON.parse(JSON.stringify(resultsState))
                                @ searchState
                        # Pre-serialize `findResultsState` object return so Next.js' serialization checks pass
                        # https://github.com/vercel/next.js/issues/11993
