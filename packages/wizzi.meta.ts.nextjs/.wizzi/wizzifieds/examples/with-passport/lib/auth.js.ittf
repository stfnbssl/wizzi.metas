module
    kind react
    import Iron from '@hapi/iron'
    import 
        @ MAX_AGE
        @ setTokenCookie
        @ getTokenCookie
        from './auth-cookies'
    const TOKEN_SECRET = process.env.TOKEN_SECRET
    export 
        async-function setLoginSession
            param res
            param session
            const createdAt = Date.now()
                # Create a session object with a max age that we can validate later
            const obj
                { 
                    @ ...session
                    @ createdAt
                    @ maxAge MAX_AGE
                # Create a session object with a max age that we can validate later
            const token
                await 
                    _ Iron.seal(obj, TOKEN_SECRET, Iron.defaults)
            _ setTokenCookie(res, token)
    export 
        async-function getLoginSession
            param req
            const token = getTokenCookie(req)
            if !token
                return 
            const session
                await 
                    _ Iron.unseal(token, TOKEN_SECRET, Iron.defaults)
            const expiresAt = session.createdAt + session.maxAge * 1000
                # Validate the expiration date of the session
            if Date.now() > expiresAt
                throw new Error('Session expired')
            return session
