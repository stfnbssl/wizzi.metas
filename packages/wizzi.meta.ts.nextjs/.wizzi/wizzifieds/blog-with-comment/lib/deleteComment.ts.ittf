module
    kind react
    :import-type 
        @ NextApiRequest
        @ NextApiResponse
        from 'next'
    :import-type 
        @ User
        @ Comment
        from '../interfaces'
    import redis from './redis'
    import getUser from './getUser'
    import clearUrl from './clearUrl'
    export-default 
        async-function deleteComments
            param req
                :ref NextApiRequest
            param res
                :ref NextApiResponse
            const url = clearUrl(req.headers.referer)
            const 
                { 
                    @ comment
                    :{ 
                        :p url
                            :string 
                        :p comment
                            :ref Comment
                = req.body
            const 
                { 
                    @ authorization
                = req.headers
            if !comment || !authorization
                return 
                    _ res.status(400).json
                        { 
                            @ message 'Missing parameter.'
            if !redis
                return 
                    _ res.status(500).json
                        { 
                            @ message 'Failed to connect to redis.'
            try 
                const user
                    :ref User
                    =
                        await 
                            _ getUser(authorization)
                    # verify user token
                if !user
                    return 
                        _ res.status(400).json
                            { 
                                @ message 'Invalid token.'
                set comment.user.email = user.email
                const isAdmin = process.env.NEXT_PUBLIC_AUTH0_ADMIN_EMAIL === user.email
                const isAuthor = user.sub === comment.user.sub
                if !isAdmin && !isAuthor
                    return 
                        _ res.status(400).json
                            { 
                                @ message 'Need authorization.'
                await 
                    _ redis.lrem(url, 0, JSON.stringify(comment))
                    # delete
                return res.status(200).end()
            catch err
                return res.status(400)
