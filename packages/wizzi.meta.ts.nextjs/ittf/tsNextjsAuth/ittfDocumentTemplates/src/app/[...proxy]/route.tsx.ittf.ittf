$group
    import
        @ auth
        from "#/auth"
    import
        @ NextRequest
        from "next/server"
    function stripContentEncoding
        param result
            :ref Response
        const responseHeaders = new Headers(result.headers)
        _ responseHeaders.delete("content-encoding")
        return
            new Response
                @expr result.body
                {
                    @ status result.status
                    @ statusText result.statusText
                    @ headers responseHeaders
        # Review if we need this, and why
    async-function handler
        param request
            :ref NextRequest
        const session
            await
                _ auth()
        const headers = new Headers(request.headers)
        _ headers.set
            @ "Authorization"
            template
                + Bearer&nbsp;
                @ session?.accessToken
                +
        let backendUrl = process.env.THIRD_PARTY_API_EXAMPLE_BACKEND ?? "https://authjs-third-party-backend.authjs.dev"
        let url = request.nextUrl.href.replace(request.nextUrl.origin, backendUrl)
        let result
            await
                _ fetch
                    @ url
                    {
                        @ headers
                        @ body request.body
        return stripContentEncoding(result)
    export
        const dynamic = "force-dynamic"
    export
        @ handler
            as GET
        @ handler
            as POST