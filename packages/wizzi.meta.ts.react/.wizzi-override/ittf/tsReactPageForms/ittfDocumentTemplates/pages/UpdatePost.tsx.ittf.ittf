$group
    
    ${'$'}
        var md = {
            styled: true,
            name: "UpdatePost",
            props: [
                { name: "data", type: "any", ref: true },
            ],
            stateProps: [
                { name: "post_id", type: "string" },
                { name: "post_owner", type: "string" },
                { name: "post_name_old", type: "string" },
                { name: "post_name_new", type: "string" },
                { name: "post_description", type: "string" },
                { name: "post_name_new_available", type: "boolean" },
            ]
        }

    v08/ts/react/component${'('}&md)
        
        ${'$'}append imports
            import debounce from 'lodash/debounce'
            import nullthrows from 'nullthrows'        
            pageforms_common_imports${'('}pages)
        
        ${'$'}append styles
            :interface RootStyleProps
            styled StyledRoot .div<RootStyleProps>
                display flex

        check_name${'('}post, post_name_new)
        +
        ${'$'}include handle_input_change
        +
        => handleArtifactNameChange
            param ev
                :ref React.ChangeEvent
                    :param 
                        :ref HTMLInputElement
            $$ loog 'handleArtifactNameChange', ev.target.type, ev.target.checked, ev.target.value
            _ this.setState
                { 
                    @ post_name_new ev.target.value
                =>
                    if ev.target.value !== this.state.post_name_old
                        _ this._checkAvalibleArtifactName
        +
        => handleSubmitUpdate
            param ev
                :ref React.MouseEvent
                    :param 
                        :ref HTMLElement
            _ ev.preventDefault();
            if this.state.post_name_new_available
                _ this.formRef.dispatchEvent(new Event('submit'))
        
        m componentDidMount
            $$ loog 'UpdatePost.componentDidMount.props', this.props
            const
                {
                    @ _id
                    @ owner
                    @ name
                    @ description
                    @ mainIttf
                    @ wizziSchema
                    @ contexts
                    @ dependencies
                = this.props.data
            
            const post_contexts = contexts || []
            const post_dependencies = dependencies || []
            
            _ this.setState
                {
                    @ post_id _id
                    @ post_owner owner
                    @ post_name_old name
                    @ post_name_new name
                    @ post_description description
                    @ post_mainIttf mainIttf
                    @ post_wizziSchema wizziSchema
                    @ post_add_context post_contexts.length > 0
                    @ post_contexts
                    @ post_add_tfolder post_dependencies.length > 0
                    @ post_dependencies 

        +
        m render
            $$ loog 'UpdatePacki.render', 'state', this.state
            return
                < FormContainer
                    < FormTitle
                        @ title 'Update blog post'
                        @ subtitle 'An blog post contains the ittf documents 
                            \b for a software artifact.'
                    < HR
                    form
                        action /artifact/update
                        @ acceptCharset UTF-8
                        method POST
                        @ ref
                            =>
                                param ref
                                set this.formRef = ref                        
                        < FormHidden
                            @ name 'post_id'
                            @ id 'post_id'
                            @ value {this.state.post_id}
                        < FormHidden
                            @ name 'post_owner'
                            @ id 'post_owner'
                            @ value {this.state.post_owner}
                        < FormHidden
                            @ name 'post_name_old'
                            @ id 'post_name_old'
                            @ value {this.state.post_name_old}
                        < FormGroup
                            @ label 'Artifact name'
                            @ name 'post_name_new'
                            @ id 'post_name_new'
                            @ required {true}
                            @ value {this.state.post_name_new}
                            @ onChange {this.handleArtifactNameChange}
                        {
                            &&
                                + this.state.post_name_new.length > 0 &&
                                    \b this.state.post_name_old !== this.state.post_name_new &&
                                    \b this.state.post_name_new_available
                                < Para
                                    + {'Artifact name ' + this.state.post_name_new_checked + ' is available'}
                        {
                            &&
                                + this.state.post_name_new.length > 0 &&
                                    \b this.state.post_name_old !== this.state.post_name_new &&
                                    \b !this.state.post_name_new_available
                                < Para
                                    @ color '#ff0000'
                                    + {'Artifact name ' + this.state.post_name_new_checked + ' is not available'}
                        < HR
                        < FormGroup
                            @ label 'Description'
                            @ name 'post_description'
                            @ id 'post_description'
                            @ required {true}
                            @ value {this.state.post_description}
                            @ onChange {this.handleInputChange}
                        < HR
                        < FormGroup
                            @ label 'Main ittf'
                            @ name 'post_mainIttf'
                            @ id 'post_mainIttf'
                            @ required {true}
                            @ value {this.state.post_mainIttf}
                            @ onChange {this.handleInputChange}
                        < FormGroup
                            @ label 'Wizzi schema'
                            @ name 'post_wizziSchema'
                            @ id 'post_wizziSchema'
                            @ required {true}
                            @ value {this.state.post_wizziSchema}
                            @ onChange {this.handleInputChange}
                        < HR
                        < FormButton
                            @ label 'Update blog post'
                            @ id 'btn_update_post'
                            @ variant 'submit'
                            @ type submit
                            @ onClick {this.handleSubmitUpdate}