$group
    
    import 
        as React
        from 'react'
    import 
        as ReactDOM
        from 'react-dom'
    const 
        { 
            @ useCallback
            @ useMemo
            @ useState
            @ useEffect
        = React
    export 
        :interface ClientPosition
            :p clientX
                :number 
            :p clientY
                :number 
    export 
        function useEventListener
            :< K
                :keyof 
                    :ref DocumentEventMap
            param type
                :ref K
            param listener
                :=> 
                    :void 
                    param this
                        :ref Document
                    param ev
                        :ref DocumentEventMap[k]
                :optional 
            :return
                :void 
            _ useEffect
                => 
                    if !listener
                        return 
                    _ document.addEventListener(type, listener)
                    return 
                        => 
                            :return
                                :void 
                            _ document.removeEventListener(type, listener)
                [ 
                    @ type
                    @ listener
    export 
        :interface DragState
            :< T
            :p offset
                :number 
            :p extraState
                :ref T
    :interface DragStateHandlers
        :< T
        :p beginDrag
            :=> 
                :void 
                param pos
                    :ref ClientPosition
                param extraState
                    :ref T
        :p dragState
            :union 
                :ref DragState
                    :param 
                        :ref T
                :null 
        :p onMouseMove
            :optional 
            :=> 
                :void 
                param event
                    :ref ClientPosition
        :p onTouchMove
            :optional 
            :=> 
                :void 
                param event
                    :ref TouchEvent
        :p onMouseUp
            :optional 
            :=> 
                :void 
    function useDragStateHandlers
        :< T
        param split
            :union 
                :literal 'horizontal'
                :literal 'vertical'
        param onDragFinished
            :=> 
                :void 
                param dragState
                    :ref DragState
                        :param 
                            :ref T
        :return
            :ref DragStateHandlers
                :param 
                    :ref T
        const [dragging, setDragging]
            _ useState
                :param 
                    :union 
                        :tuple 
                            :ref T
                            :number 
                        :null 
                @ null
        const [current, setCurrent]
            _ useState
                :param number
                @ 0
        const beginDrag
            _ useCallback
                => 
                    param event
                        :ref ClientPosition
                    param extraState
                        :ref T
                    :return
                        :void 
                    const pos
                        iif split === 'vertical'
                            then event.clientX
                            else event.clientY
                    _ setDragging
                        [ 
                            @ extraState
                            @ pos
                    _ setCurrent(pos)
                [ 
                    @ split
        const [dragState, onMouseUp]
            _ useMemo
                => 
                    if !dragging
                        return 
                            [ 
                                @ null
                                @ undefined
                    const [extraState, origin] = dragging
                    const dragState
                        :ref DragState
                            :param 
                                :ref T
                        =
                            { 
                                @ offset current - origin
                                @ extraState
                    const onMouseUp
                        => 
                            :return
                                :void 
                            _ ReactDOM.unstable_batchedUpdates
                                => 
                                    _ setDragging(null)
                                    _ onDragFinished(dragState)
                    return 
                        [ 
                            @ dragState
                            @ onMouseUp
                [ 
                    @ current
                    @ dragging
                    @ onDragFinished
        const [onMouseMove, onTouchMove]
            _ useMemo
                => 
                    if !dragging
                        return 
                            [ 
                                @ undefined
                                @ undefined
                    const onMouseMove
                        => 
                            param event
                                :ref ClientPosition
                            :return
                                :void 
                            const pos
                                iif split === 'vertical'
                                    then event.clientX
                                    else event.clientY
                            _ setCurrent(pos)
                    const onTouchMove
                        => 
                            param event
                                :ref TouchEvent
                            :return
                                :void 
                            _ onMouseMove(event.touches[0])
                    return 
                        [ 
                            @ onMouseMove
                            @ onTouchMove
                [ 
                    @ dragging
                    @ split
        return 
            { 
                @ beginDrag
                @ dragState
                @ onMouseMove
                @ onTouchMove
                @ onMouseUp
    export 
        function useDragState
            :< T
            param split
                :union 
                    :literal 'horizontal'
                    :literal 'vertical'
            param onDragFinished
                :=> 
                    :void 
                    param dragState
                        :ref DragState
                            :param 
                                :ref T
            :return
                :tuple 
                    :union 
                        :ref DragState
                            :param 
                                :ref T
                        :null 
                    :=> 
                        :void 
                        param pos
                            :ref ClientPosition
                        param extraState
                            :ref T
            const 
                { 
                    @ beginDrag
                    @ dragState
                    @ onMouseMove
                    @ onTouchMove
                    @ onMouseUp
                =
                    _ useDragStateHandlers
                        :param 
                            :ref T
                        @ split
                        @ onDragFinished
            _ useEventListener('mousemove', onMouseMove)
            _ useEventListener('touchmove', onTouchMove)
            _ useEventListener('mouseup', onMouseUp)
            return 
                [ 
                    @ dragState
                    @ beginDrag