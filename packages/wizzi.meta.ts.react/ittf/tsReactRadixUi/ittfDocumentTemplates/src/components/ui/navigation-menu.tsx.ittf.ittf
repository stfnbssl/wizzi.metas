$group

    ${'$'}include set-ctx-functions
    ${'$'}
        setCtxDep ('@radix-ui/react-navigation-menu', '^1.1.3');
        setCtxDep ('class-variance-authority', '^0.7.0');
        setCtxDep ('lucide-react', '^0.274.0');
        setCtxRequire ('lib.utils.cn');

    import
        as React
        from "react"
    import
        as NavigationMenuPrimitive
        from "@radix-ui/react-navigation-menu"
    import
        @ cva
        from "class-variance-authority"
    import
        @ ChevronDown
        from "lucide-react"
    import
        @ cn
        from "#/lib/utils"
    const NavigationMenu
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof NavigationMenuPrimitive.Root
            :param
                :ref React.ComponentPropsWithoutRef
                    :param
                        :typeof NavigationMenuPrimitive.Root
            =>
                {
                    @ className
                    @ children
                    ... props
                param ref
                < NavigationMenuPrimitive.Root
                    @ ref {ref}
                    @ className {cn("relative z-10 flex max-w-max flex-1 items-center justify-center", className)}
                    ... props
                    + {children}
                    < NavigationMenuViewport
    set NavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName
    const NavigationMenuList
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof NavigationMenuPrimitive.List
            :param
                :ref React.ComponentPropsWithoutRef
                    :param
                        :typeof NavigationMenuPrimitive.List
            =>
                {
                    @ className
                    ... props
                param ref
                < NavigationMenuPrimitive.List
                    @ ref {ref}
                    @ className {cn("group flex flex-1 list-none items-center justify-center space-x-1", className)}
                    ... props
    set NavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName
    const NavigationMenuItem = NavigationMenuPrimitive.Item
    const navigationMenuTriggerStyle = cva("group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-2 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50")
    const NavigationMenuTrigger
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof NavigationMenuPrimitive.Trigger
            :param
                :ref React.ComponentPropsWithoutRef
                    :param
                        :typeof NavigationMenuPrimitive.Trigger
            =>
                {
                    @ className
                    @ children
                    ... props
                param ref
                < NavigationMenuPrimitive.Trigger
                    @ ref {ref}
                    @ className {cn(navigationMenuTriggerStyle(), "group", className)}
                    ... props
                    + {children}
                    + {" "}
                    < ChevronDown
                        @ className "relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180"
                        @ aria-hidden "true"
    set NavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName
    const NavigationMenuContent
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof NavigationMenuPrimitive.Content
            :param
                :ref React.ComponentPropsWithoutRef
                    :param
                        :typeof NavigationMenuPrimitive.Content
            =>
                {
                    @ className
                    ... props
                param ref
                < NavigationMenuPrimitive.Content
                    @ ref {ref}
                    @ className {cn("left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto ", className)}
                    ... props
    set NavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName
    const NavigationMenuLink = NavigationMenuPrimitive.Link
    const NavigationMenuViewport
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof NavigationMenuPrimitive.Viewport
            :param
                :ref React.ComponentPropsWithoutRef
                    :param
                        :typeof NavigationMenuPrimitive.Viewport
            =>
                {
                    @ className
                    ... props
                param ref
                div
                    @ className {cn("absolute left-0 top-full flex justify-center")}
                    < NavigationMenuPrimitive.Viewport
                        @ className {cn("origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]", className)}
                        @ ref {ref}
                        ... props
    set NavigationMenuViewport.displayName = NavigationMenuPrimitive.Viewport.displayName
    const NavigationMenuIndicator
        _ React.forwardRef
            :param
                :ref React.ElementRef
                    :param
                        :typeof NavigationMenuPrimitive.Indicator
            :param
                :ref React.ComponentPropsWithoutRef
                    :param
                        :typeof NavigationMenuPrimitive.Indicator
            =>
                {
                    @ className
                    ... props
                param ref
                < NavigationMenuPrimitive.Indicator
                    @ ref {ref}
                    @ className {cn("top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in", className)}
                    ... props
                    div
                        @ className "relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md"
    set NavigationMenuIndicator.displayName = NavigationMenuPrimitive.Indicator.displayName
    export
        @ navigationMenuTriggerStyle
        @ NavigationMenu
        @ NavigationMenuList
        @ NavigationMenuItem
        @ NavigationMenuContent
        @ NavigationMenuTrigger
        @ NavigationMenuLink
        @ NavigationMenuIndicator
        @ NavigationMenuViewport