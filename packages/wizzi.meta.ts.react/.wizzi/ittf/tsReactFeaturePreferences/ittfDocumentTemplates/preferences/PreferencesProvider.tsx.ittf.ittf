$group

    import debounce from 'lodash/debounce'
    import 
        as React
        from 'react'
   
    :import-type 
        @ PanelType
        @ ThemeName
        @ PreferencesType
        @ SetPreferencesType
        from './types'
    
    import
        @ PreferencesContext
        from './types'
    +
    :type Props
        :{ 
            :p cookies
                :{ 
                    :p get
                        :=> 
                            :union 
                                :string 
                                :undefined 
                            param key
                                :string 
                    :p set
                        :optional 
                        :=> 
                            :void 
                            param key
                                :string 
                            param value
                                :string 
            
            :p children
                :ref React.ReactNode
    +
    :type State
        :{ 
            :p preferences
                :ref PreferencesType
    +
    const PREFERENCES_CONFIG_KEY = '${"$"}{wzCtx.Build.preferences.configKey}'
    +
    const defaults
        :ref PreferencesType
        =
            { 
                @ theme 'light'
                @ panelsShown false
                @ panelType 'errors'
                ${'$'}foreach item in wzCtx.Build.preferences.items
                    ${'$'} var hyphen = item.type == 'string' ? '"' : '';
                    @ ${'$'}{item.name} ${'$'}{hyphen + item.defaultValue + hyphen}

    +
    class PreferencesProvider
        super React.Component
            :param 
                :ref Props
            :param 
                :ref State
        ctor 
            param props
                :ref Props
            _ super(props)
            const 
                { 
                    @ cookies
                = this.props
            let overrides
                :ref Partial
                    :param 
                        :ref PreferencesType
                =
                    { 
            try 
                set overrides =
                    || 
                        + JSON.parse(cookies.get(PREFERENCES_CONFIG_KEY) ?? '')
                        { 
                    # Restore editor preferences from saved data
            catch e
            set this.state =
                { 
                    { preferences
                        @ ...defaults
                        @ ...overrides
        p _persistPreferences
            _ debounce
                => 
                    const 
                        { 
                            @ cookies
                        = this.props
                    try 
                        _ cookies.set?.(PREFERENCES_CONFIG_KEY, JSON.stringify(this.state.preferences))
                    catch e
                @ 1000
        => _setPreferences
            param overrides
                :ref Partial
                    :param 
                        :ref PreferencesType
            _ this.setState
                => 
                    param state
                    (
                        { 
                            { preferences
                                @ ...state.preferences
                                @ ...overrides
                @ this._persistPreferences
        m render
            return 
                < PreferencesContext.Provider 
                    @ value
                        { 
                            @ setPreferences this._setPreferences
                            @ preferences this.state.preferences
                    + {this.props.children}
    +
        export-default PreferencesProvider
