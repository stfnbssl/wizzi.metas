$group
    import 
        @ StyleSheet
        @ css
        from 'aphrodite'
    import 
        as React
        from 'react'
    +
    export
        :type CollapsibleObjectProps
            :{ 
                :p object
                    :any 
                :p label
                    :optional 
                    :string 
    +
    :type State
        :{ 
            :p isExpanded
                :boolean 
    +
    export
        class CollapsibleObject
            super React.Component
                :param 
                    :ref CollapsibleObjectProps
                :param 
                    :ref State
            p state
                { 
                    @ isExpanded false
            => _handleClick
                _ this.setState
                    => 
                        param state
                        (
                            { 
                                @ isExpanded !state.isExpanded
            => _renderValue
                param value
                    :any 
                span 
                    @ className
                        _ css
                            iif typeof value === 'object' && value !== null
                                then null
                                else
                                    iif typeof value === 'string'
                                        then styles.string
                                        else styles.value
                    { 
                        iif typeof value === 'object' && value !== null
                            then
                                iif Array.isArray(value)
                                    then
                                        iif value.length
                                            then '[…]'
                                            else '[]'
                                    else
                                        iif Object.keys(value).length
                                            then '{…}'
                                            else '{}'
                            else
                                iif typeof value === 'string'
                                    then
                                        `lit 
                                            + "
                                            @ value
                                            + "
                                    else String(value)
            m render
                const keys = Object.keys(this.props.object)
                return 
                    div 
                        @ className {css(styles.container)}
                        div 
                            @ onClick {this._handleClick}
                            span 
                                @ className {css(styles.triangle)}
                                { 
                                    iif this.state.isExpanded
                                        then '▼'
                                        else '►'
                            { 
                                iif this.props.label
                                    then
                                        span 
                                            @ className {css(styles.label)}
                                            + {this.props.label}
                                            + :
                                    else null
                            { 
                                iif Array.isArray(this.props.object)
                                    then
                                        span 
                                            @ className {css(styles.preview)}
                                            + [
                                            { 
                                                _ this.props.object.map
                                                    => 
                                                        param value
                                                        param i
                                                        param self
                                                        span 
                                                            @ key {i}
                                                            @ className {css(styles.pair)}
                                                            + {this._renderValue(value)}
                                                            { 
                                                                iif i !== self.length - 1
                                                                    then ','
                                                                    else null
                                            + ]
                                    else
                                        span 
                                            @ className {css(styles.preview)}
                                            + {'{'}
                                            { 
                                                _ keys.map
                                                    => 
                                                        param key
                                                        param i
                                                        const value = this.props.object[key]
                                                        return 
                                                            span 
                                                                @ key {key}
                                                                @ className {css(styles.pair)}
                                                                span 
                                                                    @ className {css(styles.key)}
                                                                    + {key}
                                                                    + :
                                                                + {this._renderValue(value)}
                                                                { 
                                                                    iif i !== keys.length - 1
                                                                        then ','
                                                                        else null
                                            + {'}'}
                        div 
                            @ className {css(styles.expanded)}
                            { 
                                iif this.state.isExpanded
                                    then
                                        _ 
                                            ( 
                                                iif Array.isArray(this.props.object)
                                                    then
                                                        [ 
                                                            @ ...keys
                                                            @ 'length'
                                                    else keys
                                            ._ map
                                                => 
                                                    param key
                                                    const item = this.props.object[key]
                                                    return 
                                                        iif typeof item === 'object' && item !== null && Object.keys(item).length
                                                            then
                                                                < CollapsibleObject 
                                                                    @ key {key}
                                                                    @ label {key}
                                                                    @ object {item}
                                                            else
                                                                div 
                                                                    @ key {key}
                                                                    @ className {css(styles.item)}
                                                                    span 
                                                                        @ className {css(styles.label, styles.key)}
                                                                        + {key}
                                                                        + :
                                                                    + {this._renderValue(item)}
                                    else null
    +
    export-default CollapsibleObject
    +
    const styles
        _ StyleSheet.create
            { 
                { container
                    @ cursor 'default'
                { pair
                    @ margin '0 4px'
                    @ verticalAlign 'middle'
                { preview
                    @ margin '0 4px'
                    @ verticalAlign 1
                { triangle
                    @ display 'inline-block'
                    @ verticalAlign 'middle'
                    @ width 8
                    @ fontSize 9
                    @ opacity 0.7
                { label
                    @ marginLeft 6
                    @ opacity 0.7
                { key
                    @ marginRight 4
                    @ opacity 0.7
                { value
                    @ color '#a27cca'
                { string
                    @ color '#87b121'
                { expanded
                    @ marginLeft 14
                { item
                    @ marginLeft 8
