$group
    ${'$'}
      var myName = 'Form';
      //
    
    iife_window${'('} mvc, ${'$'}{myName}, increment, Underscore)

      html_f buildForm
            var temp = []
            foreach item in ctx.controls
                set item.__form = ctx
                _ mvc.Control.build
                    @ temp
                    @ item
            
            div
                class form-card
                if ctx.title
                    div {{ ctx.title }}
                        class form-title
                div
                    id {{ ctx.id }}-message-warning
                    class m-b-s
                div
                    id {{ ctx.id }}-message-success
                    class m-b-s
                < form
                    method post
                    id {{ ctx.id }}
                    div {{ temp.join('') }}
                    div
                        class form-submit
                        input 
                            type submit
                            value Submit
                            class submit
                            id submit
                            name submit
                        input 
                            type submit
                            value Reset
                            class submit
                            id reset
                            name reset
        
      set ${'$'}{myName}.setup
        function
          param $
          param container
          param model
          param originalValues
          param handlers
          param_object${'('} model, required, Function mvc.${'$'}{myName}.setup )
          param_object${'('} originalValues, required, Function mvc.${'$'}{myName}.setup )
          param_object${'('} handlers, required, Function mvc.${'$'}{myName}.setup )

          var container = container.nodeName ? container : $(container)
          if !container || !container.nodeName
            throw new Error('Container element for ' + model.title + 'form not found: ' + container)

          set container.innerHTML
            _ buildForm
              @ model

          var formValues
            _ Object.assign
              {
              @ originalValues

          var currentValues
            _ Object.assign
              {
              @ originalValues

          var context
              {
                  @ originalValues formValues
                  @ currentValues currentValues
                  @ onChange
                      function
                          param id
                          param value
                          set currentValues[id] = value
                          $$ loog 'Changed currentValues', currentValues
                          if handlers.onChange
                            _ handlers.onChange
                              @ id
                              @ value
                              @ currentValues
                  @ onSubmit
                      function
                          param id
                          param value
                          if id
                            set currentValues[id] = value
                          $$ loog 'Submit currentValues', currentValues
                          if handlers.onSubmit
                            _ handlers.onSubmit
                              @ currentValues
          
          _ Form.start
              @ $
              @ model
              @ context

          _ Form.start_validation
              @ $
              @ model

      ${'$'}* VIA
      set ${'$'}{myName}.build
        function
            param __html
            param ctx
            param_array${'('} __html, required, Function mvc.${'$'}{myName}.build )
            param_object${'('} ctx, required, Function mvc.${'$'}{myName}.build )
            
            var temp = []
            foreach item in ctx.controls
                _ mvc.Control.build
                    @ temp
                    @ item
            
            div
                class form-card
                h3 {{ ctx.title }}
                    class form-title
                div
                    id {{ ctx.id }}-message-warning
                    class m-b-s
                div
                    id {{ ctx.id }}-message-success
                    class m-b-s
                < form
                    method post
                    id {{ ctx.id }}
                    div {{ temp.join('') }}
                    div
                        class form-submit
                        input 
                            type submit
                            value Submit
                            class submit
                            id submit
                            name submit
                        input 
                            type submit
                            value Reset
                            class submit
                            id reset
                            name reset
      *$

      set ${'$'}{myName}.start
        function
            param $
            param model
            param context
            param_object${'('} model, required, Function mvc.${'$'}{myName}.start )
            param_object${'('} context, required, Function mvc.${'$'}{myName}.start )

            foreach item in model.controls
                set item.__form = model
                _ mvc.Control.start
                    @ $
                    @ item
                    @ context

            if context.onSubmit
                var el = $('#' + model.id)
                _ $on
                    @ el
                    @ 'submit'
                    =>
                        param event
                        _ event.preventDefault
                        const invalids = []
                        foreach item in model.controls
                          _ mvc.Control.validate
                            @ item
                            @ model.validation_rules
                            @ context
                            @ invalids
                        if invalids.length == 0
                          $$ loog "model submitted", model.id
                          _  context.onSubmit
                        else
                          $$ loog 'invalid forms', invalids

      set ${'$'}{myName}.start_validation
        function
            param $
            param model
            param_object${'('} model, required, Function mvc.${'$'}{myName}.start_validation )

            var rules = {}
            foreach item in model.controls
                _ mvc.Control.start_validation
                    @ $
                    @ item
                    @ rules
            set model.validation_rules = rules

      set ${'$'}{myName}.dispose
        function
            param $
            param container
            param model
            foreach item in model.controls
                _ mvc.Control.dispose
                  @ $
                  @ item
            var container = container.nodeName ? container : $(container)
            set container.innerHTML = ''