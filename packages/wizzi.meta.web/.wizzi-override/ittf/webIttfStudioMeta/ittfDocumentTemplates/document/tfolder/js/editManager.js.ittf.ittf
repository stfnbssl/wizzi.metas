$group

	#
	# implements clickHandler
	# params
	# { ctx
	#    { editorImpl
	#    { modalManager
	#    string editorKey
	#
	class EditManager
		ctor
			param ctx
			param options
			set this.ctx = ctx
			set this.options = options
			set this.editorImpl = ctx.editorImpl
			# do not set this in the constructor, could be yet uncreated
			# set this.modalManager = ctx.modalManager
			set this.dataHashKey = options.dataHashKey
			set this.dataContentKey = options.dataContentKey
			set this.dataPrettyKey = options.dataPrettyKey
			set this.dataTitleKey = options.dataTitleKey
			set this.contentHash = null
			set this.contentOriginal = null

		m initEditor
			if this.editor
				return
			_ this.editorImpl.initialize
			set this.editor = this.editorImpl
			var that = this
			var saveEl = wz.element('#' + this.editor.key + '-save')
			var saveRefreshEl = wz.element('#' + this.editor.key + '-save-refresh')
			var cancelEl = wz.element('#' + this.editor.key + '-cancel')
			set this.titleElement = wz.element('#' + this.editor.key + '-title')
			_ wz.click
				@ cancelEl
				function
					_ that.ctx.modalManager.hide
						@ that.editor.key
			_ wz.click
				@ saveEl
				function
					if that.editor.getValue() !== that.contentOriginal
						_ that.ctx.dataManager.editSave
							@ that.contentHash
							_ that.editor.getValue
					_ that.ctx.modalManager.hide
						@ that.editor.key
			_ wz.click
				@ saveRefreshEl
				function
					if that.editor.getValue() !== that.contentOriginal
						_ that.ctx.dataManager.editSave
							@ that.contentHash
							_ that.editor.getValue
					_ that.ctx.modalManager.hide
						@ that.editor.key
					set location.href= location.pathname

		m onSave
			param data
			_ wz.value
				@ this.contentElementId
				@ data.content
			_ wz.html
				@ this.prettyElementId
				@ data.pretty && data.pretty.prettyLines ? data.pretty.prettyLines.join('') : data.pretty

		m setEditor
			param options
			if this.editor
				_ this.editor.setValue
					@ options.value
				if this.titleElement
					_ wz.text(this.titleElement, options.title)

		m edit
			param options
			# log 'wz.editManager.edit.options', options
			_ this.initEditor
			_ this.setEditor
				@ options

		m handleClick
			param target
			param dataValue
			# log 'wz.editManager.handleClick.dataValue', dataValue
			set this.contentElementId = dataValue[this.dataContentKey]
			set this.prettyElementId = dataValue[this.dataPrettyKey]
			set this.contentHash = dataValue[this.dataHashKey]
			set this.contentOriginal = wz.value(this.contentElementId)
			_ this.edit
				{
					@ value wz.value(this.contentElementId)
					@ title dataValue[this.dataTitleKey]
			_ this.ctx.modalManager.show
				@ this.editor.key
				@ this.editor.key + '-form'

		m checkClick
			param target
			if this.editor
				return
					_ this.ctx.modalManager.checkClick
						@ this.editor.key + '-form'
						@ target
			return false
