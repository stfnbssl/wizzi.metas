$group
    
	class ModalManager
		ctor
			param ctx
			set this.ctx = ctx
			set this.dialogs = {}
		
		m checkClick
			param dialogKey
			param target
			# Not implemented yet
			# log 'wz.ModalManager.checkClick', target
			return false

		m show
			param dialogKey
			param formId
			
			var dialogData
				_ this.createMarkup
					@ dialogKey
			
			if !dialogData.currentContent
				var formEl
					_ wz.element( '#' + formId)
				if !formEl
					throw new Error('In wz.modalManager.show() the formId is not an existing html element: ' + formId)
				_ dialogData.modalContentElement.appendChild
					@ formEl
				set formEl.style.display = "block"
				set dialogData.currentContent = formEl
			
			set dialogData.modalElement.style.display = "block"

		m hide
			param dialogKey
			
			var dialogData
				_ this.createMarkup
					@ dialogKey

			if !dialogData
				throw new Error('In wz.modalManager.hide() the dialogKey is unknown: ' + dialogKey)

			set dialogData.modalElement.style.display = "none"

		m createMarkup
			param dialogKey

			if !this.dialogs[dialogKey]
				set this.dialogs[dialogKey] = {}

			var dialog = this.dialogs[dialogKey]
			
			if dialog.modalElement
				return dialog
			
			var modalsContainer = wz.element('#' + this.ctx.modalsContainerId)
			if !modalsContainer
				set modalsContainer = document.createElement('div')
				_ modalsContainer.setAttribute('id', this.ctx.modalsContainerId)
				_ document.body.appendChild(modalsContainer)

			# . modal
			# 	id edit-modal
			# 	. modal-content
			# 		id edit-modal-content
			# 		span &times;
			# 			class modal-close
			
			var spanClose = document.createElement('span')
			_ spanClose.setAttribute('class', 'modal-close')
			_ wz.text(spanClose, 'X')
			var that = this
			_ wz.click
				@ spanClose
				function
					_ that.hide
						@ dialogKey

			set dialog.modalContentElement = document.createElement('div')
			_ dialog.modalContentElement.setAttribute('class', 'modal-content')
			_ dialog.modalContentElement.setAttribute('id', dialogKey + '-modal-content')
			
			set dialog.modalElement = document.createElement('div')
			_ dialog.modalElement.setAttribute('class', 'modal')
			_ dialog.modalElement.setAttribute('id', dialogKey + '-modal')
			
			_ dialog.modalContentElement.appendChild(spanClose)
			_ dialog.modalElement.appendChild(dialog.modalContentElement)
			_ modalsContainer.appendChild(dialog.modalElement)

			return dialog