$group
    ${'$'}
        var myName = 'Fetch';
        //

    iife_window${'('} api, ${'$'}{myName} )
        const ${'$'}{myName}
          {
        set ${'$'}{myName}.get
            function
                param url
                r_promise${'('})
                    var req = new XMLHttpRequest()
                    _ req.overrideMimeType("application/json")
                    _ req.open('GET', url, true)
                    set req.onload =
                        function 
                            var jsonResponse = JSON.parse(req.responseText)
                            _ resolve
                              @ jsonResponse
                    _ req.send(null)

        set ${'$'}{myName}.put
            function
                param data
                r_promise${'('}) 
                    $$ loog '${'$'}{myName}.put', 'url', data.url, 'body', data.body
                    var req = new XMLHttpRequest()
                    _ req.open('PUT', data.url, true)
                    _ req.setRequestHeader('Content-type','application/json; charset=utf-8');
                    set req.onload =
                        function 
                            var jsonResponse = JSON.parse(req.responseText)
                            _ resolve
                              @ jsonResponse
                    var json
                      _ JSON.stringify
                        @ data.body
                    _ req.send(json)       

        set ${'$'}{myName}.post
            function
                param data
                r_promise${'('}) 
                    $$ loog '${'$'}{myName}.post', 'url', data.url, 'body', data.body
                    var req = new XMLHttpRequest()
                    _ req.open('POST', data.url, true)
                    _ req.setRequestHeader('Content-type','application/json; charset=utf-8');
                    set req.onload =
                        function 
                            var jsonResponse = JSON.parse(req.responseText)
                            _ resolve
                              @ jsonResponse
                    var json
                      _ JSON.stringify
                        @ data.body
                    _ req.send(json)       

        set ${'$'}{myName}.delete
            function
                param url
                r_promise${'('}) 
                    $$ loog '${'$'}{myName}.delete', 'url', url
                    var req = new XMLHttpRequest()
                    _ req.open('DELETE', url, true)
                    _ req.setRequestHeader('Content-type','application/json; charset=utf-8');
                    set req.onload =
                        function 
                            var jsonResponse = JSON.parse(req.responseText)
                            _ resolve
                              @ jsonResponse
                    _ req.send(null)

                    