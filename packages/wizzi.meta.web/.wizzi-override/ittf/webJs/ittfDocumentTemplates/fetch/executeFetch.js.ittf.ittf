$group

    function executeFetch
        param url
        param data
        param options
        param callback

        if typeof options == 'undefined'
            set callback = data
            set options
                {
                    @ method 'GET'
        elif typeof callback == 'undefined'
            set callback = options

        let fetchOptions
            {
                @ method options.method || "GET"

        if fetchOptions.method == 'GET' || fetchOptions.method == 'HEAD'
        else
            if typeof data == 'object' && data != null
                set fetchOptions.body = JSON.stringify(data)
                set fetchOptions.headers
                    {
                        @ 'Content-Type' 'application/json'

        $$ loog 'executeFetch', 'url', url, 'fetchOptions', fetchOptions

                                                         $$ Default options are marked with *
        set fetchOptions.mode = 'cors'                   $$ no-cors, *cors, same-origin
        set fetchOptions.cache = 'no-cache'              $$ *default, no-cache, reload, force-cache, only-if-cached
        set fetchOptions.credentials = 'same-origin'     $$ include, *same-origin, omit
        set fetchOptions.redirect = 'follow'             $$ manual, *follow, error
        set fetchOptions.referrerPolicy = 'no-referrer'  $$ no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url

        return 
            _ fetch
                @ url
                @ fetchOptions