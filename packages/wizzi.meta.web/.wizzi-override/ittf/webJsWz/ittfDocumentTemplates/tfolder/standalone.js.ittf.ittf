$group

    ${'$'}include callApi.js

	iife
		
		if !window.wz
			set window.wz = {}

        if !wz.isString
            throw new Error('wz/standalone require wz/core')
	
		set wz.canGen
			function
				param schemaName
				param callback
                # TODO
                r_cb${'('} true )

		#
			# param
			#   { options
			#     { modelContext
			#       optional
			#     { artifactContext
			#       optional
			#     string artifactName
			#       optional
		set wz.gen
			function
				param filePath
				param options
				param callback

				if typeof callback === 'undefined'
					set callback = options
					set options = {}

                _ callApi
                    @ 'POST'
                    @ 'productions/artifactFS/' + encodeURIComponent(filePath)
                    @ options
                    ._ then
                        =>
                            param result
                            if wz.isString(result)
                                const json = JSON.parse(result)
                                if json.__is_error
                                    return
                                        _ callback
                                            @ json
                                else
                                    throw new Error('Invalid result: ' + result)
                            else
                                _ callback
                                    @ null
                                    @ result['x'].contents
                    ._ catch
                        => 
                            param err
                            _ callback
                                @ err

		set wz.genFromText
			function
				param ittfContent
				param options
				param callback

				if typeof callback === 'undefined'
					set callback = options
					set options = {}

                var filePath = 'x.' + options.schema + '.ittf'
                var files
                    {
                        @ ['x.' + options.schema + '.ittf']
                            { 
                                @ type 'CODE'
                                @ contents ittfContent

                _ callApi
                    @ 'POST'
                    @ 'productions/artifact/' + encodeURIComponent(filePath)
                    @ files
                    ._ then
                        =>
                            param result
                            if wz.isString(result)
                                const json = JSON.parse(result)
                                if json.__is_error
                                    return
                                        _ callback
                                            @ json
                                else
                                    throw new Error('Invalid result: ' + result)
                            else
                                $$ loog 'wz.genFromText.result', result
                                _ callback
                                    @ null
                                    @ result.generatedArtifact.artifactContent
                    ._ catch
                        => 
                            param err
                            _ callback
                                @ err
		
		
        set wz.genArtifact
			function
				param filePath
				param packiFiles
				param callback

                _ callApi
                    @ 'POST'
                    @ 'productions/artifact/' + encodeURIComponent(filePath)
                    @ packiFiles
                    ._ then
                        =>
                            param result
                            if wz.isString(result)
                                const json = JSON.parse(result)
                                if json.__is_error
                                    return
                                        _ callback
                                            @ json
                                else
                                    throw new Error('Invalid result: ' + result)
                            else
                                return
                                    _ callback
                                        @ null
                                        @ result.generatedArtifact.artifactContent
                    ._ catch
                        => 
                            param err
                            _ callback
                                @ err

        set wz.transformModel
			function
				param filePath
                param transformationName
				param packiFiles
				param callback

                _ callApi
                    @ 'POST'
                    @ 'productions/transform/' + encodeURIComponent(filePath) + '/' + encodeURIComponent(transformationName)
                    @ packiFiles
                    ._ then
                        =>
                            param result
                            # loog 'wz.transformModel', result
                            if wz.isString(result)
                                const json = JSON.parse(result)
                                if json.__is_error
                                    return
                                        _ callback
                                            @ json
                                else
                                    throw new Error('Invalid result: ' + result)
                            else
                                return
                                    _ callback
                                        @ null
                                        @ result.transformedModel
                    ._ catch
                        => 
                            param err
                            _ callback
                                @ err

        set wz.mTreeBuildupScript
			function
				param filePath
				param packiFiles
				param callback

                _ callApi
                    @ 'POST'
                    @ 'productions/mtreescript/' + encodeURIComponent(filePath)
                    @ packiFiles
                    ._ then
                        =>
                            param result
                            if wz.isString(result)
                                const json = JSON.parse(result)
                                if json.__is_error
                                    return
                                        _ callback
                                            @ json
                                else
                                    throw new Error('Invalid result: ' + result)
                            else
                                return
                                    _ callback
                                        @ null
                                        @ result.mTreeBuildupScript
                    ._ catch
                        => 
                            param err
                            _ callback
                                @ err

        set wz.genWithRequest
			function
				param request
				param callback

                _ callApi
                    @ 'POST'
                    @ 'wizzi/productions/artifact'
                    @ request
                    ._ then
                        =>
                            param result
                            # loog 'result', result
                            if wz.isString(result)
                                const json = JSON.parse(result)
                                if json.__is_error
                                    return
                                        _ callback
                                            @ json
                                else
                                    throw new Error('Invalid result: ' + result)
                            else
                                return
                                    _ callback
                                        @ null
                                        @ result $$ .generatedArtifact.artifactContent
                    ._ catch
                        => 
                            param err
                            _ callback
                                @ err

        set wz.canWizzify
			function
				param schemaName
				# TODO
                return true

		set wz.wizzify
			function
				param schemaName
				param snippet
				param callback

                var files 
                    {
                        @ ['x.' + schemaName]
                            { 
                                @ type 'CODE'
                                @ contents snippet
                
                _ callApi
                    @ 'POST'
                    @ 'productions/wizzify'
                    @ files
                    ._ then
                        =>
                            param result
                            if wz.isString(result)
                                const json = JSON.parse(result)
                                if json.__is_error
                                    return
                                        _ callback
                                            @ json
                                else
                                    throw new Error('Invalid result: ' + result)
                            else
                                var json = result.packiResult
                                # loog 'wz.wizzify.json', json
                                _ callback
                                    @ null
                                    @ json['x.' + schemaName + '.ittf'].contents
                    ._ catch
                        => 
                            param err
                            _ callback
                                @ err

		$*
        set wz.getCodeAST
			function
				param mime
				param snippet
				param callback
				_ wz.tools[mime + 'wizzifier'].getCodeAST
					@ snippet
					{
					@ callback
        *$
