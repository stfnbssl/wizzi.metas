$group
	${'$'}params &opt

    ${'$'}
        var ca = 'm-s p-s color-header font-l font-w-xxl';
        var ca_inverse = 'm-s p-s color-header-inverse bg-color-header-inverse font-l font-w-xxl';
        var ca2 = 'color-header font-x font-w-s';

    head 
		${'$'}if opt.title
			@title ${'$'}{opt.title}
        meta 
            charset utf-8
        meta 
            name viewport
			content width=device-width, initial-scale=1

        link
            rel preconnect
            href https://fonts.googleapis.com
        link
            rel preconnect
            href https://fonts.gstatic.com 
            crossorigin
        link 
            @ rel "stylesheet"
            @ href "https://cdn.jsdelivr.net/npm/normalize.css@8.0.1/normalize.min.css"
        css /ittf/css/main.css.ittf
		script
            module
                set window.__filename = 'browser'
                ${'$'}if opt.isWizziStudio && !opt.useFirebase
    				var WizziBrowser
    					{ 
    						@ log
    							function 
    								var line
    									_ Array.prototype.slice.call(arguments).map
    										function 
    											param argument
    											return 
    												iif typeof argument === 'string'
    													then argument
    													else JSON.stringify(argument)
    										._ join
    											@ '\n '
    								if arguments.length > 1 && arguments[arguments.length-1] === '-'
    								    set line += new Array(50).join('-')
    								set document.querySelector('#wizzi-browser-log').textContent += line + '\n'
    						@ clearLog
    							function 
    								set document.querySelector('#wizzi-browser-log').textContent = ''
    						@ setStatus
    							function 
    								param status
    								set document.querySelector('#wizzi-browser-status').textContent = status
    						@ setContent
    							function 
    								param newContent
    								var content = document.querySelector('#wizzi-browser-content')
    								while content.hasChildNodes()
    									_ content.removeChild(content.lastChild)
    								_ content.appendChild(newContent)
    			
		${'$'}hook head-styles-0
		${'$'}if opt.isWizziStudio && !opt.useFirebase
    		@style
    			css
    				# wizzi-browser-status
    					margin .5em 0
    					font-style italic
    				# wizzi-browser-log
    					margin .5em 0
    					white-space pre-wrap
    				# wizzi-browser-content
    					margin .5em 0
    				# status:empty, #log:empty, #content:empty
    					display none
		./site-styles${'('} &opt )
        ${'$'}if opt.stickyNav
            style
                # ${'$'}{opt.stickyNav}.sticky
                    position fixed
                    top 0
                . ${'$'}{opt.stickyNav}OffsetMargin
                    padding-top ${'$'}{opt.stickyNavOffset}px
                ${'$'}if opt.stickyNavLogo
                    # ${'$'}{opt.stickyNavLogo}.visible
                        display block
                    # ${'$'}{opt.stickyNavLogo}.hidden
                        display none
        

		${'$'}hook head-styles
		${'$'}hook head-styles-2
        ${'$'}hook head-styles-3
        ${'$'}hook head-scripts

    body 
        . flex-row space-between bg-color-header color-header align-items-center
            id __main_navbar
            . flex-row
                html/a${'('} , /, ${'$'}{ca2}
                    div
                        style width: 80px; margin-top: 5px; margin-left: 20px;
                        html/images/logo${'('}#efefef, #434343)
            . flex-row
                ${'$'}if locals.user
                    ${'$'}if opt.section != 'Starter'
                        html/a${'('} Starter, /ittf/site/starter.html.ittf, ${'$'}{ca}
                    ${'$'}else
                        . ${'$'}{ca_inverse}
                            + Starter
                    ${'$'}if opt.section != 'Lab'
                        html/a${'('} Lab, /ittf/site/lab.html.ittf, ${'$'}{ca}
                    ${'$'}else
                        . ${'$'}{ca_inverse}
                            + Lab
                    ${'$'}if opt.section != 'Productions'
                        html/a${'('} Productions, /ittf/site/productions.html.ittf, ${'$'}{ca}
                    ${'$'}else
                        . ${'$'}{ca_inverse}
                            + Productions
                    ${'$'}if opt.section != 'Project'
                        html/a${'('} Project, /ittf/site/project.html.ittf, ${'$'}{ca}
                    ${'$'}else
                        . ${'$'}{ca_inverse}
                            + Project
            . flex-row
                ${'$'}if opt.section != 'Docs'
                    html/a${'('} Docs, /ittf/site/docs/concepts/overview.html.ittf, ${'$'}{ca}
                ${'$'}else
                    . ${'$'}{ca_inverse}
                        + Docs
                html/a${'('} Github, https://github.com/stfnbssl/wizzi, ${'$'}{ca}
            . flex-row m-r-x
                ${'$'}if locals.user
                    html/a${'('} Profile, /account/profile, ${'$'}{ca}
                    html/a${'('} Log Out, /auth/logout, ${'$'}{ca}
                ${'$'}else
                    html/a${'('} Log In, /auth/login, ${'$'}{ca}

		${'$'}hook

		${'$'}hook body-scripts-0
		${'$'}if opt.isWizziStudio && !opt.useFirebase
    		div
    			# wizzi-browser-status
    			# wizzi-browser-log
    			# wizzi-browser-content
		./site-scripts${'('} &opt )
        ${'$'}if opt.stickyNav
            script
                let header = document.getElementById("__main_navbar")
                let stickyBar = document.getElementById("${'$'}{opt.stickyNav}")
                ${'$'}if opt.stickyNavLogo
                    let stickyLogo = document.getElementById("${'$'}{opt.stickyNavLogo}")
                let stickyPos = ${'$'}{opt.stickyNavOffset} $$ stickyBar.getBoundingClientRect().top
                _ window.addEventListener
                    @ "scroll"
                    => 
                        param e
                        let scrollPos = window.scrollY
                        $$ loog 'pre sticki', stickyPos, scrollPos, scrollPos > stickyPos
                        if scrollPos > stickyPos
                            _ stickyBar.classList.add('sticky')
                            _ header.classList.add('${'$'}{opt.stickyNav}OffsetMargin')
                            ${'$'}if opt.stickyNavLogo
                                _ stickyLogo.classList.add('visible')
                                _ stickyLogo.classList.remove('hidden')
                            $$ loog 'sticki', scrollPos
                        else
                            _ stickyBar.classList.remove('sticky')
                            _ header.classList.remove('${'$'}{opt.stickyNav}OffsetMargin')
                            ${'$'}if opt.stickyNavLogo
                                _ stickyLogo.classList.remove('visible')
                                _ stickyLogo.classList.add('hidden')
		${'$'}hook body-scripts
		${'$'}hook body-scripts-2
        ${'$'}hook body-scripts-3
		
        $$ TODO (when all this is on MongoDb) ${'$'}include html/scripts/meta

        ${'$'}if opt.useHighlight
            script
                _ document.addEventListener
                    @ 'DOMContentLoaded'
                    => 
                        param event
                        _ document.querySelectorAll
                            @ 'pre .hljs'
                            ._ forEach
                                =>
                                    param block
                                    _ hljs.highlightBlock(block)